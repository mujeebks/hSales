//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Nogales.DataProvider.AOD_WS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IAeXMLBridgebinding", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmployeeSelfServiceOperation))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAePayrollEarning))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeACALEDMonthSumm))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeImportLogItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmpACAPeriod))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmpClosedMeasurementPeriod))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmpActLog))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeControlGroup))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmpBenefitBalance))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeBillingItemEx))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeTimeOffRequestState))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeShiftSchedule))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeShiftTransaction))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeShiftLineDetail))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeBillingItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeTimeClockStation))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeAccessAccountActivity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeUsageItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeRateAssignment))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeClientVendorOpResults))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeTransaction))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeBrowserMenuItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeBasicDataItem))]
    public partial class IAeXMLBridgeservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private TSessionHeader tSessionHeaderValueField;
        
        private System.Threading.SendOrPostCallback interfaceBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTotalEmployeeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveEmployeesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInactiveEmployeesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSiteEnvironmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBaseClientDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setBaseClientDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessAccountViaAccountCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback accessAccountCodeExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemReportsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemExportsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemVendorOpsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveStatusConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInactiveStatusConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayClassesSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSchedulePatternsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClockGroupsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHourlyStatusTypesSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCorrectiveActionsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClustersSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClusterStationsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClockGroupStationsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBenefitsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayDesignationsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScheduleStylesSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserGroupsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBrowserProfilesSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentBrowserProfileMenuItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHyperQueriesSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayPeriodClassDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayPeriodClassesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyEmployeeBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyEmployeeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyClientExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyClientReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyClientVendorOpOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyAccessAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeBasicByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeBasicBySSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeBasicByBadgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeBasicByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetailByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetailBySSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetailByBadgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetailByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeWorkgroupAssignmentByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeWorkgroupAssignmentByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeRatePayTypeAssignmentByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeRatePayTypeAssignmentByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback reassignEmployeeWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback reassignEmployeeRatePayTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback maintainEmployeeBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback maintainEmployeeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback maintainEmployeeResultDescrOperationCompleted;
        
        private System.Threading.SendOrPostCallback dateRangeEnumDescrOperationCompleted;
        
        private System.Threading.SendOrPostCallback dateRangeEnumListSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback dateRangeEmpEnumListSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveEmployeesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayrollEmployeesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInactiveEmployeesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllEmployeesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesListBasicFromHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesListDetailFromHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkgroupLevelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkgroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkgroupViaCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkgroupViaNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkgroupStructOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback addWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback nextWGNumForWGLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback delWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodFrameByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodFrameByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodSummsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodSummsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeDailySummsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeDailySummsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeTransactionsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeTransactionsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSchedulesByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSchedulesByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeEditsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeEditsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractPayPeriodSummariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeExportOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeExportOperationStringsOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeReportOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeVendorOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAccessAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAccessAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback editAccessAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayPeriodClosureStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayPeriodClosureEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAccessAccountWorkgroupAccessRightByAccountCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAccessAccountAllWorkgroupAccessRightsByAccountCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessAccountWorkgroupAccessRightsByAccountCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractRangedTransactionsUsingHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractRangedSchedulesUsingHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeePunchByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeePunchByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback punchEmployeeNowByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback punchEmployeeNowByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeTransferByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeTransferByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback transferEmployeeNowByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback transferEmployeeNowByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback recomputePendingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback recomputeEmployeeByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback recomputeEmployeeByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback recomputeEmployeeAccrualsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback recomputeEmployeeAccrualsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback employeeBenefitBalanceAsOfByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback employeeBenefitBalanceAsOfByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback adjustEmployeeBenefitBalanceByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback adjustEmployeeBenefitBalanceByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeBenefitAdjustmentsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeBenefitAdjustmentsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeBenefitActivityByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeBenefitActivityByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeESSPINByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeESSPINByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeESSPINByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeESSPINByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeESSEMailByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeESSEMailByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeESSEMailByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeESSEMailByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyRatePayTypeAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeRateHistoryByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeRateHistoryByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeRateHistoryByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeRateHistoryByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeFilekeyByBadgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadUsageItemsInRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessAccountViaUniqueIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadAccessAccountActivitysInRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractTimeClockStationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadBillingItemsInRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback recomputeEmployeeIncidentsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback recomputeEmployeeIncidentsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback dateRangeEnumStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback dateRangeEnumEndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServerUTCDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWorkgroupLevelLabelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftDetailsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftDetailsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftTransactionsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftTransactionsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftSchedulesByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeePeriodShiftSchedulesByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeDailySummsInPeriodByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeDailySummsInPeriodByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentAccessAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback performTimeCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelTimeCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTimeCardEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback authPeriodTimeCardByFileKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback authPeriodTimeCardByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback unAuthPeriodTimeCardByFileKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback unAuthPeriodTimeCardByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTimeOffRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractTimeOffRequestStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractLeaveRequestsByStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeLeaveRequestsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeLeaveRequestsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback describeLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback approveLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback denyLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesSearchListBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesSearchListDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeTZByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeTZByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeTZOffsetByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeTZOffsetByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeTZObservesDSTByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeTZObservesDSTByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReasonCodesSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSummsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSummsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeDurationTotalsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeDurationTotalsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyEmployeeDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetail2ByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetail2BySSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetail2ByBadgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeDetail2ByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback maintainEmployeeDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesListDetail2FromHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesSearchListDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getManuallySelectedSetupDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setManuallySelectedSetupDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getManuallySelectedEmployeeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getManuallySelectedCalculatedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setManuallySelectedEmployeeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractWGXlatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback maintainWGXlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeWGXlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGlobalPayDesMappingsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGlobalPayDesMappingSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGlobalPayDesMappingSetMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGlobalPayDesMappingSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendGlobalPayDesMappingSetMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeGlobalPayDesMappingSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractAttendanceMultiFormActivityUsingHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeSchedulesInRangeByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeSchedulesInRangeByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeScheduleByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeScheduleByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserAuthPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPreAuthUserLoginURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadBillingItemsExInRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSchedules2ByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSchedules2ByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractRangedSchedules2UsingHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeSchedule2ByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeSchedule2ByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeScheduleByUniqueIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTimeOffRequestExOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTimeOffRequestMessOperationCompleted;
        
        private System.Threading.SendOrPostCallback empRemoveLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback empRemoveLeaveRequestEntryMessOperationCompleted;
        
        private System.Threading.SendOrPostCallback approveLeaveRequestEntryExOperationCompleted;
        
        private System.Threading.SendOrPostCallback approveLeaveRequestEntryMessOperationCompleted;
        
        private System.Threading.SendOrPostCallback denyLeaveRequestEntryExOperationCompleted;
        
        private System.Threading.SendOrPostCallback denyLeaveRequestEntryMessOperationCompleted;
        
        private System.Threading.SendOrPostCallback leaveRequestIsCancelableOperationCompleted;
        
        private System.Threading.SendOrPostCallback leaveRequestIsRemovableOperationCompleted;
        
        private System.Threading.SendOrPostCallback approveCancelLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback approveCancelLeaveRequestEntryMessOperationCompleted;
        
        private System.Threading.SendOrPostCallback denyCancelLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback denyCancelLeaveRequestEntryMessOperationCompleted;
        
        private System.Threading.SendOrPostCallback empCancelLeaveRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback empCancelLeaveRequestEntryMessOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeLeaveRequestHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeLeaveRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeBenefitBalancesAsOfByFileKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeBenefitBalancesAsOfByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeBenefitBalancesAsOfUsingHyperQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeTransferRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEmployeeTransferRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEmployeeTransferRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeTransferRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeTransferRatesByFileKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeTransferRatesByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesListBasicFromHyperQueryWorkgroupFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesListDetailFromHyperQueryWorkgroupFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesListDetail2FromHyperQueryWorkgroupFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyEmployeeACAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeACAByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeACABySSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeACAByBadgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeACAByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmployeeACAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getControlGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeEmployeeACAFullTimeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback restartEmployeeACAPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback revertEmployeeACAAssignmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFirstDateOfACAServiceHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeActivityLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback flushEmployeeActivityLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExpiredUnaddressedMeasurementPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeMeasurementPeriodRecommendationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseEmployeeMeasurementPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseClosedEmployeeMeasurementPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeACADateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClosedEmployeeMeasurementPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeACAPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeMeasurementPeriodWasClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeEarliestStabilityPeriodStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmpESSPreAuthLoginURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmployeeRateHistoryEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback maintainPayrollEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitPayrollEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractImportLogsFromImportEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmptyPayrollEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPayrollEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractNewDBElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateNewDBElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractDeptXlateItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDeptXlateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDeptXlateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDeptXlateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractACALEDSummariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractACAEmployeesFTStatusAsOfOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitEmployeeEarningsOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeGeoPunchByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendEmployeeGeoPunchByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback punchEmployeeGeoNowByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback punchEmployeeGeoNowByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerEmployeeGPSPresenceByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerEmployeeGPSPresenceByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeGPSRegistrationsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeGPSRegistrationsByFilekeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSelfServiceOperationsByFileKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractEmployeeSelfServiceOperationsByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback employeeQuickBalanceAsOfByFileKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback employeeQuickBalanceAsOfByIDNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemImportsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeImportOperationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IAeXMLBridgeservice() {
            this.Url = global::Nogales.DataProvider.Properties.Settings.Default.Nogales_DataProvider_com_attendanceondemand_aodws_IAeXMLBridgeservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public TSessionHeader TSessionHeaderValue {
            get {
                return this.tSessionHeaderValueField;
            }
            set {
                this.tSessionHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event interfaceBuildCompletedEventHandler interfaceBuildCompleted;
        
        /// <remarks/>
        public event getCompanyNameCompletedEventHandler getCompanyNameCompleted;
        
        /// <remarks/>
        public event getTotalEmployeeCountCompletedEventHandler getTotalEmployeeCountCompleted;
        
        /// <remarks/>
        public event getActiveEmployeesCountCompletedEventHandler getActiveEmployeesCountCompleted;
        
        /// <remarks/>
        public event getInactiveEmployeesCountCompletedEventHandler getInactiveEmployeesCountCompleted;
        
        /// <remarks/>
        public event getSiteEnvironmentCompletedEventHandler getSiteEnvironmentCompleted;
        
        /// <remarks/>
        public event getBaseClientDataCompletedEventHandler getBaseClientDataCompleted;
        
        /// <remarks/>
        public event setBaseClientDataCompletedEventHandler setBaseClientDataCompleted;
        
        /// <remarks/>
        public event getAccessAccountsCompletedEventHandler getAccessAccountsCompleted;
        
        /// <remarks/>
        public event getAccessAccountViaAccountCodeCompletedEventHandler getAccessAccountViaAccountCodeCompleted;
        
        /// <remarks/>
        public event accessAccountCodeExistsCompletedEventHandler accessAccountCodeExistsCompleted;
        
        /// <remarks/>
        public event getSystemReportsBasicCompletedEventHandler getSystemReportsBasicCompleted;
        
        /// <remarks/>
        public event getSystemExportsBasicCompletedEventHandler getSystemExportsBasicCompleted;
        
        /// <remarks/>
        public event getSystemVendorOpsBasicCompletedEventHandler getSystemVendorOpsBasicCompleted;
        
        /// <remarks/>
        public event getActiveStatusConditionsCompletedEventHandler getActiveStatusConditionsCompleted;
        
        /// <remarks/>
        public event getInactiveStatusConditionsCompletedEventHandler getInactiveStatusConditionsCompleted;
        
        /// <remarks/>
        public event getPayTypesCompletedEventHandler getPayTypesCompleted;
        
        /// <remarks/>
        public event getPayClassesSimpleCompletedEventHandler getPayClassesSimpleCompleted;
        
        /// <remarks/>
        public event getSchedulePatternsSimpleCompletedEventHandler getSchedulePatternsSimpleCompleted;
        
        /// <remarks/>
        public event getClockGroupsSimpleCompletedEventHandler getClockGroupsSimpleCompleted;
        
        /// <remarks/>
        public event getHourlyStatusTypesSimpleCompletedEventHandler getHourlyStatusTypesSimpleCompleted;
        
        /// <remarks/>
        public event getCorrectiveActionsSimpleCompletedEventHandler getCorrectiveActionsSimpleCompleted;
        
        /// <remarks/>
        public event getStationsSimpleCompletedEventHandler getStationsSimpleCompleted;
        
        /// <remarks/>
        public event getClustersSimpleCompletedEventHandler getClustersSimpleCompleted;
        
        /// <remarks/>
        public event getClusterStationsSimpleCompletedEventHandler getClusterStationsSimpleCompleted;
        
        /// <remarks/>
        public event getClockGroupStationsSimpleCompletedEventHandler getClockGroupStationsSimpleCompleted;
        
        /// <remarks/>
        public event getBenefitsSimpleCompletedEventHandler getBenefitsSimpleCompleted;
        
        /// <remarks/>
        public event getPayDesignationsSimpleCompletedEventHandler getPayDesignationsSimpleCompleted;
        
        /// <remarks/>
        public event getScheduleStylesSimpleCompletedEventHandler getScheduleStylesSimpleCompleted;
        
        /// <remarks/>
        public event getUserGroupsSimpleCompletedEventHandler getUserGroupsSimpleCompleted;
        
        /// <remarks/>
        public event getBrowserProfilesSimpleCompletedEventHandler getBrowserProfilesSimpleCompleted;
        
        /// <remarks/>
        public event getCurrentBrowserProfileMenuItemsCompletedEventHandler getCurrentBrowserProfileMenuItemsCompleted;
        
        /// <remarks/>
        public event getHyperQueriesSimpleCompletedEventHandler getHyperQueriesSimpleCompleted;
        
        /// <remarks/>
        public event getPayPeriodClassDataCompletedEventHandler getPayPeriodClassDataCompleted;
        
        /// <remarks/>
        public event getPayPeriodClassesCompletedEventHandler getPayPeriodClassesCompleted;
        
        /// <remarks/>
        public event getEmptyEmployeeBasicCompletedEventHandler getEmptyEmployeeBasicCompleted;
        
        /// <remarks/>
        public event getEmptyEmployeeDetailCompletedEventHandler getEmptyEmployeeDetailCompleted;
        
        /// <remarks/>
        public event getEmptyClientExportCompletedEventHandler getEmptyClientExportCompleted;
        
        /// <remarks/>
        public event getEmptyClientReportCompletedEventHandler getEmptyClientReportCompleted;
        
        /// <remarks/>
        public event getEmptyClientVendorOpCompletedEventHandler getEmptyClientVendorOpCompleted;
        
        /// <remarks/>
        public event getEmptyAccessAccountCompletedEventHandler getEmptyAccessAccountCompleted;
        
        /// <remarks/>
        public event getEmployeeBasicByIDNumCompletedEventHandler getEmployeeBasicByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeBasicBySSNCompletedEventHandler getEmployeeBasicBySSNCompleted;
        
        /// <remarks/>
        public event getEmployeeBasicByBadgeCompletedEventHandler getEmployeeBasicByBadgeCompleted;
        
        /// <remarks/>
        public event getEmployeeBasicByFilekeyCompletedEventHandler getEmployeeBasicByFilekeyCompleted;
        
        /// <remarks/>
        public event getEmployeeDetailByIDNumCompletedEventHandler getEmployeeDetailByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeDetailBySSNCompletedEventHandler getEmployeeDetailBySSNCompleted;
        
        /// <remarks/>
        public event getEmployeeDetailByBadgeCompletedEventHandler getEmployeeDetailByBadgeCompleted;
        
        /// <remarks/>
        public event getEmployeeDetailByFilekeyCompletedEventHandler getEmployeeDetailByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeWorkgroupAssignmentByFilekeyCompletedEventHandler extractEmployeeWorkgroupAssignmentByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeWorkgroupAssignmentByIDNumCompletedEventHandler extractEmployeeWorkgroupAssignmentByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeRatePayTypeAssignmentByFilekeyCompletedEventHandler extractEmployeeRatePayTypeAssignmentByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeRatePayTypeAssignmentByIDNumCompletedEventHandler extractEmployeeRatePayTypeAssignmentByIDNumCompleted;
        
        /// <remarks/>
        public event reassignEmployeeWorkgroupCompletedEventHandler reassignEmployeeWorkgroupCompleted;
        
        /// <remarks/>
        public event reassignEmployeeRatePayTypeCompletedEventHandler reassignEmployeeRatePayTypeCompleted;
        
        /// <remarks/>
        public event setEmployeeBasicCompletedEventHandler setEmployeeBasicCompleted;
        
        /// <remarks/>
        public event setEmployeeDetailCompletedEventHandler setEmployeeDetailCompleted;
        
        /// <remarks/>
        public event maintainEmployeeBasicCompletedEventHandler maintainEmployeeBasicCompleted;
        
        /// <remarks/>
        public event maintainEmployeeDetailCompletedEventHandler maintainEmployeeDetailCompleted;
        
        /// <remarks/>
        public event maintainEmployeeResultDescrCompletedEventHandler maintainEmployeeResultDescrCompleted;
        
        /// <remarks/>
        public event dateRangeEnumDescrCompletedEventHandler dateRangeEnumDescrCompleted;
        
        /// <remarks/>
        public event dateRangeEnumListSimpleCompletedEventHandler dateRangeEnumListSimpleCompleted;
        
        /// <remarks/>
        public event dateRangeEmpEnumListSimpleCompletedEventHandler dateRangeEmpEnumListSimpleCompleted;
        
        /// <remarks/>
        public event getActiveEmployeesListCompletedEventHandler getActiveEmployeesListCompleted;
        
        /// <remarks/>
        public event getPayrollEmployeesListCompletedEventHandler getPayrollEmployeesListCompleted;
        
        /// <remarks/>
        public event getInactiveEmployeesListCompletedEventHandler getInactiveEmployeesListCompleted;
        
        /// <remarks/>
        public event getAllEmployeesListCompletedEventHandler getAllEmployeesListCompleted;
        
        /// <remarks/>
        public event getEmployeesListBasicFromHyperQueryCompletedEventHandler getEmployeesListBasicFromHyperQueryCompleted;
        
        /// <remarks/>
        public event getEmployeesListDetailFromHyperQueryCompletedEventHandler getEmployeesListDetailFromHyperQueryCompleted;
        
        /// <remarks/>
        public event getWorkgroupLevelDetailsCompletedEventHandler getWorkgroupLevelDetailsCompleted;
        
        /// <remarks/>
        public event getWorkgroupsCompletedEventHandler getWorkgroupsCompleted;
        
        /// <remarks/>
        public event getWorkgroupCompletedEventHandler getWorkgroupCompleted;
        
        /// <remarks/>
        public event getWorkgroupViaCodeCompletedEventHandler getWorkgroupViaCodeCompleted;
        
        /// <remarks/>
        public event getWorkgroupViaNameCompletedEventHandler getWorkgroupViaNameCompleted;
        
        /// <remarks/>
        public event getWorkgroupStructCompletedEventHandler getWorkgroupStructCompleted;
        
        /// <remarks/>
        public event setWorkgroupCompletedEventHandler setWorkgroupCompleted;
        
        /// <remarks/>
        public event addWorkgroupCompletedEventHandler addWorkgroupCompleted;
        
        /// <remarks/>
        public event nextWGNumForWGLevelCompletedEventHandler nextWGNumForWGLevelCompleted;
        
        /// <remarks/>
        public event delWorkgroupCompletedEventHandler delWorkgroupCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodFrameByFilekeyCompletedEventHandler extractEmployeePeriodFrameByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodFrameByIDNumCompletedEventHandler extractEmployeePeriodFrameByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodSummsByFilekeyCompletedEventHandler extractEmployeePeriodSummsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodSummsByIDNumCompletedEventHandler extractEmployeePeriodSummsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeDailySummsByFilekeyCompletedEventHandler extractEmployeeDailySummsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeDailySummsByIDNumCompletedEventHandler extractEmployeeDailySummsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftsByFilekeyCompletedEventHandler extractEmployeePeriodShiftsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftsByIDNumCompletedEventHandler extractEmployeePeriodShiftsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeTransactionsByFilekeyCompletedEventHandler extractEmployeeTransactionsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeTransactionsByIDNumCompletedEventHandler extractEmployeeTransactionsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeSchedulesByFilekeyCompletedEventHandler extractEmployeeSchedulesByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeSchedulesByIDNumCompletedEventHandler extractEmployeeSchedulesByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeEditsByFilekeyCompletedEventHandler extractEmployeeEditsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeEditsByIDNumCompletedEventHandler extractEmployeeEditsByIDNumCompleted;
        
        /// <remarks/>
        public event extractPayPeriodSummariesCompletedEventHandler extractPayPeriodSummariesCompleted;
        
        /// <remarks/>
        public event executeExportOperationCompletedEventHandler executeExportOperationCompleted;
        
        /// <remarks/>
        public event executeExportOperationStringsCompletedEventHandler executeExportOperationStringsCompleted;
        
        /// <remarks/>
        public event executeReportOperationCompletedEventHandler executeReportOperationCompleted;
        
        /// <remarks/>
        public event executeVendorOperationCompletedEventHandler executeVendorOperationCompleted;
        
        /// <remarks/>
        public event addAccessAccountCompletedEventHandler addAccessAccountCompleted;
        
        /// <remarks/>
        public event removeAccessAccountCompletedEventHandler removeAccessAccountCompleted;
        
        /// <remarks/>
        public event editAccessAccountCompletedEventHandler editAccessAccountCompleted;
        
        /// <remarks/>
        public event getPayPeriodClosureStatsCompletedEventHandler getPayPeriodClosureStatsCompleted;
        
        /// <remarks/>
        public event getPayPeriodClosureEmployeesCompletedEventHandler getPayPeriodClosureEmployeesCompleted;
        
        /// <remarks/>
        public event addAccessAccountWorkgroupAccessRightByAccountCodeCompletedEventHandler addAccessAccountWorkgroupAccessRightByAccountCodeCompleted;
        
        /// <remarks/>
        public event removeAccessAccountAllWorkgroupAccessRightsByAccountCodeCompletedEventHandler removeAccessAccountAllWorkgroupAccessRightsByAccountCodeCompleted;
        
        /// <remarks/>
        public event getAccessAccountWorkgroupAccessRightsByAccountCodeCompletedEventHandler getAccessAccountWorkgroupAccessRightsByAccountCodeCompleted;
        
        /// <remarks/>
        public event extractRangedTransactionsUsingHyperQueryCompletedEventHandler extractRangedTransactionsUsingHyperQueryCompleted;
        
        /// <remarks/>
        public event extractRangedSchedulesUsingHyperQueryCompletedEventHandler extractRangedSchedulesUsingHyperQueryCompleted;
        
        /// <remarks/>
        public event appendEmployeePunchByIDNumCompletedEventHandler appendEmployeePunchByIDNumCompleted;
        
        /// <remarks/>
        public event appendEmployeePunchByFilekeyCompletedEventHandler appendEmployeePunchByFilekeyCompleted;
        
        /// <remarks/>
        public event punchEmployeeNowByFilekeyCompletedEventHandler punchEmployeeNowByFilekeyCompleted;
        
        /// <remarks/>
        public event punchEmployeeNowByIDNumCompletedEventHandler punchEmployeeNowByIDNumCompleted;
        
        /// <remarks/>
        public event appendEmployeeTransferByFilekeyCompletedEventHandler appendEmployeeTransferByFilekeyCompleted;
        
        /// <remarks/>
        public event appendEmployeeTransferByIDNumCompletedEventHandler appendEmployeeTransferByIDNumCompleted;
        
        /// <remarks/>
        public event transferEmployeeNowByFilekeyCompletedEventHandler transferEmployeeNowByFilekeyCompleted;
        
        /// <remarks/>
        public event transferEmployeeNowByIDNumCompletedEventHandler transferEmployeeNowByIDNumCompleted;
        
        /// <remarks/>
        public event recomputePendingRequestsCompletedEventHandler recomputePendingRequestsCompleted;
        
        /// <remarks/>
        public event recomputeEmployeeByFilekeyCompletedEventHandler recomputeEmployeeByFilekeyCompleted;
        
        /// <remarks/>
        public event recomputeEmployeeByIDNumCompletedEventHandler recomputeEmployeeByIDNumCompleted;
        
        /// <remarks/>
        public event recomputeEmployeeAccrualsByFilekeyCompletedEventHandler recomputeEmployeeAccrualsByFilekeyCompleted;
        
        /// <remarks/>
        public event recomputeEmployeeAccrualsByIDNumCompletedEventHandler recomputeEmployeeAccrualsByIDNumCompleted;
        
        /// <remarks/>
        public event employeeBenefitBalanceAsOfByFilekeyCompletedEventHandler employeeBenefitBalanceAsOfByFilekeyCompleted;
        
        /// <remarks/>
        public event employeeBenefitBalanceAsOfByIDNumCompletedEventHandler employeeBenefitBalanceAsOfByIDNumCompleted;
        
        /// <remarks/>
        public event adjustEmployeeBenefitBalanceByFilekeyCompletedEventHandler adjustEmployeeBenefitBalanceByFilekeyCompleted;
        
        /// <remarks/>
        public event adjustEmployeeBenefitBalanceByIDNumCompletedEventHandler adjustEmployeeBenefitBalanceByIDNumCompleted;
        
        /// <remarks/>
        public event removeEmployeeBenefitAdjustmentsByFilekeyCompletedEventHandler removeEmployeeBenefitAdjustmentsByFilekeyCompleted;
        
        /// <remarks/>
        public event removeEmployeeBenefitAdjustmentsByIDNumCompletedEventHandler removeEmployeeBenefitAdjustmentsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeBenefitActivityByFilekeyCompletedEventHandler extractEmployeeBenefitActivityByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeBenefitActivityByIDNumCompletedEventHandler extractEmployeeBenefitActivityByIDNumCompleted;
        
        /// <remarks/>
        public event setEmployeeESSPINByFilekeyCompletedEventHandler setEmployeeESSPINByFilekeyCompleted;
        
        /// <remarks/>
        public event setEmployeeESSPINByIDNumCompletedEventHandler setEmployeeESSPINByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeESSPINByFilekeyCompletedEventHandler getEmployeeESSPINByFilekeyCompleted;
        
        /// <remarks/>
        public event getEmployeeESSPINByIDNumCompletedEventHandler getEmployeeESSPINByIDNumCompleted;
        
        /// <remarks/>
        public event setEmployeeESSEMailByFilekeyCompletedEventHandler setEmployeeESSEMailByFilekeyCompleted;
        
        /// <remarks/>
        public event setEmployeeESSEMailByIDNumCompletedEventHandler setEmployeeESSEMailByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeESSEMailByFilekeyCompletedEventHandler getEmployeeESSEMailByFilekeyCompleted;
        
        /// <remarks/>
        public event getEmployeeESSEMailByIDNumCompletedEventHandler getEmployeeESSEMailByIDNumCompleted;
        
        /// <remarks/>
        public event getEmptyRatePayTypeAssignmentCompletedEventHandler getEmptyRatePayTypeAssignmentCompleted;
        
        /// <remarks/>
        public event getEmployeeRateHistoryByFilekeyCompletedEventHandler getEmployeeRateHistoryByFilekeyCompleted;
        
        /// <remarks/>
        public event getEmployeeRateHistoryByIDNumCompletedEventHandler getEmployeeRateHistoryByIDNumCompleted;
        
        /// <remarks/>
        public event removeEmployeeRateHistoryByFilekeyCompletedEventHandler removeEmployeeRateHistoryByFilekeyCompleted;
        
        /// <remarks/>
        public event removeEmployeeRateHistoryByIDNumCompletedEventHandler removeEmployeeRateHistoryByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeFilekeyByBadgeCompletedEventHandler getEmployeeFilekeyByBadgeCompleted;
        
        /// <remarks/>
        public event loadUsageItemsInRangeCompletedEventHandler loadUsageItemsInRangeCompleted;
        
        /// <remarks/>
        public event getAccessAccountViaUniqueIDCompletedEventHandler getAccessAccountViaUniqueIDCompleted;
        
        /// <remarks/>
        public event loadAccessAccountActivitysInRangeCompletedEventHandler loadAccessAccountActivitysInRangeCompleted;
        
        /// <remarks/>
        public event extractTimeClockStationsCompletedEventHandler extractTimeClockStationsCompleted;
        
        /// <remarks/>
        public event loadBillingItemsInRangeCompletedEventHandler loadBillingItemsInRangeCompleted;
        
        /// <remarks/>
        public event recomputeEmployeeIncidentsByFilekeyCompletedEventHandler recomputeEmployeeIncidentsByFilekeyCompleted;
        
        /// <remarks/>
        public event recomputeEmployeeIncidentsByIDNumCompletedEventHandler recomputeEmployeeIncidentsByIDNumCompleted;
        
        /// <remarks/>
        public event dateRangeEnumStartDateCompletedEventHandler dateRangeEnumStartDateCompleted;
        
        /// <remarks/>
        public event dateRangeEnumEndDateCompletedEventHandler dateRangeEnumEndDateCompleted;
        
        /// <remarks/>
        public event ClientServerDateTimeCompletedEventHandler ClientServerDateTimeCompleted;
        
        /// <remarks/>
        public event ServerUTCDateTimeCompletedEventHandler ServerUTCDateTimeCompleted;
        
        /// <remarks/>
        public event setWorkgroupLevelLabelsCompletedEventHandler setWorkgroupLevelLabelsCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftDetailsByFilekeyCompletedEventHandler extractEmployeePeriodShiftDetailsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftDetailsByIDNumCompletedEventHandler extractEmployeePeriodShiftDetailsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftTransactionsByFilekeyCompletedEventHandler extractEmployeePeriodShiftTransactionsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftTransactionsByIDNumCompletedEventHandler extractEmployeePeriodShiftTransactionsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftSchedulesByFilekeyCompletedEventHandler extractEmployeePeriodShiftSchedulesByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeePeriodShiftSchedulesByIDNumCompletedEventHandler extractEmployeePeriodShiftSchedulesByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeDailySummsInPeriodByFilekeyCompletedEventHandler extractEmployeeDailySummsInPeriodByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeDailySummsInPeriodByIDNumCompletedEventHandler extractEmployeeDailySummsInPeriodByIDNumCompleted;
        
        /// <remarks/>
        public event getCurrentAccessAccountCompletedEventHandler getCurrentAccessAccountCompleted;
        
        /// <remarks/>
        public event performTimeCardEditCompletedEventHandler performTimeCardEditCompleted;
        
        /// <remarks/>
        public event cancelTimeCardEditCompletedEventHandler cancelTimeCardEditCompleted;
        
        /// <remarks/>
        public event deleteTimeCardEditCompletedEventHandler deleteTimeCardEditCompleted;
        
        /// <remarks/>
        public event authPeriodTimeCardByFileKeyCompletedEventHandler authPeriodTimeCardByFileKeyCompleted;
        
        /// <remarks/>
        public event authPeriodTimeCardByIDNumCompletedEventHandler authPeriodTimeCardByIDNumCompleted;
        
        /// <remarks/>
        public event unAuthPeriodTimeCardByFileKeyCompletedEventHandler unAuthPeriodTimeCardByFileKeyCompleted;
        
        /// <remarks/>
        public event unAuthPeriodTimeCardByIDNumCompletedEventHandler unAuthPeriodTimeCardByIDNumCompleted;
        
        /// <remarks/>
        public event submitTimeOffRequestCompletedEventHandler submitTimeOffRequestCompleted;
        
        /// <remarks/>
        public event extractTimeOffRequestStatesCompletedEventHandler extractTimeOffRequestStatesCompleted;
        
        /// <remarks/>
        public event extractLeaveRequestsByStateCompletedEventHandler extractLeaveRequestsByStateCompleted;
        
        /// <remarks/>
        public event extractEmployeeLeaveRequestsByFilekeyCompletedEventHandler extractEmployeeLeaveRequestsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeLeaveRequestsByIDNumCompletedEventHandler extractEmployeeLeaveRequestsByIDNumCompleted;
        
        /// <remarks/>
        public event removeLeaveRequestEntryCompletedEventHandler removeLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event describeLeaveRequestEntryCompletedEventHandler describeLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event approveLeaveRequestEntryCompletedEventHandler approveLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event denyLeaveRequestEntryCompletedEventHandler denyLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event getEmployeesSearchListBasicCompletedEventHandler getEmployeesSearchListBasicCompleted;
        
        /// <remarks/>
        public event getEmployeesSearchListDetailCompletedEventHandler getEmployeesSearchListDetailCompleted;
        
        /// <remarks/>
        public event setEmployeeTZByFilekeyCompletedEventHandler setEmployeeTZByFilekeyCompleted;
        
        /// <remarks/>
        public event setEmployeeTZByIDNumCompletedEventHandler setEmployeeTZByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeTZOffsetByFilekeyCompletedEventHandler getEmployeeTZOffsetByFilekeyCompleted;
        
        /// <remarks/>
        public event getEmployeeTZOffsetByIDNumCompletedEventHandler getEmployeeTZOffsetByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeTZObservesDSTByFilekeyCompletedEventHandler getEmployeeTZObservesDSTByFilekeyCompleted;
        
        /// <remarks/>
        public event getEmployeeTZObservesDSTByIDNumCompletedEventHandler getEmployeeTZObservesDSTByIDNumCompleted;
        
        /// <remarks/>
        public event getReasonCodesSimpleCompletedEventHandler getReasonCodesSimpleCompleted;
        
        /// <remarks/>
        public event extractEmployeeSummsByFilekeyCompletedEventHandler extractEmployeeSummsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeSummsByIDNumCompletedEventHandler extractEmployeeSummsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeDurationTotalsByFilekeyCompletedEventHandler extractEmployeeDurationTotalsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeDurationTotalsByIDNumCompletedEventHandler extractEmployeeDurationTotalsByIDNumCompleted;
        
        /// <remarks/>
        public event getEmptyEmployeeDetail2CompletedEventHandler getEmptyEmployeeDetail2Completed;
        
        /// <remarks/>
        public event getEmployeeDetail2ByIDNumCompletedEventHandler getEmployeeDetail2ByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeDetail2BySSNCompletedEventHandler getEmployeeDetail2BySSNCompleted;
        
        /// <remarks/>
        public event getEmployeeDetail2ByBadgeCompletedEventHandler getEmployeeDetail2ByBadgeCompleted;
        
        /// <remarks/>
        public event getEmployeeDetail2ByFilekeyCompletedEventHandler getEmployeeDetail2ByFilekeyCompleted;
        
        /// <remarks/>
        public event setEmployeeDetail2CompletedEventHandler setEmployeeDetail2Completed;
        
        /// <remarks/>
        public event maintainEmployeeDetail2CompletedEventHandler maintainEmployeeDetail2Completed;
        
        /// <remarks/>
        public event getEmployeesListDetail2FromHyperQueryCompletedEventHandler getEmployeesListDetail2FromHyperQueryCompleted;
        
        /// <remarks/>
        public event getEmployeesSearchListDetail2CompletedEventHandler getEmployeesSearchListDetail2Completed;
        
        /// <remarks/>
        public event getManuallySelectedSetupDataCompletedEventHandler getManuallySelectedSetupDataCompleted;
        
        /// <remarks/>
        public event setManuallySelectedSetupDataCompletedEventHandler setManuallySelectedSetupDataCompleted;
        
        /// <remarks/>
        public event getManuallySelectedEmployeeDataCompletedEventHandler getManuallySelectedEmployeeDataCompleted;
        
        /// <remarks/>
        public event getManuallySelectedCalculatedDataCompletedEventHandler getManuallySelectedCalculatedDataCompleted;
        
        /// <remarks/>
        public event setManuallySelectedEmployeeDataCompletedEventHandler setManuallySelectedEmployeeDataCompleted;
        
        /// <remarks/>
        public event extractWGXlatesCompletedEventHandler extractWGXlatesCompleted;
        
        /// <remarks/>
        public event maintainWGXlateCompletedEventHandler maintainWGXlateCompleted;
        
        /// <remarks/>
        public event removeWGXlateCompletedEventHandler removeWGXlateCompleted;
        
        /// <remarks/>
        public event getGlobalPayDesMappingsSimpleCompletedEventHandler getGlobalPayDesMappingsSimpleCompleted;
        
        /// <remarks/>
        public event getGlobalPayDesMappingSetCompletedEventHandler getGlobalPayDesMappingSetCompleted;
        
        /// <remarks/>
        public event getGlobalPayDesMappingSetMappingsCompletedEventHandler getGlobalPayDesMappingSetMappingsCompleted;
        
        /// <remarks/>
        public event setGlobalPayDesMappingSetCompletedEventHandler setGlobalPayDesMappingSetCompleted;
        
        /// <remarks/>
        public event appendGlobalPayDesMappingSetMappingCompletedEventHandler appendGlobalPayDesMappingSetMappingCompleted;
        
        /// <remarks/>
        public event removeGlobalPayDesMappingSetCompletedEventHandler removeGlobalPayDesMappingSetCompleted;
        
        /// <remarks/>
        public event extractAttendanceMultiFormActivityUsingHyperQueryCompletedEventHandler extractAttendanceMultiFormActivityUsingHyperQueryCompleted;
        
        /// <remarks/>
        public event removeEmployeeSchedulesInRangeByFilekeyCompletedEventHandler removeEmployeeSchedulesInRangeByFilekeyCompleted;
        
        /// <remarks/>
        public event removeEmployeeSchedulesInRangeByIDNumCompletedEventHandler removeEmployeeSchedulesInRangeByIDNumCompleted;
        
        /// <remarks/>
        public event appendEmployeeScheduleByFilekeyCompletedEventHandler appendEmployeeScheduleByFilekeyCompleted;
        
        /// <remarks/>
        public event appendEmployeeScheduleByIDNumCompletedEventHandler appendEmployeeScheduleByIDNumCompleted;
        
        /// <remarks/>
        public event getUserAuthPackageCompletedEventHandler getUserAuthPackageCompleted;
        
        /// <remarks/>
        public event getPreAuthUserLoginURLCompletedEventHandler getPreAuthUserLoginURLCompleted;
        
        /// <remarks/>
        public event loadBillingItemsExInRangeCompletedEventHandler loadBillingItemsExInRangeCompleted;
        
        /// <remarks/>
        public event extractEmployeeSchedules2ByFilekeyCompletedEventHandler extractEmployeeSchedules2ByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeSchedules2ByIDNumCompletedEventHandler extractEmployeeSchedules2ByIDNumCompleted;
        
        /// <remarks/>
        public event extractRangedSchedules2UsingHyperQueryCompletedEventHandler extractRangedSchedules2UsingHyperQueryCompleted;
        
        /// <remarks/>
        public event appendEmployeeSchedule2ByFilekeyCompletedEventHandler appendEmployeeSchedule2ByFilekeyCompleted;
        
        /// <remarks/>
        public event appendEmployeeSchedule2ByIDNumCompletedEventHandler appendEmployeeSchedule2ByIDNumCompleted;
        
        /// <remarks/>
        public event removeEmployeeScheduleByUniqueIDCompletedEventHandler removeEmployeeScheduleByUniqueIDCompleted;
        
        /// <remarks/>
        public event submitTimeOffRequestExCompletedEventHandler submitTimeOffRequestExCompleted;
        
        /// <remarks/>
        public event submitTimeOffRequestMessCompletedEventHandler submitTimeOffRequestMessCompleted;
        
        /// <remarks/>
        public event empRemoveLeaveRequestEntryCompletedEventHandler empRemoveLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event empRemoveLeaveRequestEntryMessCompletedEventHandler empRemoveLeaveRequestEntryMessCompleted;
        
        /// <remarks/>
        public event approveLeaveRequestEntryExCompletedEventHandler approveLeaveRequestEntryExCompleted;
        
        /// <remarks/>
        public event approveLeaveRequestEntryMessCompletedEventHandler approveLeaveRequestEntryMessCompleted;
        
        /// <remarks/>
        public event denyLeaveRequestEntryExCompletedEventHandler denyLeaveRequestEntryExCompleted;
        
        /// <remarks/>
        public event denyLeaveRequestEntryMessCompletedEventHandler denyLeaveRequestEntryMessCompleted;
        
        /// <remarks/>
        public event leaveRequestIsCancelableCompletedEventHandler leaveRequestIsCancelableCompleted;
        
        /// <remarks/>
        public event leaveRequestIsRemovableCompletedEventHandler leaveRequestIsRemovableCompleted;
        
        /// <remarks/>
        public event approveCancelLeaveRequestEntryCompletedEventHandler approveCancelLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event approveCancelLeaveRequestEntryMessCompletedEventHandler approveCancelLeaveRequestEntryMessCompleted;
        
        /// <remarks/>
        public event denyCancelLeaveRequestEntryCompletedEventHandler denyCancelLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event denyCancelLeaveRequestEntryMessCompletedEventHandler denyCancelLeaveRequestEntryMessCompleted;
        
        /// <remarks/>
        public event empCancelLeaveRequestEntryCompletedEventHandler empCancelLeaveRequestEntryCompleted;
        
        /// <remarks/>
        public event empCancelLeaveRequestEntryMessCompletedEventHandler empCancelLeaveRequestEntryMessCompleted;
        
        /// <remarks/>
        public event extractEmployeeLeaveRequestHistCompletedEventHandler extractEmployeeLeaveRequestHistCompleted;
        
        /// <remarks/>
        public event extractEmployeeLeaveRequestCompletedEventHandler extractEmployeeLeaveRequestCompleted;
        
        /// <remarks/>
        public event getEmployeeBenefitBalancesAsOfByFileKeyCompletedEventHandler getEmployeeBenefitBalancesAsOfByFileKeyCompleted;
        
        /// <remarks/>
        public event getEmployeeBenefitBalancesAsOfByIDNumCompletedEventHandler getEmployeeBenefitBalancesAsOfByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompletedEventHandler extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompleted;
        
        /// <remarks/>
        public event getEmployeeTransferRateCompletedEventHandler getEmployeeTransferRateCompleted;
        
        /// <remarks/>
        public event addEmployeeTransferRateCompletedEventHandler addEmployeeTransferRateCompleted;
        
        /// <remarks/>
        public event updateEmployeeTransferRateCompletedEventHandler updateEmployeeTransferRateCompleted;
        
        /// <remarks/>
        public event removeEmployeeTransferRateCompletedEventHandler removeEmployeeTransferRateCompleted;
        
        /// <remarks/>
        public event getEmployeeTransferRatesByFileKeyCompletedEventHandler getEmployeeTransferRatesByFileKeyCompleted;
        
        /// <remarks/>
        public event getEmployeeTransferRatesByIDNumCompletedEventHandler getEmployeeTransferRatesByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeesListBasicFromHyperQueryWorkgroupFilterCompletedEventHandler getEmployeesListBasicFromHyperQueryWorkgroupFilterCompleted;
        
        /// <remarks/>
        public event getEmployeesListDetailFromHyperQueryWorkgroupFilterCompletedEventHandler getEmployeesListDetailFromHyperQueryWorkgroupFilterCompleted;
        
        /// <remarks/>
        public event getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompletedEventHandler getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompleted;
        
        /// <remarks/>
        public event getEmptyEmployeeACACompletedEventHandler getEmptyEmployeeACACompleted;
        
        /// <remarks/>
        public event getEmployeeACAByIDNumCompletedEventHandler getEmployeeACAByIDNumCompleted;
        
        /// <remarks/>
        public event getEmployeeACABySSNCompletedEventHandler getEmployeeACABySSNCompleted;
        
        /// <remarks/>
        public event getEmployeeACAByBadgeCompletedEventHandler getEmployeeACAByBadgeCompleted;
        
        /// <remarks/>
        public event getEmployeeACAByFilekeyCompletedEventHandler getEmployeeACAByFilekeyCompleted;
        
        /// <remarks/>
        public event setEmployeeACACompletedEventHandler setEmployeeACACompleted;
        
        /// <remarks/>
        public event getControlGroupsCompletedEventHandler getControlGroupsCompleted;
        
        /// <remarks/>
        public event changeEmployeeACAFullTimeStatusCompletedEventHandler changeEmployeeACAFullTimeStatusCompleted;
        
        /// <remarks/>
        public event restartEmployeeACAPeriodsCompletedEventHandler restartEmployeeACAPeriodsCompleted;
        
        /// <remarks/>
        public event revertEmployeeACAAssignmentsCompletedEventHandler revertEmployeeACAAssignmentsCompleted;
        
        /// <remarks/>
        public event getFirstDateOfACAServiceHoursCompletedEventHandler getFirstDateOfACAServiceHoursCompleted;
        
        /// <remarks/>
        public event getEmployeeActivityLogCompletedEventHandler getEmployeeActivityLogCompleted;
        
        /// <remarks/>
        public event flushEmployeeActivityLogCompletedEventHandler flushEmployeeActivityLogCompleted;
        
        /// <remarks/>
        public event getExpiredUnaddressedMeasurementPeriodsCompletedEventHandler getExpiredUnaddressedMeasurementPeriodsCompleted;
        
        /// <remarks/>
        public event getEmployeeMeasurementPeriodRecommendationCompletedEventHandler getEmployeeMeasurementPeriodRecommendationCompleted;
        
        /// <remarks/>
        public event CloseEmployeeMeasurementPeriodCompletedEventHandler CloseEmployeeMeasurementPeriodCompleted;
        
        /// <remarks/>
        public event ReverseClosedEmployeeMeasurementPeriodCompletedEventHandler ReverseClosedEmployeeMeasurementPeriodCompleted;
        
        /// <remarks/>
        public event getEmployeeACADateRangeCompletedEventHandler getEmployeeACADateRangeCompleted;
        
        /// <remarks/>
        public event getClosedEmployeeMeasurementPeriodsCompletedEventHandler getClosedEmployeeMeasurementPeriodsCompleted;
        
        /// <remarks/>
        public event getEmployeeACAPeriodsCompletedEventHandler getEmployeeACAPeriodsCompleted;
        
        /// <remarks/>
        public event getEmployeeMeasurementPeriodWasClosedCompletedEventHandler getEmployeeMeasurementPeriodWasClosedCompleted;
        
        /// <remarks/>
        public event getEmployeeEarliestStabilityPeriodStartCompletedEventHandler getEmployeeEarliestStabilityPeriodStartCompleted;
        
        /// <remarks/>
        public event getEmpESSPreAuthLoginURLCompletedEventHandler getEmpESSPreAuthLoginURLCompleted;
        
        /// <remarks/>
        public event removeEmployeeRateHistoryEntryCompletedEventHandler removeEmployeeRateHistoryEntryCompleted;
        
        /// <remarks/>
        public event maintainPayrollEmployeeCompletedEventHandler maintainPayrollEmployeeCompleted;
        
        /// <remarks/>
        public event submitPayrollEmployeesCompletedEventHandler submitPayrollEmployeesCompleted;
        
        /// <remarks/>
        public event extractImportLogsFromImportEventCompletedEventHandler extractImportLogsFromImportEventCompleted;
        
        /// <remarks/>
        public event getEmptyPayrollEmployeeCompletedEventHandler getEmptyPayrollEmployeeCompleted;
        
        /// <remarks/>
        public event getPayrollEmployeeCompletedEventHandler getPayrollEmployeeCompleted;
        
        /// <remarks/>
        public event extractNewDBElementsCompletedEventHandler extractNewDBElementsCompleted;
        
        /// <remarks/>
        public event updateNewDBElementCompletedEventHandler updateNewDBElementCompleted;
        
        /// <remarks/>
        public event extractDeptXlateItemsCompletedEventHandler extractDeptXlateItemsCompleted;
        
        /// <remarks/>
        public event updateDeptXlateItemCompletedEventHandler updateDeptXlateItemCompleted;
        
        /// <remarks/>
        public event addDeptXlateItemCompletedEventHandler addDeptXlateItemCompleted;
        
        /// <remarks/>
        public event removeDeptXlateItemCompletedEventHandler removeDeptXlateItemCompleted;
        
        /// <remarks/>
        public event extractACALEDSummariesCompletedEventHandler extractACALEDSummariesCompleted;
        
        /// <remarks/>
        public event extractACAEmployeesFTStatusAsOfCompletedEventHandler extractACAEmployeesFTStatusAsOfCompleted;
        
        /// <remarks/>
        public event submitEmployeeEarningsCompletedEventHandler submitEmployeeEarningsCompleted;
        
        /// <remarks/>
        public event appendEmployeeGeoPunchByIDNumCompletedEventHandler appendEmployeeGeoPunchByIDNumCompleted;
        
        /// <remarks/>
        public event appendEmployeeGeoPunchByFilekeyCompletedEventHandler appendEmployeeGeoPunchByFilekeyCompleted;
        
        /// <remarks/>
        public event punchEmployeeGeoNowByFilekeyCompletedEventHandler punchEmployeeGeoNowByFilekeyCompleted;
        
        /// <remarks/>
        public event punchEmployeeGeoNowByIDNumCompletedEventHandler punchEmployeeGeoNowByIDNumCompleted;
        
        /// <remarks/>
        public event registerEmployeeGPSPresenceByFilekeyCompletedEventHandler registerEmployeeGPSPresenceByFilekeyCompleted;
        
        /// <remarks/>
        public event registerEmployeeGPSPresenceByIDNumCompletedEventHandler registerEmployeeGPSPresenceByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeGPSRegistrationsByIDNumCompletedEventHandler extractEmployeeGPSRegistrationsByIDNumCompleted;
        
        /// <remarks/>
        public event extractEmployeeGPSRegistrationsByFilekeyCompletedEventHandler extractEmployeeGPSRegistrationsByFilekeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeSelfServiceOperationsByFileKeyCompletedEventHandler extractEmployeeSelfServiceOperationsByFileKeyCompleted;
        
        /// <remarks/>
        public event extractEmployeeSelfServiceOperationsByIDNumCompletedEventHandler extractEmployeeSelfServiceOperationsByIDNumCompleted;
        
        /// <remarks/>
        public event employeeQuickBalanceAsOfByFileKeyCompletedEventHandler employeeQuickBalanceAsOfByFileKeyCompleted;
        
        /// <remarks/>
        public event employeeQuickBalanceAsOfByIDNumCompletedEventHandler employeeQuickBalanceAsOfByIDNumCompleted;
        
        /// <remarks/>
        public event getSystemImportsBasicCompletedEventHandler getSystemImportsBasicCompleted;
        
        /// <remarks/>
        public event executeImportOperationCompletedEventHandler executeImportOperationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#interfaceBuild", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int interfaceBuild() {
            object[] results = this.Invoke("interfaceBuild", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void interfaceBuildAsync() {
            this.interfaceBuildAsync(null);
        }
        
        /// <remarks/>
        public void interfaceBuildAsync(object userState) {
            if ((this.interfaceBuildOperationCompleted == null)) {
                this.interfaceBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OninterfaceBuildOperationCompleted);
            }
            this.InvokeAsync("interfaceBuild", new object[0], this.interfaceBuildOperationCompleted, userState);
        }
        
        private void OninterfaceBuildOperationCompleted(object arg) {
            if ((this.interfaceBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.interfaceBuildCompleted(this, new interfaceBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getCompanyName", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getCompanyName() {
            object[] results = this.Invoke("getCompanyName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCompanyNameAsync() {
            this.getCompanyNameAsync(null);
        }
        
        /// <remarks/>
        public void getCompanyNameAsync(object userState) {
            if ((this.getCompanyNameOperationCompleted == null)) {
                this.getCompanyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyNameOperationCompleted);
            }
            this.InvokeAsync("getCompanyName", new object[0], this.getCompanyNameOperationCompleted, userState);
        }
        
        private void OngetCompanyNameOperationCompleted(object arg) {
            if ((this.getCompanyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyNameCompleted(this, new getCompanyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getTotalEmployeeCount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getTotalEmployeeCount() {
            object[] results = this.Invoke("getTotalEmployeeCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getTotalEmployeeCountAsync() {
            this.getTotalEmployeeCountAsync(null);
        }
        
        /// <remarks/>
        public void getTotalEmployeeCountAsync(object userState) {
            if ((this.getTotalEmployeeCountOperationCompleted == null)) {
                this.getTotalEmployeeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTotalEmployeeCountOperationCompleted);
            }
            this.InvokeAsync("getTotalEmployeeCount", new object[0], this.getTotalEmployeeCountOperationCompleted, userState);
        }
        
        private void OngetTotalEmployeeCountOperationCompleted(object arg) {
            if ((this.getTotalEmployeeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTotalEmployeeCountCompleted(this, new getTotalEmployeeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getActiveEmployeesCount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getActiveEmployeesCount() {
            object[] results = this.Invoke("getActiveEmployeesCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getActiveEmployeesCountAsync() {
            this.getActiveEmployeesCountAsync(null);
        }
        
        /// <remarks/>
        public void getActiveEmployeesCountAsync(object userState) {
            if ((this.getActiveEmployeesCountOperationCompleted == null)) {
                this.getActiveEmployeesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveEmployeesCountOperationCompleted);
            }
            this.InvokeAsync("getActiveEmployeesCount", new object[0], this.getActiveEmployeesCountOperationCompleted, userState);
        }
        
        private void OngetActiveEmployeesCountOperationCompleted(object arg) {
            if ((this.getActiveEmployeesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveEmployeesCountCompleted(this, new getActiveEmployeesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getInactiveEmployeesCount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getInactiveEmployeesCount() {
            object[] results = this.Invoke("getInactiveEmployeesCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getInactiveEmployeesCountAsync() {
            this.getInactiveEmployeesCountAsync(null);
        }
        
        /// <remarks/>
        public void getInactiveEmployeesCountAsync(object userState) {
            if ((this.getInactiveEmployeesCountOperationCompleted == null)) {
                this.getInactiveEmployeesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInactiveEmployeesCountOperationCompleted);
            }
            this.InvokeAsync("getInactiveEmployeesCount", new object[0], this.getInactiveEmployeesCountOperationCompleted, userState);
        }
        
        private void OngetInactiveEmployeesCountOperationCompleted(object arg) {
            if ((this.getInactiveEmployeesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInactiveEmployeesCountCompleted(this, new getInactiveEmployeesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getSiteEnvironment", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeSiteEnvironment getSiteEnvironment() {
            object[] results = this.Invoke("getSiteEnvironment", new object[0]);
            return ((TAeSiteEnvironment)(results[0]));
        }
        
        /// <remarks/>
        public void getSiteEnvironmentAsync() {
            this.getSiteEnvironmentAsync(null);
        }
        
        /// <remarks/>
        public void getSiteEnvironmentAsync(object userState) {
            if ((this.getSiteEnvironmentOperationCompleted == null)) {
                this.getSiteEnvironmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSiteEnvironmentOperationCompleted);
            }
            this.InvokeAsync("getSiteEnvironment", new object[0], this.getSiteEnvironmentOperationCompleted, userState);
        }
        
        private void OngetSiteEnvironmentOperationCompleted(object arg) {
            if ((this.getSiteEnvironmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSiteEnvironmentCompleted(this, new getSiteEnvironmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getBaseClientData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientData getBaseClientData() {
            object[] results = this.Invoke("getBaseClientData", new object[0]);
            return ((TAeClientData)(results[0]));
        }
        
        /// <remarks/>
        public void getBaseClientDataAsync() {
            this.getBaseClientDataAsync(null);
        }
        
        /// <remarks/>
        public void getBaseClientDataAsync(object userState) {
            if ((this.getBaseClientDataOperationCompleted == null)) {
                this.getBaseClientDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBaseClientDataOperationCompleted);
            }
            this.InvokeAsync("getBaseClientData", new object[0], this.getBaseClientDataOperationCompleted, userState);
        }
        
        private void OngetBaseClientDataOperationCompleted(object arg) {
            if ((this.getBaseClientDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBaseClientDataCompleted(this, new getBaseClientDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setBaseClientData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setBaseClientData(TAeClientData AeClientData) {
            this.Invoke("setBaseClientData", new object[] {
                        AeClientData});
        }
        
        /// <remarks/>
        public void setBaseClientDataAsync(TAeClientData AeClientData) {
            this.setBaseClientDataAsync(AeClientData, null);
        }
        
        /// <remarks/>
        public void setBaseClientDataAsync(TAeClientData AeClientData, object userState) {
            if ((this.setBaseClientDataOperationCompleted == null)) {
                this.setBaseClientDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetBaseClientDataOperationCompleted);
            }
            this.InvokeAsync("setBaseClientData", new object[] {
                        AeClientData}, this.setBaseClientDataOperationCompleted, userState);
        }
        
        private void OnsetBaseClientDataOperationCompleted(object arg) {
            if ((this.setBaseClientDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setBaseClientDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getAccessAccounts", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAccessAccount[] getAccessAccounts() {
            object[] results = this.Invoke("getAccessAccounts", new object[0]);
            return ((TAeAccessAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccessAccountsAsync() {
            this.getAccessAccountsAsync(null);
        }
        
        /// <remarks/>
        public void getAccessAccountsAsync(object userState) {
            if ((this.getAccessAccountsOperationCompleted == null)) {
                this.getAccessAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessAccountsOperationCompleted);
            }
            this.InvokeAsync("getAccessAccounts", new object[0], this.getAccessAccountsOperationCompleted, userState);
        }
        
        private void OngetAccessAccountsOperationCompleted(object arg) {
            if ((this.getAccessAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessAccountsCompleted(this, new getAccessAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getAccessAccountViaAccountCode", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAccessAccount getAccessAccountViaAccountCode(string AccountCode) {
            object[] results = this.Invoke("getAccessAccountViaAccountCode", new object[] {
                        AccountCode});
            return ((TAeAccessAccount)(results[0]));
        }
        
        /// <remarks/>
        public void getAccessAccountViaAccountCodeAsync(string AccountCode) {
            this.getAccessAccountViaAccountCodeAsync(AccountCode, null);
        }
        
        /// <remarks/>
        public void getAccessAccountViaAccountCodeAsync(string AccountCode, object userState) {
            if ((this.getAccessAccountViaAccountCodeOperationCompleted == null)) {
                this.getAccessAccountViaAccountCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessAccountViaAccountCodeOperationCompleted);
            }
            this.InvokeAsync("getAccessAccountViaAccountCode", new object[] {
                        AccountCode}, this.getAccessAccountViaAccountCodeOperationCompleted, userState);
        }
        
        private void OngetAccessAccountViaAccountCodeOperationCompleted(object arg) {
            if ((this.getAccessAccountViaAccountCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessAccountViaAccountCodeCompleted(this, new getAccessAccountViaAccountCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#accessAccountCodeExists", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool accessAccountCodeExists(string AccountCode) {
            object[] results = this.Invoke("accessAccountCodeExists", new object[] {
                        AccountCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void accessAccountCodeExistsAsync(string AccountCode) {
            this.accessAccountCodeExistsAsync(AccountCode, null);
        }
        
        /// <remarks/>
        public void accessAccountCodeExistsAsync(string AccountCode, object userState) {
            if ((this.accessAccountCodeExistsOperationCompleted == null)) {
                this.accessAccountCodeExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccessAccountCodeExistsOperationCompleted);
            }
            this.InvokeAsync("accessAccountCodeExists", new object[] {
                        AccountCode}, this.accessAccountCodeExistsOperationCompleted, userState);
        }
        
        private void OnaccessAccountCodeExistsOperationCompleted(object arg) {
            if ((this.accessAccountCodeExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accessAccountCodeExistsCompleted(this, new accessAccountCodeExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getSystemReportsBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientReport[] getSystemReportsBasic() {
            object[] results = this.Invoke("getSystemReportsBasic", new object[0]);
            return ((TAeClientReport[])(results[0]));
        }
        
        /// <remarks/>
        public void getSystemReportsBasicAsync() {
            this.getSystemReportsBasicAsync(null);
        }
        
        /// <remarks/>
        public void getSystemReportsBasicAsync(object userState) {
            if ((this.getSystemReportsBasicOperationCompleted == null)) {
                this.getSystemReportsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemReportsBasicOperationCompleted);
            }
            this.InvokeAsync("getSystemReportsBasic", new object[0], this.getSystemReportsBasicOperationCompleted, userState);
        }
        
        private void OngetSystemReportsBasicOperationCompleted(object arg) {
            if ((this.getSystemReportsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemReportsBasicCompleted(this, new getSystemReportsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getSystemExportsBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientExport[] getSystemExportsBasic() {
            object[] results = this.Invoke("getSystemExportsBasic", new object[0]);
            return ((TAeClientExport[])(results[0]));
        }
        
        /// <remarks/>
        public void getSystemExportsBasicAsync() {
            this.getSystemExportsBasicAsync(null);
        }
        
        /// <remarks/>
        public void getSystemExportsBasicAsync(object userState) {
            if ((this.getSystemExportsBasicOperationCompleted == null)) {
                this.getSystemExportsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemExportsBasicOperationCompleted);
            }
            this.InvokeAsync("getSystemExportsBasic", new object[0], this.getSystemExportsBasicOperationCompleted, userState);
        }
        
        private void OngetSystemExportsBasicOperationCompleted(object arg) {
            if ((this.getSystemExportsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemExportsBasicCompleted(this, new getSystemExportsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getSystemVendorOpsBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientVendorOp[] getSystemVendorOpsBasic() {
            object[] results = this.Invoke("getSystemVendorOpsBasic", new object[0]);
            return ((TAeClientVendorOp[])(results[0]));
        }
        
        /// <remarks/>
        public void getSystemVendorOpsBasicAsync() {
            this.getSystemVendorOpsBasicAsync(null);
        }
        
        /// <remarks/>
        public void getSystemVendorOpsBasicAsync(object userState) {
            if ((this.getSystemVendorOpsBasicOperationCompleted == null)) {
                this.getSystemVendorOpsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemVendorOpsBasicOperationCompleted);
            }
            this.InvokeAsync("getSystemVendorOpsBasic", new object[0], this.getSystemVendorOpsBasicOperationCompleted, userState);
        }
        
        private void OngetSystemVendorOpsBasicOperationCompleted(object arg) {
            if ((this.getSystemVendorOpsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemVendorOpsBasicCompleted(this, new getSystemVendorOpsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getActiveStatusConditions", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getActiveStatusConditions() {
            object[] results = this.Invoke("getActiveStatusConditions", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveStatusConditionsAsync() {
            this.getActiveStatusConditionsAsync(null);
        }
        
        /// <remarks/>
        public void getActiveStatusConditionsAsync(object userState) {
            if ((this.getActiveStatusConditionsOperationCompleted == null)) {
                this.getActiveStatusConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveStatusConditionsOperationCompleted);
            }
            this.InvokeAsync("getActiveStatusConditions", new object[0], this.getActiveStatusConditionsOperationCompleted, userState);
        }
        
        private void OngetActiveStatusConditionsOperationCompleted(object arg) {
            if ((this.getActiveStatusConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveStatusConditionsCompleted(this, new getActiveStatusConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getInactiveStatusConditions", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getInactiveStatusConditions() {
            object[] results = this.Invoke("getInactiveStatusConditions", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getInactiveStatusConditionsAsync() {
            this.getInactiveStatusConditionsAsync(null);
        }
        
        /// <remarks/>
        public void getInactiveStatusConditionsAsync(object userState) {
            if ((this.getInactiveStatusConditionsOperationCompleted == null)) {
                this.getInactiveStatusConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInactiveStatusConditionsOperationCompleted);
            }
            this.InvokeAsync("getInactiveStatusConditions", new object[0], this.getInactiveStatusConditionsOperationCompleted, userState);
        }
        
        private void OngetInactiveStatusConditionsOperationCompleted(object arg) {
            if ((this.getInactiveStatusConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInactiveStatusConditionsCompleted(this, new getInactiveStatusConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayTypes", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getPayTypes() {
            object[] results = this.Invoke("getPayTypes", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getPayTypesAsync() {
            this.getPayTypesAsync(null);
        }
        
        /// <remarks/>
        public void getPayTypesAsync(object userState) {
            if ((this.getPayTypesOperationCompleted == null)) {
                this.getPayTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayTypesOperationCompleted);
            }
            this.InvokeAsync("getPayTypes", new object[0], this.getPayTypesOperationCompleted, userState);
        }
        
        private void OngetPayTypesOperationCompleted(object arg) {
            if ((this.getPayTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayTypesCompleted(this, new getPayTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayClassesSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getPayClassesSimple() {
            object[] results = this.Invoke("getPayClassesSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getPayClassesSimpleAsync() {
            this.getPayClassesSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getPayClassesSimpleAsync(object userState) {
            if ((this.getPayClassesSimpleOperationCompleted == null)) {
                this.getPayClassesSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayClassesSimpleOperationCompleted);
            }
            this.InvokeAsync("getPayClassesSimple", new object[0], this.getPayClassesSimpleOperationCompleted, userState);
        }
        
        private void OngetPayClassesSimpleOperationCompleted(object arg) {
            if ((this.getPayClassesSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayClassesSimpleCompleted(this, new getPayClassesSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getSchedulePatternsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getSchedulePatternsSimple() {
            object[] results = this.Invoke("getSchedulePatternsSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getSchedulePatternsSimpleAsync() {
            this.getSchedulePatternsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getSchedulePatternsSimpleAsync(object userState) {
            if ((this.getSchedulePatternsSimpleOperationCompleted == null)) {
                this.getSchedulePatternsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSchedulePatternsSimpleOperationCompleted);
            }
            this.InvokeAsync("getSchedulePatternsSimple", new object[0], this.getSchedulePatternsSimpleOperationCompleted, userState);
        }
        
        private void OngetSchedulePatternsSimpleOperationCompleted(object arg) {
            if ((this.getSchedulePatternsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSchedulePatternsSimpleCompleted(this, new getSchedulePatternsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getClockGroupsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getClockGroupsSimple() {
            object[] results = this.Invoke("getClockGroupsSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getClockGroupsSimpleAsync() {
            this.getClockGroupsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getClockGroupsSimpleAsync(object userState) {
            if ((this.getClockGroupsSimpleOperationCompleted == null)) {
                this.getClockGroupsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClockGroupsSimpleOperationCompleted);
            }
            this.InvokeAsync("getClockGroupsSimple", new object[0], this.getClockGroupsSimpleOperationCompleted, userState);
        }
        
        private void OngetClockGroupsSimpleOperationCompleted(object arg) {
            if ((this.getClockGroupsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClockGroupsSimpleCompleted(this, new getClockGroupsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getHourlyStatusTypesSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getHourlyStatusTypesSimple() {
            object[] results = this.Invoke("getHourlyStatusTypesSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getHourlyStatusTypesSimpleAsync() {
            this.getHourlyStatusTypesSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getHourlyStatusTypesSimpleAsync(object userState) {
            if ((this.getHourlyStatusTypesSimpleOperationCompleted == null)) {
                this.getHourlyStatusTypesSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHourlyStatusTypesSimpleOperationCompleted);
            }
            this.InvokeAsync("getHourlyStatusTypesSimple", new object[0], this.getHourlyStatusTypesSimpleOperationCompleted, userState);
        }
        
        private void OngetHourlyStatusTypesSimpleOperationCompleted(object arg) {
            if ((this.getHourlyStatusTypesSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHourlyStatusTypesSimpleCompleted(this, new getHourlyStatusTypesSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getCorrectiveActionsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getCorrectiveActionsSimple() {
            object[] results = this.Invoke("getCorrectiveActionsSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getCorrectiveActionsSimpleAsync() {
            this.getCorrectiveActionsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getCorrectiveActionsSimpleAsync(object userState) {
            if ((this.getCorrectiveActionsSimpleOperationCompleted == null)) {
                this.getCorrectiveActionsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorrectiveActionsSimpleOperationCompleted);
            }
            this.InvokeAsync("getCorrectiveActionsSimple", new object[0], this.getCorrectiveActionsSimpleOperationCompleted, userState);
        }
        
        private void OngetCorrectiveActionsSimpleOperationCompleted(object arg) {
            if ((this.getCorrectiveActionsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorrectiveActionsSimpleCompleted(this, new getCorrectiveActionsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getStationsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getStationsSimple() {
            object[] results = this.Invoke("getStationsSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationsSimpleAsync() {
            this.getStationsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getStationsSimpleAsync(object userState) {
            if ((this.getStationsSimpleOperationCompleted == null)) {
                this.getStationsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationsSimpleOperationCompleted);
            }
            this.InvokeAsync("getStationsSimple", new object[0], this.getStationsSimpleOperationCompleted, userState);
        }
        
        private void OngetStationsSimpleOperationCompleted(object arg) {
            if ((this.getStationsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationsSimpleCompleted(this, new getStationsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getClustersSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getClustersSimple() {
            object[] results = this.Invoke("getClustersSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getClustersSimpleAsync() {
            this.getClustersSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getClustersSimpleAsync(object userState) {
            if ((this.getClustersSimpleOperationCompleted == null)) {
                this.getClustersSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClustersSimpleOperationCompleted);
            }
            this.InvokeAsync("getClustersSimple", new object[0], this.getClustersSimpleOperationCompleted, userState);
        }
        
        private void OngetClustersSimpleOperationCompleted(object arg) {
            if ((this.getClustersSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClustersSimpleCompleted(this, new getClustersSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getClusterStationsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getClusterStationsSimple(int ClusterNum) {
            object[] results = this.Invoke("getClusterStationsSimple", new object[] {
                        ClusterNum});
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getClusterStationsSimpleAsync(int ClusterNum) {
            this.getClusterStationsSimpleAsync(ClusterNum, null);
        }
        
        /// <remarks/>
        public void getClusterStationsSimpleAsync(int ClusterNum, object userState) {
            if ((this.getClusterStationsSimpleOperationCompleted == null)) {
                this.getClusterStationsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClusterStationsSimpleOperationCompleted);
            }
            this.InvokeAsync("getClusterStationsSimple", new object[] {
                        ClusterNum}, this.getClusterStationsSimpleOperationCompleted, userState);
        }
        
        private void OngetClusterStationsSimpleOperationCompleted(object arg) {
            if ((this.getClusterStationsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClusterStationsSimpleCompleted(this, new getClusterStationsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getClockGroupStationsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getClockGroupStationsSimple(int ClockGroupNum) {
            object[] results = this.Invoke("getClockGroupStationsSimple", new object[] {
                        ClockGroupNum});
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getClockGroupStationsSimpleAsync(int ClockGroupNum) {
            this.getClockGroupStationsSimpleAsync(ClockGroupNum, null);
        }
        
        /// <remarks/>
        public void getClockGroupStationsSimpleAsync(int ClockGroupNum, object userState) {
            if ((this.getClockGroupStationsSimpleOperationCompleted == null)) {
                this.getClockGroupStationsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClockGroupStationsSimpleOperationCompleted);
            }
            this.InvokeAsync("getClockGroupStationsSimple", new object[] {
                        ClockGroupNum}, this.getClockGroupStationsSimpleOperationCompleted, userState);
        }
        
        private void OngetClockGroupStationsSimpleOperationCompleted(object arg) {
            if ((this.getClockGroupStationsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClockGroupStationsSimpleCompleted(this, new getClockGroupStationsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getBenefitsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getBenefitsSimple() {
            object[] results = this.Invoke("getBenefitsSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getBenefitsSimpleAsync() {
            this.getBenefitsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getBenefitsSimpleAsync(object userState) {
            if ((this.getBenefitsSimpleOperationCompleted == null)) {
                this.getBenefitsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBenefitsSimpleOperationCompleted);
            }
            this.InvokeAsync("getBenefitsSimple", new object[0], this.getBenefitsSimpleOperationCompleted, userState);
        }
        
        private void OngetBenefitsSimpleOperationCompleted(object arg) {
            if ((this.getBenefitsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBenefitsSimpleCompleted(this, new getBenefitsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayDesignationsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getPayDesignationsSimple() {
            object[] results = this.Invoke("getPayDesignationsSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getPayDesignationsSimpleAsync() {
            this.getPayDesignationsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getPayDesignationsSimpleAsync(object userState) {
            if ((this.getPayDesignationsSimpleOperationCompleted == null)) {
                this.getPayDesignationsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayDesignationsSimpleOperationCompleted);
            }
            this.InvokeAsync("getPayDesignationsSimple", new object[0], this.getPayDesignationsSimpleOperationCompleted, userState);
        }
        
        private void OngetPayDesignationsSimpleOperationCompleted(object arg) {
            if ((this.getPayDesignationsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayDesignationsSimpleCompleted(this, new getPayDesignationsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getScheduleStylesSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getScheduleStylesSimple() {
            object[] results = this.Invoke("getScheduleStylesSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getScheduleStylesSimpleAsync() {
            this.getScheduleStylesSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getScheduleStylesSimpleAsync(object userState) {
            if ((this.getScheduleStylesSimpleOperationCompleted == null)) {
                this.getScheduleStylesSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScheduleStylesSimpleOperationCompleted);
            }
            this.InvokeAsync("getScheduleStylesSimple", new object[0], this.getScheduleStylesSimpleOperationCompleted, userState);
        }
        
        private void OngetScheduleStylesSimpleOperationCompleted(object arg) {
            if ((this.getScheduleStylesSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScheduleStylesSimpleCompleted(this, new getScheduleStylesSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getUserGroupsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getUserGroupsSimple() {
            object[] results = this.Invoke("getUserGroupsSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserGroupsSimpleAsync() {
            this.getUserGroupsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getUserGroupsSimpleAsync(object userState) {
            if ((this.getUserGroupsSimpleOperationCompleted == null)) {
                this.getUserGroupsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserGroupsSimpleOperationCompleted);
            }
            this.InvokeAsync("getUserGroupsSimple", new object[0], this.getUserGroupsSimpleOperationCompleted, userState);
        }
        
        private void OngetUserGroupsSimpleOperationCompleted(object arg) {
            if ((this.getUserGroupsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserGroupsSimpleCompleted(this, new getUserGroupsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getBrowserProfilesSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getBrowserProfilesSimple() {
            object[] results = this.Invoke("getBrowserProfilesSimple", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getBrowserProfilesSimpleAsync() {
            this.getBrowserProfilesSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getBrowserProfilesSimpleAsync(object userState) {
            if ((this.getBrowserProfilesSimpleOperationCompleted == null)) {
                this.getBrowserProfilesSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBrowserProfilesSimpleOperationCompleted);
            }
            this.InvokeAsync("getBrowserProfilesSimple", new object[0], this.getBrowserProfilesSimpleOperationCompleted, userState);
        }
        
        private void OngetBrowserProfilesSimpleOperationCompleted(object arg) {
            if ((this.getBrowserProfilesSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBrowserProfilesSimpleCompleted(this, new getBrowserProfilesSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getCurrentBrowserProfileMenuItems", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBrowserMenuItem[] getCurrentBrowserProfileMenuItems() {
            object[] results = this.Invoke("getCurrentBrowserProfileMenuItems", new object[0]);
            return ((TAeBrowserMenuItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentBrowserProfileMenuItemsAsync() {
            this.getCurrentBrowserProfileMenuItemsAsync(null);
        }
        
        /// <remarks/>
        public void getCurrentBrowserProfileMenuItemsAsync(object userState) {
            if ((this.getCurrentBrowserProfileMenuItemsOperationCompleted == null)) {
                this.getCurrentBrowserProfileMenuItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentBrowserProfileMenuItemsOperationCompleted);
            }
            this.InvokeAsync("getCurrentBrowserProfileMenuItems", new object[0], this.getCurrentBrowserProfileMenuItemsOperationCompleted, userState);
        }
        
        private void OngetCurrentBrowserProfileMenuItemsOperationCompleted(object arg) {
            if ((this.getCurrentBrowserProfileMenuItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentBrowserProfileMenuItemsCompleted(this, new getCurrentBrowserProfileMenuItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getHyperQueriesSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getHyperQueriesSimple() {
            object[] results = this.Invoke("getHyperQueriesSimple", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getHyperQueriesSimpleAsync() {
            this.getHyperQueriesSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getHyperQueriesSimpleAsync(object userState) {
            if ((this.getHyperQueriesSimpleOperationCompleted == null)) {
                this.getHyperQueriesSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHyperQueriesSimpleOperationCompleted);
            }
            this.InvokeAsync("getHyperQueriesSimple", new object[0], this.getHyperQueriesSimpleOperationCompleted, userState);
        }
        
        private void OngetHyperQueriesSimpleOperationCompleted(object arg) {
            if ((this.getHyperQueriesSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHyperQueriesSimpleCompleted(this, new getHyperQueriesSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayPeriodClassData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayPeriodInfo getPayPeriodClassData(int _PayPeriodClassNum) {
            object[] results = this.Invoke("getPayPeriodClassData", new object[] {
                        _PayPeriodClassNum});
            return ((TAePayPeriodInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getPayPeriodClassDataAsync(int _PayPeriodClassNum) {
            this.getPayPeriodClassDataAsync(_PayPeriodClassNum, null);
        }
        
        /// <remarks/>
        public void getPayPeriodClassDataAsync(int _PayPeriodClassNum, object userState) {
            if ((this.getPayPeriodClassDataOperationCompleted == null)) {
                this.getPayPeriodClassDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayPeriodClassDataOperationCompleted);
            }
            this.InvokeAsync("getPayPeriodClassData", new object[] {
                        _PayPeriodClassNum}, this.getPayPeriodClassDataOperationCompleted, userState);
        }
        
        private void OngetPayPeriodClassDataOperationCompleted(object arg) {
            if ((this.getPayPeriodClassDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayPeriodClassDataCompleted(this, new getPayPeriodClassDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayPeriodClasses", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayPeriodInfo[] getPayPeriodClasses() {
            object[] results = this.Invoke("getPayPeriodClasses", new object[0]);
            return ((TAePayPeriodInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getPayPeriodClassesAsync() {
            this.getPayPeriodClassesAsync(null);
        }
        
        /// <remarks/>
        public void getPayPeriodClassesAsync(object userState) {
            if ((this.getPayPeriodClassesOperationCompleted == null)) {
                this.getPayPeriodClassesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayPeriodClassesOperationCompleted);
            }
            this.InvokeAsync("getPayPeriodClasses", new object[0], this.getPayPeriodClassesOperationCompleted, userState);
        }
        
        private void OngetPayPeriodClassesOperationCompleted(object arg) {
            if ((this.getPayPeriodClassesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayPeriodClassesCompleted(this, new getPayPeriodClassesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyEmployeeBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic getEmptyEmployeeBasic() {
            object[] results = this.Invoke("getEmptyEmployeeBasic", new object[0]);
            return ((TAeEmployeeBasic)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyEmployeeBasicAsync() {
            this.getEmptyEmployeeBasicAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyEmployeeBasicAsync(object userState) {
            if ((this.getEmptyEmployeeBasicOperationCompleted == null)) {
                this.getEmptyEmployeeBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyEmployeeBasicOperationCompleted);
            }
            this.InvokeAsync("getEmptyEmployeeBasic", new object[0], this.getEmptyEmployeeBasicOperationCompleted, userState);
        }
        
        private void OngetEmptyEmployeeBasicOperationCompleted(object arg) {
            if ((this.getEmptyEmployeeBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyEmployeeBasicCompleted(this, new getEmptyEmployeeBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyEmployeeDetail", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail getEmptyEmployeeDetail() {
            object[] results = this.Invoke("getEmptyEmployeeDetail", new object[0]);
            return ((TAeEmployeeDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyEmployeeDetailAsync() {
            this.getEmptyEmployeeDetailAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyEmployeeDetailAsync(object userState) {
            if ((this.getEmptyEmployeeDetailOperationCompleted == null)) {
                this.getEmptyEmployeeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyEmployeeDetailOperationCompleted);
            }
            this.InvokeAsync("getEmptyEmployeeDetail", new object[0], this.getEmptyEmployeeDetailOperationCompleted, userState);
        }
        
        private void OngetEmptyEmployeeDetailOperationCompleted(object arg) {
            if ((this.getEmptyEmployeeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyEmployeeDetailCompleted(this, new getEmptyEmployeeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyClientExport", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientExport getEmptyClientExport() {
            object[] results = this.Invoke("getEmptyClientExport", new object[0]);
            return ((TAeClientExport)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyClientExportAsync() {
            this.getEmptyClientExportAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyClientExportAsync(object userState) {
            if ((this.getEmptyClientExportOperationCompleted == null)) {
                this.getEmptyClientExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyClientExportOperationCompleted);
            }
            this.InvokeAsync("getEmptyClientExport", new object[0], this.getEmptyClientExportOperationCompleted, userState);
        }
        
        private void OngetEmptyClientExportOperationCompleted(object arg) {
            if ((this.getEmptyClientExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyClientExportCompleted(this, new getEmptyClientExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyClientReport", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientReport getEmptyClientReport() {
            object[] results = this.Invoke("getEmptyClientReport", new object[0]);
            return ((TAeClientReport)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyClientReportAsync() {
            this.getEmptyClientReportAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyClientReportAsync(object userState) {
            if ((this.getEmptyClientReportOperationCompleted == null)) {
                this.getEmptyClientReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyClientReportOperationCompleted);
            }
            this.InvokeAsync("getEmptyClientReport", new object[0], this.getEmptyClientReportOperationCompleted, userState);
        }
        
        private void OngetEmptyClientReportOperationCompleted(object arg) {
            if ((this.getEmptyClientReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyClientReportCompleted(this, new getEmptyClientReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyClientVendorOp", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientVendorOp getEmptyClientVendorOp() {
            object[] results = this.Invoke("getEmptyClientVendorOp", new object[0]);
            return ((TAeClientVendorOp)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyClientVendorOpAsync() {
            this.getEmptyClientVendorOpAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyClientVendorOpAsync(object userState) {
            if ((this.getEmptyClientVendorOpOperationCompleted == null)) {
                this.getEmptyClientVendorOpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyClientVendorOpOperationCompleted);
            }
            this.InvokeAsync("getEmptyClientVendorOp", new object[0], this.getEmptyClientVendorOpOperationCompleted, userState);
        }
        
        private void OngetEmptyClientVendorOpOperationCompleted(object arg) {
            if ((this.getEmptyClientVendorOpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyClientVendorOpCompleted(this, new getEmptyClientVendorOpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyAccessAccount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAccessAccount getEmptyAccessAccount() {
            object[] results = this.Invoke("getEmptyAccessAccount", new object[0]);
            return ((TAeAccessAccount)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyAccessAccountAsync() {
            this.getEmptyAccessAccountAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyAccessAccountAsync(object userState) {
            if ((this.getEmptyAccessAccountOperationCompleted == null)) {
                this.getEmptyAccessAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyAccessAccountOperationCompleted);
            }
            this.InvokeAsync("getEmptyAccessAccount", new object[0], this.getEmptyAccessAccountOperationCompleted, userState);
        }
        
        private void OngetEmptyAccessAccountOperationCompleted(object arg) {
            if ((this.getEmptyAccessAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyAccessAccountCompleted(this, new getEmptyAccessAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeBasicByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic getEmployeeBasicByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeBasicByIDNum", new object[] {
                        IDNum});
            return ((TAeEmployeeBasic)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeBasicByIDNumAsync(string IDNum) {
            this.getEmployeeBasicByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeBasicByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeBasicByIDNumOperationCompleted == null)) {
                this.getEmployeeBasicByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeBasicByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeBasicByIDNum", new object[] {
                        IDNum}, this.getEmployeeBasicByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeBasicByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeBasicByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeBasicByIDNumCompleted(this, new getEmployeeBasicByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeBasicBySSN", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic getEmployeeBasicBySSN(string SSN) {
            object[] results = this.Invoke("getEmployeeBasicBySSN", new object[] {
                        SSN});
            return ((TAeEmployeeBasic)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeBasicBySSNAsync(string SSN) {
            this.getEmployeeBasicBySSNAsync(SSN, null);
        }
        
        /// <remarks/>
        public void getEmployeeBasicBySSNAsync(string SSN, object userState) {
            if ((this.getEmployeeBasicBySSNOperationCompleted == null)) {
                this.getEmployeeBasicBySSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeBasicBySSNOperationCompleted);
            }
            this.InvokeAsync("getEmployeeBasicBySSN", new object[] {
                        SSN}, this.getEmployeeBasicBySSNOperationCompleted, userState);
        }
        
        private void OngetEmployeeBasicBySSNOperationCompleted(object arg) {
            if ((this.getEmployeeBasicBySSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeBasicBySSNCompleted(this, new getEmployeeBasicBySSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeBasicByBadge", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic getEmployeeBasicByBadge(int Badge) {
            object[] results = this.Invoke("getEmployeeBasicByBadge", new object[] {
                        Badge});
            return ((TAeEmployeeBasic)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeBasicByBadgeAsync(int Badge) {
            this.getEmployeeBasicByBadgeAsync(Badge, null);
        }
        
        /// <remarks/>
        public void getEmployeeBasicByBadgeAsync(int Badge, object userState) {
            if ((this.getEmployeeBasicByBadgeOperationCompleted == null)) {
                this.getEmployeeBasicByBadgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeBasicByBadgeOperationCompleted);
            }
            this.InvokeAsync("getEmployeeBasicByBadge", new object[] {
                        Badge}, this.getEmployeeBasicByBadgeOperationCompleted, userState);
        }
        
        private void OngetEmployeeBasicByBadgeOperationCompleted(object arg) {
            if ((this.getEmployeeBasicByBadgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeBasicByBadgeCompleted(this, new getEmployeeBasicByBadgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeBasicByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic getEmployeeBasicByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeBasicByFilekey", new object[] {
                        Filekey});
            return ((TAeEmployeeBasic)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeBasicByFilekeyAsync(int Filekey) {
            this.getEmployeeBasicByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeBasicByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeBasicByFilekeyOperationCompleted == null)) {
                this.getEmployeeBasicByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeBasicByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeBasicByFilekey", new object[] {
                        Filekey}, this.getEmployeeBasicByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeBasicByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeBasicByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeBasicByFilekeyCompleted(this, new getEmployeeBasicByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetailByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail getEmployeeDetailByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeDetailByIDNum", new object[] {
                        IDNum});
            return ((TAeEmployeeDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetailByIDNumAsync(string IDNum) {
            this.getEmployeeDetailByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetailByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeDetailByIDNumOperationCompleted == null)) {
                this.getEmployeeDetailByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetailByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetailByIDNum", new object[] {
                        IDNum}, this.getEmployeeDetailByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetailByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeDetailByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetailByIDNumCompleted(this, new getEmployeeDetailByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetailBySSN", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail getEmployeeDetailBySSN(string SSN) {
            object[] results = this.Invoke("getEmployeeDetailBySSN", new object[] {
                        SSN});
            return ((TAeEmployeeDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetailBySSNAsync(string SSN) {
            this.getEmployeeDetailBySSNAsync(SSN, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetailBySSNAsync(string SSN, object userState) {
            if ((this.getEmployeeDetailBySSNOperationCompleted == null)) {
                this.getEmployeeDetailBySSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetailBySSNOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetailBySSN", new object[] {
                        SSN}, this.getEmployeeDetailBySSNOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetailBySSNOperationCompleted(object arg) {
            if ((this.getEmployeeDetailBySSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetailBySSNCompleted(this, new getEmployeeDetailBySSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetailByBadge", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail getEmployeeDetailByBadge(int Badge) {
            object[] results = this.Invoke("getEmployeeDetailByBadge", new object[] {
                        Badge});
            return ((TAeEmployeeDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetailByBadgeAsync(int Badge) {
            this.getEmployeeDetailByBadgeAsync(Badge, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetailByBadgeAsync(int Badge, object userState) {
            if ((this.getEmployeeDetailByBadgeOperationCompleted == null)) {
                this.getEmployeeDetailByBadgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetailByBadgeOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetailByBadge", new object[] {
                        Badge}, this.getEmployeeDetailByBadgeOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetailByBadgeOperationCompleted(object arg) {
            if ((this.getEmployeeDetailByBadgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetailByBadgeCompleted(this, new getEmployeeDetailByBadgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetailByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail getEmployeeDetailByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeDetailByFilekey", new object[] {
                        Filekey});
            return ((TAeEmployeeDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetailByFilekeyAsync(int Filekey) {
            this.getEmployeeDetailByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetailByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeDetailByFilekeyOperationCompleted == null)) {
                this.getEmployeeDetailByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetailByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetailByFilekey", new object[] {
                        Filekey}, this.getEmployeeDetailByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetailByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeDetailByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetailByFilekeyCompleted(this, new getEmployeeDetailByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeWorkgroupAssignmentByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroupAssignment extractEmployeeWorkgroupAssignmentByFilekey(int Filekey) {
            object[] results = this.Invoke("extractEmployeeWorkgroupAssignmentByFilekey", new object[] {
                        Filekey});
            return ((TAeWorkgroupAssignment)(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeWorkgroupAssignmentByFilekeyAsync(int Filekey) {
            this.extractEmployeeWorkgroupAssignmentByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void extractEmployeeWorkgroupAssignmentByFilekeyAsync(int Filekey, object userState) {
            if ((this.extractEmployeeWorkgroupAssignmentByFilekeyOperationCompleted == null)) {
                this.extractEmployeeWorkgroupAssignmentByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeWorkgroupAssignmentByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeWorkgroupAssignmentByFilekey", new object[] {
                        Filekey}, this.extractEmployeeWorkgroupAssignmentByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeWorkgroupAssignmentByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeWorkgroupAssignmentByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeWorkgroupAssignmentByFilekeyCompleted(this, new extractEmployeeWorkgroupAssignmentByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeWorkgroupAssignmentByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroupAssignment extractEmployeeWorkgroupAssignmentByIDNum(string IDNum) {
            object[] results = this.Invoke("extractEmployeeWorkgroupAssignmentByIDNum", new object[] {
                        IDNum});
            return ((TAeWorkgroupAssignment)(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeWorkgroupAssignmentByIDNumAsync(string IDNum) {
            this.extractEmployeeWorkgroupAssignmentByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeWorkgroupAssignmentByIDNumAsync(string IDNum, object userState) {
            if ((this.extractEmployeeWorkgroupAssignmentByIDNumOperationCompleted == null)) {
                this.extractEmployeeWorkgroupAssignmentByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeWorkgroupAssignmentByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeWorkgroupAssignmentByIDNum", new object[] {
                        IDNum}, this.extractEmployeeWorkgroupAssignmentByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeWorkgroupAssignmentByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeWorkgroupAssignmentByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeWorkgroupAssignmentByIDNumCompleted(this, new extractEmployeeWorkgroupAssignmentByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeRatePayTypeAssignmentByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeRatePayTypeAssignment extractEmployeeRatePayTypeAssignmentByFilekey(int Filekey) {
            object[] results = this.Invoke("extractEmployeeRatePayTypeAssignmentByFilekey", new object[] {
                        Filekey});
            return ((TAeRatePayTypeAssignment)(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeRatePayTypeAssignmentByFilekeyAsync(int Filekey) {
            this.extractEmployeeRatePayTypeAssignmentByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void extractEmployeeRatePayTypeAssignmentByFilekeyAsync(int Filekey, object userState) {
            if ((this.extractEmployeeRatePayTypeAssignmentByFilekeyOperationCompleted == null)) {
                this.extractEmployeeRatePayTypeAssignmentByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeRatePayTypeAssignmentByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeRatePayTypeAssignmentByFilekey", new object[] {
                        Filekey}, this.extractEmployeeRatePayTypeAssignmentByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeRatePayTypeAssignmentByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeRatePayTypeAssignmentByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeRatePayTypeAssignmentByFilekeyCompleted(this, new extractEmployeeRatePayTypeAssignmentByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeRatePayTypeAssignmentByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeRatePayTypeAssignment extractEmployeeRatePayTypeAssignmentByIDNum(string IDNum) {
            object[] results = this.Invoke("extractEmployeeRatePayTypeAssignmentByIDNum", new object[] {
                        IDNum});
            return ((TAeRatePayTypeAssignment)(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeRatePayTypeAssignmentByIDNumAsync(string IDNum) {
            this.extractEmployeeRatePayTypeAssignmentByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeRatePayTypeAssignmentByIDNumAsync(string IDNum, object userState) {
            if ((this.extractEmployeeRatePayTypeAssignmentByIDNumOperationCompleted == null)) {
                this.extractEmployeeRatePayTypeAssignmentByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeRatePayTypeAssignmentByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeRatePayTypeAssignmentByIDNum", new object[] {
                        IDNum}, this.extractEmployeeRatePayTypeAssignmentByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeRatePayTypeAssignmentByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeRatePayTypeAssignmentByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeRatePayTypeAssignmentByIDNumCompleted(this, new extractEmployeeRatePayTypeAssignmentByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#reassignEmployeeWorkgroup", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void reassignEmployeeWorkgroup(TAeWorkgroupAssignment AeWorkgroupAssignment) {
            this.Invoke("reassignEmployeeWorkgroup", new object[] {
                        AeWorkgroupAssignment});
        }
        
        /// <remarks/>
        public void reassignEmployeeWorkgroupAsync(TAeWorkgroupAssignment AeWorkgroupAssignment) {
            this.reassignEmployeeWorkgroupAsync(AeWorkgroupAssignment, null);
        }
        
        /// <remarks/>
        public void reassignEmployeeWorkgroupAsync(TAeWorkgroupAssignment AeWorkgroupAssignment, object userState) {
            if ((this.reassignEmployeeWorkgroupOperationCompleted == null)) {
                this.reassignEmployeeWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreassignEmployeeWorkgroupOperationCompleted);
            }
            this.InvokeAsync("reassignEmployeeWorkgroup", new object[] {
                        AeWorkgroupAssignment}, this.reassignEmployeeWorkgroupOperationCompleted, userState);
        }
        
        private void OnreassignEmployeeWorkgroupOperationCompleted(object arg) {
            if ((this.reassignEmployeeWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reassignEmployeeWorkgroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#reassignEmployeeRatePayType", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void reassignEmployeeRatePayType(TAeRatePayTypeAssignment AeRatePayTypeAssignment) {
            this.Invoke("reassignEmployeeRatePayType", new object[] {
                        AeRatePayTypeAssignment});
        }
        
        /// <remarks/>
        public void reassignEmployeeRatePayTypeAsync(TAeRatePayTypeAssignment AeRatePayTypeAssignment) {
            this.reassignEmployeeRatePayTypeAsync(AeRatePayTypeAssignment, null);
        }
        
        /// <remarks/>
        public void reassignEmployeeRatePayTypeAsync(TAeRatePayTypeAssignment AeRatePayTypeAssignment, object userState) {
            if ((this.reassignEmployeeRatePayTypeOperationCompleted == null)) {
                this.reassignEmployeeRatePayTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreassignEmployeeRatePayTypeOperationCompleted);
            }
            this.InvokeAsync("reassignEmployeeRatePayType", new object[] {
                        AeRatePayTypeAssignment}, this.reassignEmployeeRatePayTypeOperationCompleted, userState);
        }
        
        private void OnreassignEmployeeRatePayTypeOperationCompleted(object arg) {
            if ((this.reassignEmployeeRatePayTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reassignEmployeeRatePayTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeBasic(TAeEmployeeBasic AeEmployeeBasic) {
            this.Invoke("setEmployeeBasic", new object[] {
                        AeEmployeeBasic});
        }
        
        /// <remarks/>
        public void setEmployeeBasicAsync(TAeEmployeeBasic AeEmployeeBasic) {
            this.setEmployeeBasicAsync(AeEmployeeBasic, null);
        }
        
        /// <remarks/>
        public void setEmployeeBasicAsync(TAeEmployeeBasic AeEmployeeBasic, object userState) {
            if ((this.setEmployeeBasicOperationCompleted == null)) {
                this.setEmployeeBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeBasicOperationCompleted);
            }
            this.InvokeAsync("setEmployeeBasic", new object[] {
                        AeEmployeeBasic}, this.setEmployeeBasicOperationCompleted, userState);
        }
        
        private void OnsetEmployeeBasicOperationCompleted(object arg) {
            if ((this.setEmployeeBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeBasicCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeDetail", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeDetail(TAeEmployeeDetail AeEmployeeDetail) {
            this.Invoke("setEmployeeDetail", new object[] {
                        AeEmployeeDetail});
        }
        
        /// <remarks/>
        public void setEmployeeDetailAsync(TAeEmployeeDetail AeEmployeeDetail) {
            this.setEmployeeDetailAsync(AeEmployeeDetail, null);
        }
        
        /// <remarks/>
        public void setEmployeeDetailAsync(TAeEmployeeDetail AeEmployeeDetail, object userState) {
            if ((this.setEmployeeDetailOperationCompleted == null)) {
                this.setEmployeeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeDetailOperationCompleted);
            }
            this.InvokeAsync("setEmployeeDetail", new object[] {
                        AeEmployeeDetail}, this.setEmployeeDetailOperationCompleted, userState);
        }
        
        private void OnsetEmployeeDetailOperationCompleted(object arg) {
            if ((this.setEmployeeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#maintainEmployeeBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TMaintainEmployeeResult maintainEmployeeBasic(TAeEmployeeBasic AeEmployeeBasic, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement) {
            object[] results = this.Invoke("maintainEmployeeBasic", new object[] {
                        AeEmployeeBasic,
                        AddEmpMode,
                        BadgeManagement});
            return ((TMaintainEmployeeResult)(results[0]));
        }
        
        /// <remarks/>
        public void maintainEmployeeBasicAsync(TAeEmployeeBasic AeEmployeeBasic, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement) {
            this.maintainEmployeeBasicAsync(AeEmployeeBasic, AddEmpMode, BadgeManagement, null);
        }
        
        /// <remarks/>
        public void maintainEmployeeBasicAsync(TAeEmployeeBasic AeEmployeeBasic, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement, object userState) {
            if ((this.maintainEmployeeBasicOperationCompleted == null)) {
                this.maintainEmployeeBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaintainEmployeeBasicOperationCompleted);
            }
            this.InvokeAsync("maintainEmployeeBasic", new object[] {
                        AeEmployeeBasic,
                        AddEmpMode,
                        BadgeManagement}, this.maintainEmployeeBasicOperationCompleted, userState);
        }
        
        private void OnmaintainEmployeeBasicOperationCompleted(object arg) {
            if ((this.maintainEmployeeBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maintainEmployeeBasicCompleted(this, new maintainEmployeeBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#maintainEmployeeDetail", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TMaintainEmployeeResult maintainEmployeeDetail(TAeEmployeeDetail AeEmployeeDetail, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement) {
            object[] results = this.Invoke("maintainEmployeeDetail", new object[] {
                        AeEmployeeDetail,
                        AddEmpMode,
                        BadgeManagement});
            return ((TMaintainEmployeeResult)(results[0]));
        }
        
        /// <remarks/>
        public void maintainEmployeeDetailAsync(TAeEmployeeDetail AeEmployeeDetail, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement) {
            this.maintainEmployeeDetailAsync(AeEmployeeDetail, AddEmpMode, BadgeManagement, null);
        }
        
        /// <remarks/>
        public void maintainEmployeeDetailAsync(TAeEmployeeDetail AeEmployeeDetail, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement, object userState) {
            if ((this.maintainEmployeeDetailOperationCompleted == null)) {
                this.maintainEmployeeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaintainEmployeeDetailOperationCompleted);
            }
            this.InvokeAsync("maintainEmployeeDetail", new object[] {
                        AeEmployeeDetail,
                        AddEmpMode,
                        BadgeManagement}, this.maintainEmployeeDetailOperationCompleted, userState);
        }
        
        private void OnmaintainEmployeeDetailOperationCompleted(object arg) {
            if ((this.maintainEmployeeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maintainEmployeeDetailCompleted(this, new maintainEmployeeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#maintainEmployeeResultDescr", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string maintainEmployeeResultDescr(TMaintainEmployeeResult MaintainEmployeeResult) {
            object[] results = this.Invoke("maintainEmployeeResultDescr", new object[] {
                        MaintainEmployeeResult});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void maintainEmployeeResultDescrAsync(TMaintainEmployeeResult MaintainEmployeeResult) {
            this.maintainEmployeeResultDescrAsync(MaintainEmployeeResult, null);
        }
        
        /// <remarks/>
        public void maintainEmployeeResultDescrAsync(TMaintainEmployeeResult MaintainEmployeeResult, object userState) {
            if ((this.maintainEmployeeResultDescrOperationCompleted == null)) {
                this.maintainEmployeeResultDescrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaintainEmployeeResultDescrOperationCompleted);
            }
            this.InvokeAsync("maintainEmployeeResultDescr", new object[] {
                        MaintainEmployeeResult}, this.maintainEmployeeResultDescrOperationCompleted, userState);
        }
        
        private void OnmaintainEmployeeResultDescrOperationCompleted(object arg) {
            if ((this.maintainEmployeeResultDescrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maintainEmployeeResultDescrCompleted(this, new maintainEmployeeResultDescrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#dateRangeEnumDescr", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string dateRangeEnumDescr(TDateRangeEnum DateRangeEnum) {
            object[] results = this.Invoke("dateRangeEnumDescr", new object[] {
                        DateRangeEnum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dateRangeEnumDescrAsync(TDateRangeEnum DateRangeEnum) {
            this.dateRangeEnumDescrAsync(DateRangeEnum, null);
        }
        
        /// <remarks/>
        public void dateRangeEnumDescrAsync(TDateRangeEnum DateRangeEnum, object userState) {
            if ((this.dateRangeEnumDescrOperationCompleted == null)) {
                this.dateRangeEnumDescrOperationCompleted = new System.Threading.SendOrPostCallback(this.OndateRangeEnumDescrOperationCompleted);
            }
            this.InvokeAsync("dateRangeEnumDescr", new object[] {
                        DateRangeEnum}, this.dateRangeEnumDescrOperationCompleted, userState);
        }
        
        private void OndateRangeEnumDescrOperationCompleted(object arg) {
            if ((this.dateRangeEnumDescrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dateRangeEnumDescrCompleted(this, new dateRangeEnumDescrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#dateRangeEnumListSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] dateRangeEnumListSimple() {
            object[] results = this.Invoke("dateRangeEnumListSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void dateRangeEnumListSimpleAsync() {
            this.dateRangeEnumListSimpleAsync(null);
        }
        
        /// <remarks/>
        public void dateRangeEnumListSimpleAsync(object userState) {
            if ((this.dateRangeEnumListSimpleOperationCompleted == null)) {
                this.dateRangeEnumListSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OndateRangeEnumListSimpleOperationCompleted);
            }
            this.InvokeAsync("dateRangeEnumListSimple", new object[0], this.dateRangeEnumListSimpleOperationCompleted, userState);
        }
        
        private void OndateRangeEnumListSimpleOperationCompleted(object arg) {
            if ((this.dateRangeEnumListSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dateRangeEnumListSimpleCompleted(this, new dateRangeEnumListSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#dateRangeEmpEnumListSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] dateRangeEmpEnumListSimple() {
            object[] results = this.Invoke("dateRangeEmpEnumListSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void dateRangeEmpEnumListSimpleAsync() {
            this.dateRangeEmpEnumListSimpleAsync(null);
        }
        
        /// <remarks/>
        public void dateRangeEmpEnumListSimpleAsync(object userState) {
            if ((this.dateRangeEmpEnumListSimpleOperationCompleted == null)) {
                this.dateRangeEmpEnumListSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OndateRangeEmpEnumListSimpleOperationCompleted);
            }
            this.InvokeAsync("dateRangeEmpEnumListSimple", new object[0], this.dateRangeEmpEnumListSimpleOperationCompleted, userState);
        }
        
        private void OndateRangeEmpEnumListSimpleOperationCompleted(object arg) {
            if ((this.dateRangeEmpEnumListSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dateRangeEmpEnumListSimpleCompleted(this, new dateRangeEmpEnumListSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getActiveEmployeesList", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getActiveEmployeesList() {
            object[] results = this.Invoke("getActiveEmployeesList", new object[0]);
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveEmployeesListAsync() {
            this.getActiveEmployeesListAsync(null);
        }
        
        /// <remarks/>
        public void getActiveEmployeesListAsync(object userState) {
            if ((this.getActiveEmployeesListOperationCompleted == null)) {
                this.getActiveEmployeesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveEmployeesListOperationCompleted);
            }
            this.InvokeAsync("getActiveEmployeesList", new object[0], this.getActiveEmployeesListOperationCompleted, userState);
        }
        
        private void OngetActiveEmployeesListOperationCompleted(object arg) {
            if ((this.getActiveEmployeesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveEmployeesListCompleted(this, new getActiveEmployeesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayrollEmployeesList", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getPayrollEmployeesList(int PayPerClass, TPayPeriodEnum PayPeriodEnum) {
            object[] results = this.Invoke("getPayrollEmployeesList", new object[] {
                        PayPerClass,
                        PayPeriodEnum});
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getPayrollEmployeesListAsync(int PayPerClass, TPayPeriodEnum PayPeriodEnum) {
            this.getPayrollEmployeesListAsync(PayPerClass, PayPeriodEnum, null);
        }
        
        /// <remarks/>
        public void getPayrollEmployeesListAsync(int PayPerClass, TPayPeriodEnum PayPeriodEnum, object userState) {
            if ((this.getPayrollEmployeesListOperationCompleted == null)) {
                this.getPayrollEmployeesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayrollEmployeesListOperationCompleted);
            }
            this.InvokeAsync("getPayrollEmployeesList", new object[] {
                        PayPerClass,
                        PayPeriodEnum}, this.getPayrollEmployeesListOperationCompleted, userState);
        }
        
        private void OngetPayrollEmployeesListOperationCompleted(object arg) {
            if ((this.getPayrollEmployeesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayrollEmployeesListCompleted(this, new getPayrollEmployeesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getInactiveEmployeesList", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getInactiveEmployeesList() {
            object[] results = this.Invoke("getInactiveEmployeesList", new object[0]);
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getInactiveEmployeesListAsync() {
            this.getInactiveEmployeesListAsync(null);
        }
        
        /// <remarks/>
        public void getInactiveEmployeesListAsync(object userState) {
            if ((this.getInactiveEmployeesListOperationCompleted == null)) {
                this.getInactiveEmployeesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInactiveEmployeesListOperationCompleted);
            }
            this.InvokeAsync("getInactiveEmployeesList", new object[0], this.getInactiveEmployeesListOperationCompleted, userState);
        }
        
        private void OngetInactiveEmployeesListOperationCompleted(object arg) {
            if ((this.getInactiveEmployeesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInactiveEmployeesListCompleted(this, new getInactiveEmployeesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getAllEmployeesList", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getAllEmployeesList() {
            object[] results = this.Invoke("getAllEmployeesList", new object[0]);
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllEmployeesListAsync() {
            this.getAllEmployeesListAsync(null);
        }
        
        /// <remarks/>
        public void getAllEmployeesListAsync(object userState) {
            if ((this.getAllEmployeesListOperationCompleted == null)) {
                this.getAllEmployeesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllEmployeesListOperationCompleted);
            }
            this.InvokeAsync("getAllEmployeesList", new object[0], this.getAllEmployeesListOperationCompleted, userState);
        }
        
        private void OngetAllEmployeesListOperationCompleted(object arg) {
            if ((this.getAllEmployeesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllEmployeesListCompleted(this, new getAllEmployeesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesListBasicFromHyperQuery", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getEmployeesListBasicFromHyperQuery(string HyperQueryName) {
            object[] results = this.Invoke("getEmployeesListBasicFromHyperQuery", new object[] {
                        HyperQueryName});
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesListBasicFromHyperQueryAsync(string HyperQueryName) {
            this.getEmployeesListBasicFromHyperQueryAsync(HyperQueryName, null);
        }
        
        /// <remarks/>
        public void getEmployeesListBasicFromHyperQueryAsync(string HyperQueryName, object userState) {
            if ((this.getEmployeesListBasicFromHyperQueryOperationCompleted == null)) {
                this.getEmployeesListBasicFromHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesListBasicFromHyperQueryOperationCompleted);
            }
            this.InvokeAsync("getEmployeesListBasicFromHyperQuery", new object[] {
                        HyperQueryName}, this.getEmployeesListBasicFromHyperQueryOperationCompleted, userState);
        }
        
        private void OngetEmployeesListBasicFromHyperQueryOperationCompleted(object arg) {
            if ((this.getEmployeesListBasicFromHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesListBasicFromHyperQueryCompleted(this, new getEmployeesListBasicFromHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesListDetailFromHyperQuery", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail[] getEmployeesListDetailFromHyperQuery(string HyperQueryName) {
            object[] results = this.Invoke("getEmployeesListDetailFromHyperQuery", new object[] {
                        HyperQueryName});
            return ((TAeEmployeeDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesListDetailFromHyperQueryAsync(string HyperQueryName) {
            this.getEmployeesListDetailFromHyperQueryAsync(HyperQueryName, null);
        }
        
        /// <remarks/>
        public void getEmployeesListDetailFromHyperQueryAsync(string HyperQueryName, object userState) {
            if ((this.getEmployeesListDetailFromHyperQueryOperationCompleted == null)) {
                this.getEmployeesListDetailFromHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesListDetailFromHyperQueryOperationCompleted);
            }
            this.InvokeAsync("getEmployeesListDetailFromHyperQuery", new object[] {
                        HyperQueryName}, this.getEmployeesListDetailFromHyperQueryOperationCompleted, userState);
        }
        
        private void OngetEmployeesListDetailFromHyperQueryOperationCompleted(object arg) {
            if ((this.getEmployeesListDetailFromHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesListDetailFromHyperQueryCompleted(this, new getEmployeesListDetailFromHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getWorkgroupLevelDetails", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroupLevel getWorkgroupLevelDetails(int WGLevel) {
            object[] results = this.Invoke("getWorkgroupLevelDetails", new object[] {
                        WGLevel});
            return ((TAeWorkgroupLevel)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkgroupLevelDetailsAsync(int WGLevel) {
            this.getWorkgroupLevelDetailsAsync(WGLevel, null);
        }
        
        /// <remarks/>
        public void getWorkgroupLevelDetailsAsync(int WGLevel, object userState) {
            if ((this.getWorkgroupLevelDetailsOperationCompleted == null)) {
                this.getWorkgroupLevelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkgroupLevelDetailsOperationCompleted);
            }
            this.InvokeAsync("getWorkgroupLevelDetails", new object[] {
                        WGLevel}, this.getWorkgroupLevelDetailsOperationCompleted, userState);
        }
        
        private void OngetWorkgroupLevelDetailsOperationCompleted(object arg) {
            if ((this.getWorkgroupLevelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkgroupLevelDetailsCompleted(this, new getWorkgroupLevelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getWorkgroups", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroup[] getWorkgroups(int WGLevel, TWGSortingOption WGSortingOption) {
            object[] results = this.Invoke("getWorkgroups", new object[] {
                        WGLevel,
                        WGSortingOption});
            return ((TAeWorkgroup[])(results[0]));
        }
        
        /// <remarks/>
        public void getWorkgroupsAsync(int WGLevel, TWGSortingOption WGSortingOption) {
            this.getWorkgroupsAsync(WGLevel, WGSortingOption, null);
        }
        
        /// <remarks/>
        public void getWorkgroupsAsync(int WGLevel, TWGSortingOption WGSortingOption, object userState) {
            if ((this.getWorkgroupsOperationCompleted == null)) {
                this.getWorkgroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkgroupsOperationCompleted);
            }
            this.InvokeAsync("getWorkgroups", new object[] {
                        WGLevel,
                        WGSortingOption}, this.getWorkgroupsOperationCompleted, userState);
        }
        
        private void OngetWorkgroupsOperationCompleted(object arg) {
            if ((this.getWorkgroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkgroupsCompleted(this, new getWorkgroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getWorkgroup", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroup getWorkgroup(int WGLevel, int WGNum) {
            object[] results = this.Invoke("getWorkgroup", new object[] {
                        WGLevel,
                        WGNum});
            return ((TAeWorkgroup)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkgroupAsync(int WGLevel, int WGNum) {
            this.getWorkgroupAsync(WGLevel, WGNum, null);
        }
        
        /// <remarks/>
        public void getWorkgroupAsync(int WGLevel, int WGNum, object userState) {
            if ((this.getWorkgroupOperationCompleted == null)) {
                this.getWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkgroupOperationCompleted);
            }
            this.InvokeAsync("getWorkgroup", new object[] {
                        WGLevel,
                        WGNum}, this.getWorkgroupOperationCompleted, userState);
        }
        
        private void OngetWorkgroupOperationCompleted(object arg) {
            if ((this.getWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkgroupCompleted(this, new getWorkgroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getWorkgroupViaCode", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroup getWorkgroupViaCode(int WGLevel, string WGCode) {
            object[] results = this.Invoke("getWorkgroupViaCode", new object[] {
                        WGLevel,
                        WGCode});
            return ((TAeWorkgroup)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkgroupViaCodeAsync(int WGLevel, string WGCode) {
            this.getWorkgroupViaCodeAsync(WGLevel, WGCode, null);
        }
        
        /// <remarks/>
        public void getWorkgroupViaCodeAsync(int WGLevel, string WGCode, object userState) {
            if ((this.getWorkgroupViaCodeOperationCompleted == null)) {
                this.getWorkgroupViaCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkgroupViaCodeOperationCompleted);
            }
            this.InvokeAsync("getWorkgroupViaCode", new object[] {
                        WGLevel,
                        WGCode}, this.getWorkgroupViaCodeOperationCompleted, userState);
        }
        
        private void OngetWorkgroupViaCodeOperationCompleted(object arg) {
            if ((this.getWorkgroupViaCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkgroupViaCodeCompleted(this, new getWorkgroupViaCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getWorkgroupViaName", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroup getWorkgroupViaName(int WGLevel, string WGName) {
            object[] results = this.Invoke("getWorkgroupViaName", new object[] {
                        WGLevel,
                        WGName});
            return ((TAeWorkgroup)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkgroupViaNameAsync(int WGLevel, string WGName) {
            this.getWorkgroupViaNameAsync(WGLevel, WGName, null);
        }
        
        /// <remarks/>
        public void getWorkgroupViaNameAsync(int WGLevel, string WGName, object userState) {
            if ((this.getWorkgroupViaNameOperationCompleted == null)) {
                this.getWorkgroupViaNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkgroupViaNameOperationCompleted);
            }
            this.InvokeAsync("getWorkgroupViaName", new object[] {
                        WGLevel,
                        WGName}, this.getWorkgroupViaNameOperationCompleted, userState);
        }
        
        private void OngetWorkgroupViaNameOperationCompleted(object arg) {
            if ((this.getWorkgroupViaNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkgroupViaNameCompleted(this, new getWorkgroupViaNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getWorkgroupStruct", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroup getWorkgroupStruct() {
            object[] results = this.Invoke("getWorkgroupStruct", new object[0]);
            return ((TAeWorkgroup)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkgroupStructAsync() {
            this.getWorkgroupStructAsync(null);
        }
        
        /// <remarks/>
        public void getWorkgroupStructAsync(object userState) {
            if ((this.getWorkgroupStructOperationCompleted == null)) {
                this.getWorkgroupStructOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkgroupStructOperationCompleted);
            }
            this.InvokeAsync("getWorkgroupStruct", new object[0], this.getWorkgroupStructOperationCompleted, userState);
        }
        
        private void OngetWorkgroupStructOperationCompleted(object arg) {
            if ((this.getWorkgroupStructCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkgroupStructCompleted(this, new getWorkgroupStructCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setWorkgroup", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setWorkgroup(TAeWorkgroup AeWorkgroup) {
            this.Invoke("setWorkgroup", new object[] {
                        AeWorkgroup});
        }
        
        /// <remarks/>
        public void setWorkgroupAsync(TAeWorkgroup AeWorkgroup) {
            this.setWorkgroupAsync(AeWorkgroup, null);
        }
        
        /// <remarks/>
        public void setWorkgroupAsync(TAeWorkgroup AeWorkgroup, object userState) {
            if ((this.setWorkgroupOperationCompleted == null)) {
                this.setWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWorkgroupOperationCompleted);
            }
            this.InvokeAsync("setWorkgroup", new object[] {
                        AeWorkgroup}, this.setWorkgroupOperationCompleted, userState);
        }
        
        private void OnsetWorkgroupOperationCompleted(object arg) {
            if ((this.setWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWorkgroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#addWorkgroup", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void addWorkgroup(TAeWorkgroup AeWorkgroup) {
            this.Invoke("addWorkgroup", new object[] {
                        AeWorkgroup});
        }
        
        /// <remarks/>
        public void addWorkgroupAsync(TAeWorkgroup AeWorkgroup) {
            this.addWorkgroupAsync(AeWorkgroup, null);
        }
        
        /// <remarks/>
        public void addWorkgroupAsync(TAeWorkgroup AeWorkgroup, object userState) {
            if ((this.addWorkgroupOperationCompleted == null)) {
                this.addWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddWorkgroupOperationCompleted);
            }
            this.InvokeAsync("addWorkgroup", new object[] {
                        AeWorkgroup}, this.addWorkgroupOperationCompleted, userState);
        }
        
        private void OnaddWorkgroupOperationCompleted(object arg) {
            if ((this.addWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addWorkgroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#nextWGNumForWGLevel", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int nextWGNumForWGLevel(int WGLevel) {
            object[] results = this.Invoke("nextWGNumForWGLevel", new object[] {
                        WGLevel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void nextWGNumForWGLevelAsync(int WGLevel) {
            this.nextWGNumForWGLevelAsync(WGLevel, null);
        }
        
        /// <remarks/>
        public void nextWGNumForWGLevelAsync(int WGLevel, object userState) {
            if ((this.nextWGNumForWGLevelOperationCompleted == null)) {
                this.nextWGNumForWGLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnextWGNumForWGLevelOperationCompleted);
            }
            this.InvokeAsync("nextWGNumForWGLevel", new object[] {
                        WGLevel}, this.nextWGNumForWGLevelOperationCompleted, userState);
        }
        
        private void OnnextWGNumForWGLevelOperationCompleted(object arg) {
            if ((this.nextWGNumForWGLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nextWGNumForWGLevelCompleted(this, new nextWGNumForWGLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#delWorkgroup", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void delWorkgroup(int WGLevel, int WGNum, int ReplacementWGNum, bool UseValTable) {
            this.Invoke("delWorkgroup", new object[] {
                        WGLevel,
                        WGNum,
                        ReplacementWGNum,
                        UseValTable});
        }
        
        /// <remarks/>
        public void delWorkgroupAsync(int WGLevel, int WGNum, int ReplacementWGNum, bool UseValTable) {
            this.delWorkgroupAsync(WGLevel, WGNum, ReplacementWGNum, UseValTable, null);
        }
        
        /// <remarks/>
        public void delWorkgroupAsync(int WGLevel, int WGNum, int ReplacementWGNum, bool UseValTable, object userState) {
            if ((this.delWorkgroupOperationCompleted == null)) {
                this.delWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndelWorkgroupOperationCompleted);
            }
            this.InvokeAsync("delWorkgroup", new object[] {
                        WGLevel,
                        WGNum,
                        ReplacementWGNum,
                        UseValTable}, this.delWorkgroupOperationCompleted, userState);
        }
        
        private void OndelWorkgroupOperationCompleted(object arg) {
            if ((this.delWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delWorkgroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodFrameByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayPeriodFrame extractEmployeePeriodFrameByFilekey(int Filekey) {
            object[] results = this.Invoke("extractEmployeePeriodFrameByFilekey", new object[] {
                        Filekey});
            return ((TAePayPeriodFrame)(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodFrameByFilekeyAsync(int Filekey) {
            this.extractEmployeePeriodFrameByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodFrameByFilekeyAsync(int Filekey, object userState) {
            if ((this.extractEmployeePeriodFrameByFilekeyOperationCompleted == null)) {
                this.extractEmployeePeriodFrameByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodFrameByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodFrameByFilekey", new object[] {
                        Filekey}, this.extractEmployeePeriodFrameByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodFrameByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodFrameByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodFrameByFilekeyCompleted(this, new extractEmployeePeriodFrameByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodFrameByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayPeriodFrame extractEmployeePeriodFrameByIDNum(string IDNum) {
            object[] results = this.Invoke("extractEmployeePeriodFrameByIDNum", new object[] {
                        IDNum});
            return ((TAePayPeriodFrame)(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodFrameByIDNumAsync(string IDNum) {
            this.extractEmployeePeriodFrameByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodFrameByIDNumAsync(string IDNum, object userState) {
            if ((this.extractEmployeePeriodFrameByIDNumOperationCompleted == null)) {
                this.extractEmployeePeriodFrameByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodFrameByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodFrameByIDNum", new object[] {
                        IDNum}, this.extractEmployeePeriodFrameByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodFrameByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodFrameByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodFrameByIDNumCompleted(this, new extractEmployeePeriodFrameByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodSummsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeePeriodSummsByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodSummsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodSummsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodSummsByFilekeyAsync(Filekey, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodSummsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodSummsByFilekeyOperationCompleted == null)) {
                this.extractEmployeePeriodSummsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodSummsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodSummsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodSummsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodSummsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodSummsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodSummsByFilekeyCompleted(this, new extractEmployeePeriodSummsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodSummsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeePeriodSummsByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodSummsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodSummsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodSummsByIDNumAsync(IDNum, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodSummsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodSummsByIDNumOperationCompleted == null)) {
                this.extractEmployeePeriodSummsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodSummsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodSummsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodSummsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodSummsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodSummsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodSummsByIDNumCompleted(this, new extractEmployeePeriodSummsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeDailySummsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeDailySummsByFilekey(int Filekey, string Date, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeeDailySummsByFilekey", new object[] {
                        Filekey,
                        Date,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsByFilekeyAsync(int Filekey, string Date, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeeDailySummsByFilekeyAsync(Filekey, Date, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsByFilekeyAsync(int Filekey, string Date, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeeDailySummsByFilekeyOperationCompleted == null)) {
                this.extractEmployeeDailySummsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeDailySummsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeDailySummsByFilekey", new object[] {
                        Filekey,
                        Date,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeeDailySummsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeDailySummsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeDailySummsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeDailySummsByFilekeyCompleted(this, new extractEmployeeDailySummsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeDailySummsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeDailySummsByIDNum(string IDNum, string Date, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeeDailySummsByIDNum", new object[] {
                        IDNum,
                        Date,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsByIDNumAsync(string IDNum, string Date, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeeDailySummsByIDNumAsync(IDNum, Date, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsByIDNumAsync(string IDNum, string Date, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeeDailySummsByIDNumOperationCompleted == null)) {
                this.extractEmployeeDailySummsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeDailySummsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeDailySummsByIDNum", new object[] {
                        IDNum,
                        Date,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeeDailySummsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeDailySummsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeDailySummsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeDailySummsByIDNumCompleted(this, new extractEmployeeDailySummsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftLineSimple[] extractEmployeePeriodShiftsByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodShiftsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAeShiftLineSimple[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodShiftsByFilekeyAsync(Filekey, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodShiftsByFilekeyOperationCompleted == null)) {
                this.extractEmployeePeriodShiftsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodShiftsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftsByFilekeyCompleted(this, new extractEmployeePeriodShiftsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftLineSimple[] extractEmployeePeriodShiftsByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodShiftsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAeShiftLineSimple[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodShiftsByIDNumAsync(IDNum, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodShiftsByIDNumOperationCompleted == null)) {
                this.extractEmployeePeriodShiftsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodShiftsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftsByIDNumCompleted(this, new extractEmployeePeriodShiftsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeTransactionsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTransaction[] extractEmployeeTransactionsByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum) {
            object[] results = this.Invoke("extractEmployeeTransactionsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum});
            return ((TAeTransaction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeTransactionsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum) {
            this.extractEmployeeTransactionsByFilekeyAsync(Filekey, PayPeriodEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeTransactionsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, object userState) {
            if ((this.extractEmployeeTransactionsByFilekeyOperationCompleted == null)) {
                this.extractEmployeeTransactionsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeTransactionsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeTransactionsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum}, this.extractEmployeeTransactionsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeTransactionsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeTransactionsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeTransactionsByFilekeyCompleted(this, new extractEmployeeTransactionsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeTransactionsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTransaction[] extractEmployeeTransactionsByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum) {
            object[] results = this.Invoke("extractEmployeeTransactionsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum});
            return ((TAeTransaction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeTransactionsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum) {
            this.extractEmployeeTransactionsByIDNumAsync(IDNum, PayPeriodEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeTransactionsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, object userState) {
            if ((this.extractEmployeeTransactionsByIDNumOperationCompleted == null)) {
                this.extractEmployeeTransactionsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeTransactionsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeTransactionsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum}, this.extractEmployeeTransactionsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeTransactionsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeTransactionsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeTransactionsByIDNumCompleted(this, new extractEmployeeTransactionsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSchedulesByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeSchedule[] extractEmployeeSchedulesByFilekey(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeSchedulesByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSchedulesByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeSchedulesByFilekeyAsync(Filekey, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSchedulesByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeSchedulesByFilekeyOperationCompleted == null)) {
                this.extractEmployeeSchedulesByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSchedulesByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSchedulesByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeSchedulesByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSchedulesByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeSchedulesByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSchedulesByFilekeyCompleted(this, new extractEmployeeSchedulesByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSchedulesByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeSchedule[] extractEmployeeSchedulesByIDNum(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeSchedulesByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSchedulesByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeSchedulesByIDNumAsync(IDNum, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSchedulesByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeSchedulesByIDNumOperationCompleted == null)) {
                this.extractEmployeeSchedulesByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSchedulesByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSchedulesByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeSchedulesByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSchedulesByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeSchedulesByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSchedulesByIDNumCompleted(this, new extractEmployeeSchedulesByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeEditsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEdit[] extractEmployeeEditsByFilekey(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeEditsByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeEdit[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeEditsByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeEditsByFilekeyAsync(Filekey, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeEditsByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeEditsByFilekeyOperationCompleted == null)) {
                this.extractEmployeeEditsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeEditsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeEditsByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeEditsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeEditsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeEditsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeEditsByFilekeyCompleted(this, new extractEmployeeEditsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeEditsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEdit[] extractEmployeeEditsByIDNum(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeEditsByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeEdit[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeEditsByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeEditsByIDNumAsync(IDNum, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeEditsByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeEditsByIDNumOperationCompleted == null)) {
                this.extractEmployeeEditsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeEditsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeEditsByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeEditsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeEditsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeEditsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeEditsByIDNumCompleted(this, new extractEmployeeEditsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractPayPeriodSummaries", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractPayPeriodSummaries(int PayPerClass, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, TNoActivityInclusion NoActivityInclusion) {
            object[] results = this.Invoke("extractPayPeriodSummaries", new object[] {
                        PayPerClass,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum,
                        NoActivityInclusion});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractPayPeriodSummariesAsync(int PayPerClass, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, TNoActivityInclusion NoActivityInclusion) {
            this.extractPayPeriodSummariesAsync(PayPerClass, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, NoActivityInclusion, null);
        }
        
        /// <remarks/>
        public void extractPayPeriodSummariesAsync(int PayPerClass, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, TNoActivityInclusion NoActivityInclusion, object userState) {
            if ((this.extractPayPeriodSummariesOperationCompleted == null)) {
                this.extractPayPeriodSummariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractPayPeriodSummariesOperationCompleted);
            }
            this.InvokeAsync("extractPayPeriodSummaries", new object[] {
                        PayPerClass,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum,
                        NoActivityInclusion}, this.extractPayPeriodSummariesOperationCompleted, userState);
        }
        
        private void OnextractPayPeriodSummariesOperationCompleted(object arg) {
            if ((this.extractPayPeriodSummariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractPayPeriodSummariesCompleted(this, new extractPayPeriodSummariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#executeExportOperation", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string executeExportOperation(TAeClientExport AeClientExport) {
            object[] results = this.Invoke("executeExportOperation", new object[] {
                        AeClientExport});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void executeExportOperationAsync(TAeClientExport AeClientExport) {
            this.executeExportOperationAsync(AeClientExport, null);
        }
        
        /// <remarks/>
        public void executeExportOperationAsync(TAeClientExport AeClientExport, object userState) {
            if ((this.executeExportOperationOperationCompleted == null)) {
                this.executeExportOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteExportOperationOperationCompleted);
            }
            this.InvokeAsync("executeExportOperation", new object[] {
                        AeClientExport}, this.executeExportOperationOperationCompleted, userState);
        }
        
        private void OnexecuteExportOperationOperationCompleted(object arg) {
            if ((this.executeExportOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeExportOperationCompleted(this, new executeExportOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#executeExportOperationStrings", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] executeExportOperationStrings(TAeClientExport AeClientExport) {
            object[] results = this.Invoke("executeExportOperationStrings", new object[] {
                        AeClientExport});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void executeExportOperationStringsAsync(TAeClientExport AeClientExport) {
            this.executeExportOperationStringsAsync(AeClientExport, null);
        }
        
        /// <remarks/>
        public void executeExportOperationStringsAsync(TAeClientExport AeClientExport, object userState) {
            if ((this.executeExportOperationStringsOperationCompleted == null)) {
                this.executeExportOperationStringsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteExportOperationStringsOperationCompleted);
            }
            this.InvokeAsync("executeExportOperationStrings", new object[] {
                        AeClientExport}, this.executeExportOperationStringsOperationCompleted, userState);
        }
        
        private void OnexecuteExportOperationStringsOperationCompleted(object arg) {
            if ((this.executeExportOperationStringsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeExportOperationStringsCompleted(this, new executeExportOperationStringsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#executeReportOperation", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string executeReportOperation(TAeClientReport AeClientReport) {
            object[] results = this.Invoke("executeReportOperation", new object[] {
                        AeClientReport});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void executeReportOperationAsync(TAeClientReport AeClientReport) {
            this.executeReportOperationAsync(AeClientReport, null);
        }
        
        /// <remarks/>
        public void executeReportOperationAsync(TAeClientReport AeClientReport, object userState) {
            if ((this.executeReportOperationOperationCompleted == null)) {
                this.executeReportOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteReportOperationOperationCompleted);
            }
            this.InvokeAsync("executeReportOperation", new object[] {
                        AeClientReport}, this.executeReportOperationOperationCompleted, userState);
        }
        
        private void OnexecuteReportOperationOperationCompleted(object arg) {
            if ((this.executeReportOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeReportOperationCompleted(this, new executeReportOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#executeVendorOperation", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeClientVendorOpResults[] executeVendorOperation(TAeClientVendorOp AeClientVendorOp) {
            object[] results = this.Invoke("executeVendorOperation", new object[] {
                        AeClientVendorOp});
            return ((TAeClientVendorOpResults[])(results[0]));
        }
        
        /// <remarks/>
        public void executeVendorOperationAsync(TAeClientVendorOp AeClientVendorOp) {
            this.executeVendorOperationAsync(AeClientVendorOp, null);
        }
        
        /// <remarks/>
        public void executeVendorOperationAsync(TAeClientVendorOp AeClientVendorOp, object userState) {
            if ((this.executeVendorOperationOperationCompleted == null)) {
                this.executeVendorOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteVendorOperationOperationCompleted);
            }
            this.InvokeAsync("executeVendorOperation", new object[] {
                        AeClientVendorOp}, this.executeVendorOperationOperationCompleted, userState);
        }
        
        private void OnexecuteVendorOperationOperationCompleted(object arg) {
            if ((this.executeVendorOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeVendorOperationCompleted(this, new executeVendorOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#addAccessAccount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAccessAccount addAccessAccount(TAeAccessAccount AeAccessAccount) {
            object[] results = this.Invoke("addAccessAccount", new object[] {
                        AeAccessAccount});
            return ((TAeAccessAccount)(results[0]));
        }
        
        /// <remarks/>
        public void addAccessAccountAsync(TAeAccessAccount AeAccessAccount) {
            this.addAccessAccountAsync(AeAccessAccount, null);
        }
        
        /// <remarks/>
        public void addAccessAccountAsync(TAeAccessAccount AeAccessAccount, object userState) {
            if ((this.addAccessAccountOperationCompleted == null)) {
                this.addAccessAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAccessAccountOperationCompleted);
            }
            this.InvokeAsync("addAccessAccount", new object[] {
                        AeAccessAccount}, this.addAccessAccountOperationCompleted, userState);
        }
        
        private void OnaddAccessAccountOperationCompleted(object arg) {
            if ((this.addAccessAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAccessAccountCompleted(this, new addAccessAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeAccessAccount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool removeAccessAccount(TAeAccessAccount AeAccessAccount) {
            object[] results = this.Invoke("removeAccessAccount", new object[] {
                        AeAccessAccount});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeAccessAccountAsync(TAeAccessAccount AeAccessAccount) {
            this.removeAccessAccountAsync(AeAccessAccount, null);
        }
        
        /// <remarks/>
        public void removeAccessAccountAsync(TAeAccessAccount AeAccessAccount, object userState) {
            if ((this.removeAccessAccountOperationCompleted == null)) {
                this.removeAccessAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAccessAccountOperationCompleted);
            }
            this.InvokeAsync("removeAccessAccount", new object[] {
                        AeAccessAccount}, this.removeAccessAccountOperationCompleted, userState);
        }
        
        private void OnremoveAccessAccountOperationCompleted(object arg) {
            if ((this.removeAccessAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAccessAccountCompleted(this, new removeAccessAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#editAccessAccount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool editAccessAccount(TAeAccessAccount AeAccessAccount) {
            object[] results = this.Invoke("editAccessAccount", new object[] {
                        AeAccessAccount});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void editAccessAccountAsync(TAeAccessAccount AeAccessAccount) {
            this.editAccessAccountAsync(AeAccessAccount, null);
        }
        
        /// <remarks/>
        public void editAccessAccountAsync(TAeAccessAccount AeAccessAccount, object userState) {
            if ((this.editAccessAccountOperationCompleted == null)) {
                this.editAccessAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditAccessAccountOperationCompleted);
            }
            this.InvokeAsync("editAccessAccount", new object[] {
                        AeAccessAccount}, this.editAccessAccountOperationCompleted, userState);
        }
        
        private void OneditAccessAccountOperationCompleted(object arg) {
            if ((this.editAccessAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editAccessAccountCompleted(this, new editAccessAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayPeriodClosureStats", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayPeriodCloseInfo getPayPeriodClosureStats(TPayPeriodEnum PayPeriodEnum, int PayPeriodClassNum, string HyperQueryName) {
            object[] results = this.Invoke("getPayPeriodClosureStats", new object[] {
                        PayPeriodEnum,
                        PayPeriodClassNum,
                        HyperQueryName});
            return ((TAePayPeriodCloseInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getPayPeriodClosureStatsAsync(TPayPeriodEnum PayPeriodEnum, int PayPeriodClassNum, string HyperQueryName) {
            this.getPayPeriodClosureStatsAsync(PayPeriodEnum, PayPeriodClassNum, HyperQueryName, null);
        }
        
        /// <remarks/>
        public void getPayPeriodClosureStatsAsync(TPayPeriodEnum PayPeriodEnum, int PayPeriodClassNum, string HyperQueryName, object userState) {
            if ((this.getPayPeriodClosureStatsOperationCompleted == null)) {
                this.getPayPeriodClosureStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayPeriodClosureStatsOperationCompleted);
            }
            this.InvokeAsync("getPayPeriodClosureStats", new object[] {
                        PayPeriodEnum,
                        PayPeriodClassNum,
                        HyperQueryName}, this.getPayPeriodClosureStatsOperationCompleted, userState);
        }
        
        private void OngetPayPeriodClosureStatsOperationCompleted(object arg) {
            if ((this.getPayPeriodClosureStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayPeriodClosureStatsCompleted(this, new getPayPeriodClosureStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayPeriodClosureEmployees", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getPayPeriodClosureEmployees(TPayPeriodEnum PayPeriodEnum, int PayPeriodClassNum, string HyperQueryName, bool CriticalOnly, int UserUniqueID) {
            object[] results = this.Invoke("getPayPeriodClosureEmployees", new object[] {
                        PayPeriodEnum,
                        PayPeriodClassNum,
                        HyperQueryName,
                        CriticalOnly,
                        UserUniqueID});
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getPayPeriodClosureEmployeesAsync(TPayPeriodEnum PayPeriodEnum, int PayPeriodClassNum, string HyperQueryName, bool CriticalOnly, int UserUniqueID) {
            this.getPayPeriodClosureEmployeesAsync(PayPeriodEnum, PayPeriodClassNum, HyperQueryName, CriticalOnly, UserUniqueID, null);
        }
        
        /// <remarks/>
        public void getPayPeriodClosureEmployeesAsync(TPayPeriodEnum PayPeriodEnum, int PayPeriodClassNum, string HyperQueryName, bool CriticalOnly, int UserUniqueID, object userState) {
            if ((this.getPayPeriodClosureEmployeesOperationCompleted == null)) {
                this.getPayPeriodClosureEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayPeriodClosureEmployeesOperationCompleted);
            }
            this.InvokeAsync("getPayPeriodClosureEmployees", new object[] {
                        PayPeriodEnum,
                        PayPeriodClassNum,
                        HyperQueryName,
                        CriticalOnly,
                        UserUniqueID}, this.getPayPeriodClosureEmployeesOperationCompleted, userState);
        }
        
        private void OngetPayPeriodClosureEmployeesOperationCompleted(object arg) {
            if ((this.getPayPeriodClosureEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayPeriodClosureEmployeesCompleted(this, new getPayPeriodClosureEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#addAccessAccountWorkgroupAccessRightByAccountCod" +
            "e", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void addAccessAccountWorkgroupAccessRightByAccountCode(string AccountCode, TAeWorkgroupSet AeWorkgroupSet) {
            this.Invoke("addAccessAccountWorkgroupAccessRightByAccountCode", new object[] {
                        AccountCode,
                        AeWorkgroupSet});
        }
        
        /// <remarks/>
        public void addAccessAccountWorkgroupAccessRightByAccountCodeAsync(string AccountCode, TAeWorkgroupSet AeWorkgroupSet) {
            this.addAccessAccountWorkgroupAccessRightByAccountCodeAsync(AccountCode, AeWorkgroupSet, null);
        }
        
        /// <remarks/>
        public void addAccessAccountWorkgroupAccessRightByAccountCodeAsync(string AccountCode, TAeWorkgroupSet AeWorkgroupSet, object userState) {
            if ((this.addAccessAccountWorkgroupAccessRightByAccountCodeOperationCompleted == null)) {
                this.addAccessAccountWorkgroupAccessRightByAccountCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAccessAccountWorkgroupAccessRightByAccountCodeOperationCompleted);
            }
            this.InvokeAsync("addAccessAccountWorkgroupAccessRightByAccountCode", new object[] {
                        AccountCode,
                        AeWorkgroupSet}, this.addAccessAccountWorkgroupAccessRightByAccountCodeOperationCompleted, userState);
        }
        
        private void OnaddAccessAccountWorkgroupAccessRightByAccountCodeOperationCompleted(object arg) {
            if ((this.addAccessAccountWorkgroupAccessRightByAccountCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAccessAccountWorkgroupAccessRightByAccountCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeAccessAccountAllWorkgroupAccessRightsByAcc" +
            "ountCode", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeAccessAccountAllWorkgroupAccessRightsByAccountCode(string AccountCode) {
            this.Invoke("removeAccessAccountAllWorkgroupAccessRightsByAccountCode", new object[] {
                        AccountCode});
        }
        
        /// <remarks/>
        public void removeAccessAccountAllWorkgroupAccessRightsByAccountCodeAsync(string AccountCode) {
            this.removeAccessAccountAllWorkgroupAccessRightsByAccountCodeAsync(AccountCode, null);
        }
        
        /// <remarks/>
        public void removeAccessAccountAllWorkgroupAccessRightsByAccountCodeAsync(string AccountCode, object userState) {
            if ((this.removeAccessAccountAllWorkgroupAccessRightsByAccountCodeOperationCompleted == null)) {
                this.removeAccessAccountAllWorkgroupAccessRightsByAccountCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAccessAccountAllWorkgroupAccessRightsByAccountCodeOperationCompleted);
            }
            this.InvokeAsync("removeAccessAccountAllWorkgroupAccessRightsByAccountCode", new object[] {
                        AccountCode}, this.removeAccessAccountAllWorkgroupAccessRightsByAccountCodeOperationCompleted, userState);
        }
        
        private void OnremoveAccessAccountAllWorkgroupAccessRightsByAccountCodeOperationCompleted(object arg) {
            if ((this.removeAccessAccountAllWorkgroupAccessRightsByAccountCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAccessAccountAllWorkgroupAccessRightsByAccountCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getAccessAccountWorkgroupAccessRightsByAccountCo" +
            "de", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroupSet[] getAccessAccountWorkgroupAccessRightsByAccountCode(string AccountCode) {
            object[] results = this.Invoke("getAccessAccountWorkgroupAccessRightsByAccountCode", new object[] {
                        AccountCode});
            return ((TAeWorkgroupSet[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccessAccountWorkgroupAccessRightsByAccountCodeAsync(string AccountCode) {
            this.getAccessAccountWorkgroupAccessRightsByAccountCodeAsync(AccountCode, null);
        }
        
        /// <remarks/>
        public void getAccessAccountWorkgroupAccessRightsByAccountCodeAsync(string AccountCode, object userState) {
            if ((this.getAccessAccountWorkgroupAccessRightsByAccountCodeOperationCompleted == null)) {
                this.getAccessAccountWorkgroupAccessRightsByAccountCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessAccountWorkgroupAccessRightsByAccountCodeOperationCompleted);
            }
            this.InvokeAsync("getAccessAccountWorkgroupAccessRightsByAccountCode", new object[] {
                        AccountCode}, this.getAccessAccountWorkgroupAccessRightsByAccountCodeOperationCompleted, userState);
        }
        
        private void OngetAccessAccountWorkgroupAccessRightsByAccountCodeOperationCompleted(object arg) {
            if ((this.getAccessAccountWorkgroupAccessRightsByAccountCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessAccountWorkgroupAccessRightsByAccountCodeCompleted(this, new getAccessAccountWorkgroupAccessRightsByAccountCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractRangedTransactionsUsingHyperQuery", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpTransaction[] extractRangedTransactionsUsingHyperQuery(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractRangedTransactionsUsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeEmpTransaction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractRangedTransactionsUsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractRangedTransactionsUsingHyperQueryAsync(HyperQueryName, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractRangedTransactionsUsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractRangedTransactionsUsingHyperQueryOperationCompleted == null)) {
                this.extractRangedTransactionsUsingHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractRangedTransactionsUsingHyperQueryOperationCompleted);
            }
            this.InvokeAsync("extractRangedTransactionsUsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractRangedTransactionsUsingHyperQueryOperationCompleted, userState);
        }
        
        private void OnextractRangedTransactionsUsingHyperQueryOperationCompleted(object arg) {
            if ((this.extractRangedTransactionsUsingHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractRangedTransactionsUsingHyperQueryCompleted(this, new extractRangedTransactionsUsingHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractRangedSchedulesUsingHyperQuery", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeSchedule[] extractRangedSchedulesUsingHyperQuery(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractRangedSchedulesUsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void extractRangedSchedulesUsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractRangedSchedulesUsingHyperQueryAsync(HyperQueryName, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractRangedSchedulesUsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractRangedSchedulesUsingHyperQueryOperationCompleted == null)) {
                this.extractRangedSchedulesUsingHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractRangedSchedulesUsingHyperQueryOperationCompleted);
            }
            this.InvokeAsync("extractRangedSchedulesUsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractRangedSchedulesUsingHyperQueryOperationCompleted, userState);
        }
        
        private void OnextractRangedSchedulesUsingHyperQueryOperationCompleted(object arg) {
            if ((this.extractRangedSchedulesUsingHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractRangedSchedulesUsingHyperQueryCompleted(this, new extractRangedSchedulesUsingHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeePunchByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeePunchByIDNum(string IDNum, string TimeStamp, int Station, int TransType) {
            this.Invoke("appendEmployeePunchByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        Station,
                        TransType});
        }
        
        /// <remarks/>
        public void appendEmployeePunchByIDNumAsync(string IDNum, string TimeStamp, int Station, int TransType) {
            this.appendEmployeePunchByIDNumAsync(IDNum, TimeStamp, Station, TransType, null);
        }
        
        /// <remarks/>
        public void appendEmployeePunchByIDNumAsync(string IDNum, string TimeStamp, int Station, int TransType, object userState) {
            if ((this.appendEmployeePunchByIDNumOperationCompleted == null)) {
                this.appendEmployeePunchByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeePunchByIDNumOperationCompleted);
            }
            this.InvokeAsync("appendEmployeePunchByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        Station,
                        TransType}, this.appendEmployeePunchByIDNumOperationCompleted, userState);
        }
        
        private void OnappendEmployeePunchByIDNumOperationCompleted(object arg) {
            if ((this.appendEmployeePunchByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeePunchByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeePunchByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeePunchByFilekey(int Filekey, string TimeStamp, int Station, int TransType) {
            this.Invoke("appendEmployeePunchByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        Station,
                        TransType});
        }
        
        /// <remarks/>
        public void appendEmployeePunchByFilekeyAsync(int Filekey, string TimeStamp, int Station, int TransType) {
            this.appendEmployeePunchByFilekeyAsync(Filekey, TimeStamp, Station, TransType, null);
        }
        
        /// <remarks/>
        public void appendEmployeePunchByFilekeyAsync(int Filekey, string TimeStamp, int Station, int TransType, object userState) {
            if ((this.appendEmployeePunchByFilekeyOperationCompleted == null)) {
                this.appendEmployeePunchByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeePunchByFilekeyOperationCompleted);
            }
            this.InvokeAsync("appendEmployeePunchByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        Station,
                        TransType}, this.appendEmployeePunchByFilekeyOperationCompleted, userState);
        }
        
        private void OnappendEmployeePunchByFilekeyOperationCompleted(object arg) {
            if ((this.appendEmployeePunchByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeePunchByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#punchEmployeeNowByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void punchEmployeeNowByFilekey(int Filekey, int Station, int TransType) {
            this.Invoke("punchEmployeeNowByFilekey", new object[] {
                        Filekey,
                        Station,
                        TransType});
        }
        
        /// <remarks/>
        public void punchEmployeeNowByFilekeyAsync(int Filekey, int Station, int TransType) {
            this.punchEmployeeNowByFilekeyAsync(Filekey, Station, TransType, null);
        }
        
        /// <remarks/>
        public void punchEmployeeNowByFilekeyAsync(int Filekey, int Station, int TransType, object userState) {
            if ((this.punchEmployeeNowByFilekeyOperationCompleted == null)) {
                this.punchEmployeeNowByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpunchEmployeeNowByFilekeyOperationCompleted);
            }
            this.InvokeAsync("punchEmployeeNowByFilekey", new object[] {
                        Filekey,
                        Station,
                        TransType}, this.punchEmployeeNowByFilekeyOperationCompleted, userState);
        }
        
        private void OnpunchEmployeeNowByFilekeyOperationCompleted(object arg) {
            if ((this.punchEmployeeNowByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.punchEmployeeNowByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#punchEmployeeNowByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void punchEmployeeNowByIDNum(string IDNum, int Station, int TransType) {
            this.Invoke("punchEmployeeNowByIDNum", new object[] {
                        IDNum,
                        Station,
                        TransType});
        }
        
        /// <remarks/>
        public void punchEmployeeNowByIDNumAsync(string IDNum, int Station, int TransType) {
            this.punchEmployeeNowByIDNumAsync(IDNum, Station, TransType, null);
        }
        
        /// <remarks/>
        public void punchEmployeeNowByIDNumAsync(string IDNum, int Station, int TransType, object userState) {
            if ((this.punchEmployeeNowByIDNumOperationCompleted == null)) {
                this.punchEmployeeNowByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpunchEmployeeNowByIDNumOperationCompleted);
            }
            this.InvokeAsync("punchEmployeeNowByIDNum", new object[] {
                        IDNum,
                        Station,
                        TransType}, this.punchEmployeeNowByIDNumOperationCompleted, userState);
        }
        
        private void OnpunchEmployeeNowByIDNumOperationCompleted(object arg) {
            if ((this.punchEmployeeNowByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.punchEmployeeNowByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeTransferByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeTransferByFilekey(int Filekey, string TimeStamp, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.Invoke("appendEmployeeTransferByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID});
        }
        
        /// <remarks/>
        public void appendEmployeeTransferByFilekeyAsync(int Filekey, string TimeStamp, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.appendEmployeeTransferByFilekeyAsync(Filekey, TimeStamp, AeWorkgroupSet, Rate, ReasonCodeID, null);
        }
        
        /// <remarks/>
        public void appendEmployeeTransferByFilekeyAsync(int Filekey, string TimeStamp, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID, object userState) {
            if ((this.appendEmployeeTransferByFilekeyOperationCompleted == null)) {
                this.appendEmployeeTransferByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeTransferByFilekeyOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeTransferByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID}, this.appendEmployeeTransferByFilekeyOperationCompleted, userState);
        }
        
        private void OnappendEmployeeTransferByFilekeyOperationCompleted(object arg) {
            if ((this.appendEmployeeTransferByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeTransferByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeTransferByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeTransferByIDNum(string IDNum, string TimeStamp, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.Invoke("appendEmployeeTransferByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID});
        }
        
        /// <remarks/>
        public void appendEmployeeTransferByIDNumAsync(string IDNum, string TimeStamp, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.appendEmployeeTransferByIDNumAsync(IDNum, TimeStamp, AeWorkgroupSet, Rate, ReasonCodeID, null);
        }
        
        /// <remarks/>
        public void appendEmployeeTransferByIDNumAsync(string IDNum, string TimeStamp, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID, object userState) {
            if ((this.appendEmployeeTransferByIDNumOperationCompleted == null)) {
                this.appendEmployeeTransferByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeTransferByIDNumOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeTransferByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID}, this.appendEmployeeTransferByIDNumOperationCompleted, userState);
        }
        
        private void OnappendEmployeeTransferByIDNumOperationCompleted(object arg) {
            if ((this.appendEmployeeTransferByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeTransferByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#transferEmployeeNowByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void transferEmployeeNowByFilekey(int Filekey, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.Invoke("transferEmployeeNowByFilekey", new object[] {
                        Filekey,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID});
        }
        
        /// <remarks/>
        public void transferEmployeeNowByFilekeyAsync(int Filekey, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.transferEmployeeNowByFilekeyAsync(Filekey, AeWorkgroupSet, Rate, ReasonCodeID, null);
        }
        
        /// <remarks/>
        public void transferEmployeeNowByFilekeyAsync(int Filekey, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID, object userState) {
            if ((this.transferEmployeeNowByFilekeyOperationCompleted == null)) {
                this.transferEmployeeNowByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransferEmployeeNowByFilekeyOperationCompleted);
            }
            this.InvokeAsync("transferEmployeeNowByFilekey", new object[] {
                        Filekey,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID}, this.transferEmployeeNowByFilekeyOperationCompleted, userState);
        }
        
        private void OntransferEmployeeNowByFilekeyOperationCompleted(object arg) {
            if ((this.transferEmployeeNowByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transferEmployeeNowByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#transferEmployeeNowByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void transferEmployeeNowByIDNum(string IDNum, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.Invoke("transferEmployeeNowByIDNum", new object[] {
                        IDNum,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID});
        }
        
        /// <remarks/>
        public void transferEmployeeNowByIDNumAsync(string IDNum, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID) {
            this.transferEmployeeNowByIDNumAsync(IDNum, AeWorkgroupSet, Rate, ReasonCodeID, null);
        }
        
        /// <remarks/>
        public void transferEmployeeNowByIDNumAsync(string IDNum, TAeWorkgroupSet AeWorkgroupSet, double Rate, int ReasonCodeID, object userState) {
            if ((this.transferEmployeeNowByIDNumOperationCompleted == null)) {
                this.transferEmployeeNowByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransferEmployeeNowByIDNumOperationCompleted);
            }
            this.InvokeAsync("transferEmployeeNowByIDNum", new object[] {
                        IDNum,
                        AeWorkgroupSet,
                        Rate,
                        ReasonCodeID}, this.transferEmployeeNowByIDNumOperationCompleted, userState);
        }
        
        private void OntransferEmployeeNowByIDNumOperationCompleted(object arg) {
            if ((this.transferEmployeeNowByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transferEmployeeNowByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#recomputePendingRequests", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void recomputePendingRequests() {
            this.Invoke("recomputePendingRequests", new object[0]);
        }
        
        /// <remarks/>
        public void recomputePendingRequestsAsync() {
            this.recomputePendingRequestsAsync(null);
        }
        
        /// <remarks/>
        public void recomputePendingRequestsAsync(object userState) {
            if ((this.recomputePendingRequestsOperationCompleted == null)) {
                this.recomputePendingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecomputePendingRequestsOperationCompleted);
            }
            this.InvokeAsync("recomputePendingRequests", new object[0], this.recomputePendingRequestsOperationCompleted, userState);
        }
        
        private void OnrecomputePendingRequestsOperationCompleted(object arg) {
            if ((this.recomputePendingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recomputePendingRequestsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#recomputeEmployeeByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void recomputeEmployeeByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum) {
            this.Invoke("recomputeEmployeeByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum});
        }
        
        /// <remarks/>
        public void recomputeEmployeeByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum) {
            this.recomputeEmployeeByFilekeyAsync(Filekey, PayPeriodEnum, null);
        }
        
        /// <remarks/>
        public void recomputeEmployeeByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, object userState) {
            if ((this.recomputeEmployeeByFilekeyOperationCompleted == null)) {
                this.recomputeEmployeeByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecomputeEmployeeByFilekeyOperationCompleted);
            }
            this.InvokeAsync("recomputeEmployeeByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum}, this.recomputeEmployeeByFilekeyOperationCompleted, userState);
        }
        
        private void OnrecomputeEmployeeByFilekeyOperationCompleted(object arg) {
            if ((this.recomputeEmployeeByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recomputeEmployeeByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#recomputeEmployeeByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void recomputeEmployeeByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum) {
            this.Invoke("recomputeEmployeeByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum});
        }
        
        /// <remarks/>
        public void recomputeEmployeeByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum) {
            this.recomputeEmployeeByIDNumAsync(IDNum, PayPeriodEnum, null);
        }
        
        /// <remarks/>
        public void recomputeEmployeeByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, object userState) {
            if ((this.recomputeEmployeeByIDNumOperationCompleted == null)) {
                this.recomputeEmployeeByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecomputeEmployeeByIDNumOperationCompleted);
            }
            this.InvokeAsync("recomputeEmployeeByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum}, this.recomputeEmployeeByIDNumOperationCompleted, userState);
        }
        
        private void OnrecomputeEmployeeByIDNumOperationCompleted(object arg) {
            if ((this.recomputeEmployeeByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recomputeEmployeeByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#recomputeEmployeeAccrualsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void recomputeEmployeeAccrualsByFilekey(int Filekey, string FromDate) {
            this.Invoke("recomputeEmployeeAccrualsByFilekey", new object[] {
                        Filekey,
                        FromDate});
        }
        
        /// <remarks/>
        public void recomputeEmployeeAccrualsByFilekeyAsync(int Filekey, string FromDate) {
            this.recomputeEmployeeAccrualsByFilekeyAsync(Filekey, FromDate, null);
        }
        
        /// <remarks/>
        public void recomputeEmployeeAccrualsByFilekeyAsync(int Filekey, string FromDate, object userState) {
            if ((this.recomputeEmployeeAccrualsByFilekeyOperationCompleted == null)) {
                this.recomputeEmployeeAccrualsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecomputeEmployeeAccrualsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("recomputeEmployeeAccrualsByFilekey", new object[] {
                        Filekey,
                        FromDate}, this.recomputeEmployeeAccrualsByFilekeyOperationCompleted, userState);
        }
        
        private void OnrecomputeEmployeeAccrualsByFilekeyOperationCompleted(object arg) {
            if ((this.recomputeEmployeeAccrualsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recomputeEmployeeAccrualsByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#recomputeEmployeeAccrualsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void recomputeEmployeeAccrualsByIDNum(string IDNum, string FromDate) {
            this.Invoke("recomputeEmployeeAccrualsByIDNum", new object[] {
                        IDNum,
                        FromDate});
        }
        
        /// <remarks/>
        public void recomputeEmployeeAccrualsByIDNumAsync(string IDNum, string FromDate) {
            this.recomputeEmployeeAccrualsByIDNumAsync(IDNum, FromDate, null);
        }
        
        /// <remarks/>
        public void recomputeEmployeeAccrualsByIDNumAsync(string IDNum, string FromDate, object userState) {
            if ((this.recomputeEmployeeAccrualsByIDNumOperationCompleted == null)) {
                this.recomputeEmployeeAccrualsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecomputeEmployeeAccrualsByIDNumOperationCompleted);
            }
            this.InvokeAsync("recomputeEmployeeAccrualsByIDNum", new object[] {
                        IDNum,
                        FromDate}, this.recomputeEmployeeAccrualsByIDNumOperationCompleted, userState);
        }
        
        private void OnrecomputeEmployeeAccrualsByIDNumOperationCompleted(object arg) {
            if ((this.recomputeEmployeeAccrualsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recomputeEmployeeAccrualsByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#employeeBenefitBalanceAsOfByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double employeeBenefitBalanceAsOfByFilekey(int Filekey, int BenefitID, string SelDate) {
            object[] results = this.Invoke("employeeBenefitBalanceAsOfByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        SelDate});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void employeeBenefitBalanceAsOfByFilekeyAsync(int Filekey, int BenefitID, string SelDate) {
            this.employeeBenefitBalanceAsOfByFilekeyAsync(Filekey, BenefitID, SelDate, null);
        }
        
        /// <remarks/>
        public void employeeBenefitBalanceAsOfByFilekeyAsync(int Filekey, int BenefitID, string SelDate, object userState) {
            if ((this.employeeBenefitBalanceAsOfByFilekeyOperationCompleted == null)) {
                this.employeeBenefitBalanceAsOfByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemployeeBenefitBalanceAsOfByFilekeyOperationCompleted);
            }
            this.InvokeAsync("employeeBenefitBalanceAsOfByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        SelDate}, this.employeeBenefitBalanceAsOfByFilekeyOperationCompleted, userState);
        }
        
        private void OnemployeeBenefitBalanceAsOfByFilekeyOperationCompleted(object arg) {
            if ((this.employeeBenefitBalanceAsOfByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.employeeBenefitBalanceAsOfByFilekeyCompleted(this, new employeeBenefitBalanceAsOfByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#employeeBenefitBalanceAsOfByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double employeeBenefitBalanceAsOfByIDNum(string IDNum, int BenefitID, string SelDate) {
            object[] results = this.Invoke("employeeBenefitBalanceAsOfByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        SelDate});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void employeeBenefitBalanceAsOfByIDNumAsync(string IDNum, int BenefitID, string SelDate) {
            this.employeeBenefitBalanceAsOfByIDNumAsync(IDNum, BenefitID, SelDate, null);
        }
        
        /// <remarks/>
        public void employeeBenefitBalanceAsOfByIDNumAsync(string IDNum, int BenefitID, string SelDate, object userState) {
            if ((this.employeeBenefitBalanceAsOfByIDNumOperationCompleted == null)) {
                this.employeeBenefitBalanceAsOfByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemployeeBenefitBalanceAsOfByIDNumOperationCompleted);
            }
            this.InvokeAsync("employeeBenefitBalanceAsOfByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        SelDate}, this.employeeBenefitBalanceAsOfByIDNumOperationCompleted, userState);
        }
        
        private void OnemployeeBenefitBalanceAsOfByIDNumOperationCompleted(object arg) {
            if ((this.employeeBenefitBalanceAsOfByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.employeeBenefitBalanceAsOfByIDNumCompleted(this, new employeeBenefitBalanceAsOfByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#adjustEmployeeBenefitBalanceByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void adjustEmployeeBenefitBalanceByFilekey(int Filekey, int BenefitID, string SelDate, TBenAdjTypeEnum BenAdjType, double Amount) {
            this.Invoke("adjustEmployeeBenefitBalanceByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        SelDate,
                        BenAdjType,
                        Amount});
        }
        
        /// <remarks/>
        public void adjustEmployeeBenefitBalanceByFilekeyAsync(int Filekey, int BenefitID, string SelDate, TBenAdjTypeEnum BenAdjType, double Amount) {
            this.adjustEmployeeBenefitBalanceByFilekeyAsync(Filekey, BenefitID, SelDate, BenAdjType, Amount, null);
        }
        
        /// <remarks/>
        public void adjustEmployeeBenefitBalanceByFilekeyAsync(int Filekey, int BenefitID, string SelDate, TBenAdjTypeEnum BenAdjType, double Amount, object userState) {
            if ((this.adjustEmployeeBenefitBalanceByFilekeyOperationCompleted == null)) {
                this.adjustEmployeeBenefitBalanceByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadjustEmployeeBenefitBalanceByFilekeyOperationCompleted);
            }
            this.InvokeAsync("adjustEmployeeBenefitBalanceByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        SelDate,
                        BenAdjType,
                        Amount}, this.adjustEmployeeBenefitBalanceByFilekeyOperationCompleted, userState);
        }
        
        private void OnadjustEmployeeBenefitBalanceByFilekeyOperationCompleted(object arg) {
            if ((this.adjustEmployeeBenefitBalanceByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adjustEmployeeBenefitBalanceByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#adjustEmployeeBenefitBalanceByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void adjustEmployeeBenefitBalanceByIDNum(string IDNum, int BenefitID, string SelDate, TBenAdjTypeEnum BenAdjType, double Amount) {
            this.Invoke("adjustEmployeeBenefitBalanceByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        SelDate,
                        BenAdjType,
                        Amount});
        }
        
        /// <remarks/>
        public void adjustEmployeeBenefitBalanceByIDNumAsync(string IDNum, int BenefitID, string SelDate, TBenAdjTypeEnum BenAdjType, double Amount) {
            this.adjustEmployeeBenefitBalanceByIDNumAsync(IDNum, BenefitID, SelDate, BenAdjType, Amount, null);
        }
        
        /// <remarks/>
        public void adjustEmployeeBenefitBalanceByIDNumAsync(string IDNum, int BenefitID, string SelDate, TBenAdjTypeEnum BenAdjType, double Amount, object userState) {
            if ((this.adjustEmployeeBenefitBalanceByIDNumOperationCompleted == null)) {
                this.adjustEmployeeBenefitBalanceByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadjustEmployeeBenefitBalanceByIDNumOperationCompleted);
            }
            this.InvokeAsync("adjustEmployeeBenefitBalanceByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        SelDate,
                        BenAdjType,
                        Amount}, this.adjustEmployeeBenefitBalanceByIDNumOperationCompleted, userState);
        }
        
        private void OnadjustEmployeeBenefitBalanceByIDNumOperationCompleted(object arg) {
            if ((this.adjustEmployeeBenefitBalanceByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adjustEmployeeBenefitBalanceByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeBenefitAdjustmentsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeBenefitAdjustmentsByFilekey(int Filekey, int BenefitID, string FromDate, string ToDate) {
            this.Invoke("removeEmployeeBenefitAdjustmentsByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        FromDate,
                        ToDate});
        }
        
        /// <remarks/>
        public void removeEmployeeBenefitAdjustmentsByFilekeyAsync(int Filekey, int BenefitID, string FromDate, string ToDate) {
            this.removeEmployeeBenefitAdjustmentsByFilekeyAsync(Filekey, BenefitID, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void removeEmployeeBenefitAdjustmentsByFilekeyAsync(int Filekey, int BenefitID, string FromDate, string ToDate, object userState) {
            if ((this.removeEmployeeBenefitAdjustmentsByFilekeyOperationCompleted == null)) {
                this.removeEmployeeBenefitAdjustmentsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeBenefitAdjustmentsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeBenefitAdjustmentsByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        FromDate,
                        ToDate}, this.removeEmployeeBenefitAdjustmentsByFilekeyOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeBenefitAdjustmentsByFilekeyOperationCompleted(object arg) {
            if ((this.removeEmployeeBenefitAdjustmentsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeBenefitAdjustmentsByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeBenefitAdjustmentsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeBenefitAdjustmentsByIDNum(string IDNum, int BenefitID, string FromDate, string ToDate) {
            this.Invoke("removeEmployeeBenefitAdjustmentsByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        FromDate,
                        ToDate});
        }
        
        /// <remarks/>
        public void removeEmployeeBenefitAdjustmentsByIDNumAsync(string IDNum, int BenefitID, string FromDate, string ToDate) {
            this.removeEmployeeBenefitAdjustmentsByIDNumAsync(IDNum, BenefitID, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void removeEmployeeBenefitAdjustmentsByIDNumAsync(string IDNum, int BenefitID, string FromDate, string ToDate, object userState) {
            if ((this.removeEmployeeBenefitAdjustmentsByIDNumOperationCompleted == null)) {
                this.removeEmployeeBenefitAdjustmentsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeBenefitAdjustmentsByIDNumOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeBenefitAdjustmentsByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        FromDate,
                        ToDate}, this.removeEmployeeBenefitAdjustmentsByIDNumOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeBenefitAdjustmentsByIDNumOperationCompleted(object arg) {
            if ((this.removeEmployeeBenefitAdjustmentsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeBenefitAdjustmentsByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeBenefitActivityByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpBenefitActivity[] extractEmployeeBenefitActivityByFilekey(int Filekey, int BenefitID, string FromDate, string ToDate) {
            object[] results = this.Invoke("extractEmployeeBenefitActivityByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        FromDate,
                        ToDate});
            return ((TAeEmpBenefitActivity[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeBenefitActivityByFilekeyAsync(int Filekey, int BenefitID, string FromDate, string ToDate) {
            this.extractEmployeeBenefitActivityByFilekeyAsync(Filekey, BenefitID, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeBenefitActivityByFilekeyAsync(int Filekey, int BenefitID, string FromDate, string ToDate, object userState) {
            if ((this.extractEmployeeBenefitActivityByFilekeyOperationCompleted == null)) {
                this.extractEmployeeBenefitActivityByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeBenefitActivityByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeBenefitActivityByFilekey", new object[] {
                        Filekey,
                        BenefitID,
                        FromDate,
                        ToDate}, this.extractEmployeeBenefitActivityByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeBenefitActivityByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeBenefitActivityByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeBenefitActivityByFilekeyCompleted(this, new extractEmployeeBenefitActivityByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeBenefitActivityByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpBenefitActivity[] extractEmployeeBenefitActivityByIDNum(string IDNum, int BenefitID, string FromDate, string ToDate) {
            object[] results = this.Invoke("extractEmployeeBenefitActivityByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        FromDate,
                        ToDate});
            return ((TAeEmpBenefitActivity[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeBenefitActivityByIDNumAsync(string IDNum, int BenefitID, string FromDate, string ToDate) {
            this.extractEmployeeBenefitActivityByIDNumAsync(IDNum, BenefitID, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeBenefitActivityByIDNumAsync(string IDNum, int BenefitID, string FromDate, string ToDate, object userState) {
            if ((this.extractEmployeeBenefitActivityByIDNumOperationCompleted == null)) {
                this.extractEmployeeBenefitActivityByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeBenefitActivityByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeBenefitActivityByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        FromDate,
                        ToDate}, this.extractEmployeeBenefitActivityByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeBenefitActivityByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeBenefitActivityByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeBenefitActivityByIDNumCompleted(this, new extractEmployeeBenefitActivityByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeESSPINByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeESSPINByFilekey(int Filekey, string PIN) {
            this.Invoke("setEmployeeESSPINByFilekey", new object[] {
                        Filekey,
                        PIN});
        }
        
        /// <remarks/>
        public void setEmployeeESSPINByFilekeyAsync(int Filekey, string PIN) {
            this.setEmployeeESSPINByFilekeyAsync(Filekey, PIN, null);
        }
        
        /// <remarks/>
        public void setEmployeeESSPINByFilekeyAsync(int Filekey, string PIN, object userState) {
            if ((this.setEmployeeESSPINByFilekeyOperationCompleted == null)) {
                this.setEmployeeESSPINByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeESSPINByFilekeyOperationCompleted);
            }
            this.InvokeAsync("setEmployeeESSPINByFilekey", new object[] {
                        Filekey,
                        PIN}, this.setEmployeeESSPINByFilekeyOperationCompleted, userState);
        }
        
        private void OnsetEmployeeESSPINByFilekeyOperationCompleted(object arg) {
            if ((this.setEmployeeESSPINByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeESSPINByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeESSPINByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeESSPINByIDNum(string IDNum, string PIN) {
            this.Invoke("setEmployeeESSPINByIDNum", new object[] {
                        IDNum,
                        PIN});
        }
        
        /// <remarks/>
        public void setEmployeeESSPINByIDNumAsync(string IDNum, string PIN) {
            this.setEmployeeESSPINByIDNumAsync(IDNum, PIN, null);
        }
        
        /// <remarks/>
        public void setEmployeeESSPINByIDNumAsync(string IDNum, string PIN, object userState) {
            if ((this.setEmployeeESSPINByIDNumOperationCompleted == null)) {
                this.setEmployeeESSPINByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeESSPINByIDNumOperationCompleted);
            }
            this.InvokeAsync("setEmployeeESSPINByIDNum", new object[] {
                        IDNum,
                        PIN}, this.setEmployeeESSPINByIDNumOperationCompleted, userState);
        }
        
        private void OnsetEmployeeESSPINByIDNumOperationCompleted(object arg) {
            if ((this.setEmployeeESSPINByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeESSPINByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeESSPINByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getEmployeeESSPINByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeESSPINByFilekey", new object[] {
                        Filekey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeESSPINByFilekeyAsync(int Filekey) {
            this.getEmployeeESSPINByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeESSPINByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeESSPINByFilekeyOperationCompleted == null)) {
                this.getEmployeeESSPINByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeESSPINByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeESSPINByFilekey", new object[] {
                        Filekey}, this.getEmployeeESSPINByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeESSPINByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeESSPINByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeESSPINByFilekeyCompleted(this, new getEmployeeESSPINByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeESSPINByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getEmployeeESSPINByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeESSPINByIDNum", new object[] {
                        IDNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeESSPINByIDNumAsync(string IDNum) {
            this.getEmployeeESSPINByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeESSPINByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeESSPINByIDNumOperationCompleted == null)) {
                this.getEmployeeESSPINByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeESSPINByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeESSPINByIDNum", new object[] {
                        IDNum}, this.getEmployeeESSPINByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeESSPINByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeESSPINByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeESSPINByIDNumCompleted(this, new getEmployeeESSPINByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeESSEMailByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeESSEMailByFilekey(int Filekey, string EMail) {
            this.Invoke("setEmployeeESSEMailByFilekey", new object[] {
                        Filekey,
                        EMail});
        }
        
        /// <remarks/>
        public void setEmployeeESSEMailByFilekeyAsync(int Filekey, string EMail) {
            this.setEmployeeESSEMailByFilekeyAsync(Filekey, EMail, null);
        }
        
        /// <remarks/>
        public void setEmployeeESSEMailByFilekeyAsync(int Filekey, string EMail, object userState) {
            if ((this.setEmployeeESSEMailByFilekeyOperationCompleted == null)) {
                this.setEmployeeESSEMailByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeESSEMailByFilekeyOperationCompleted);
            }
            this.InvokeAsync("setEmployeeESSEMailByFilekey", new object[] {
                        Filekey,
                        EMail}, this.setEmployeeESSEMailByFilekeyOperationCompleted, userState);
        }
        
        private void OnsetEmployeeESSEMailByFilekeyOperationCompleted(object arg) {
            if ((this.setEmployeeESSEMailByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeESSEMailByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeESSEMailByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeESSEMailByIDNum(string IDNum, string EMail) {
            this.Invoke("setEmployeeESSEMailByIDNum", new object[] {
                        IDNum,
                        EMail});
        }
        
        /// <remarks/>
        public void setEmployeeESSEMailByIDNumAsync(string IDNum, string EMail) {
            this.setEmployeeESSEMailByIDNumAsync(IDNum, EMail, null);
        }
        
        /// <remarks/>
        public void setEmployeeESSEMailByIDNumAsync(string IDNum, string EMail, object userState) {
            if ((this.setEmployeeESSEMailByIDNumOperationCompleted == null)) {
                this.setEmployeeESSEMailByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeESSEMailByIDNumOperationCompleted);
            }
            this.InvokeAsync("setEmployeeESSEMailByIDNum", new object[] {
                        IDNum,
                        EMail}, this.setEmployeeESSEMailByIDNumOperationCompleted, userState);
        }
        
        private void OnsetEmployeeESSEMailByIDNumOperationCompleted(object arg) {
            if ((this.setEmployeeESSEMailByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeESSEMailByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeESSEMailByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getEmployeeESSEMailByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeESSEMailByFilekey", new object[] {
                        Filekey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeESSEMailByFilekeyAsync(int Filekey) {
            this.getEmployeeESSEMailByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeESSEMailByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeESSEMailByFilekeyOperationCompleted == null)) {
                this.getEmployeeESSEMailByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeESSEMailByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeESSEMailByFilekey", new object[] {
                        Filekey}, this.getEmployeeESSEMailByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeESSEMailByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeESSEMailByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeESSEMailByFilekeyCompleted(this, new getEmployeeESSEMailByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeESSEMailByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getEmployeeESSEMailByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeESSEMailByIDNum", new object[] {
                        IDNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeESSEMailByIDNumAsync(string IDNum) {
            this.getEmployeeESSEMailByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeESSEMailByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeESSEMailByIDNumOperationCompleted == null)) {
                this.getEmployeeESSEMailByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeESSEMailByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeESSEMailByIDNum", new object[] {
                        IDNum}, this.getEmployeeESSEMailByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeESSEMailByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeESSEMailByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeESSEMailByIDNumCompleted(this, new getEmployeeESSEMailByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyRatePayTypeAssignment", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeRatePayTypeAssignment getEmptyRatePayTypeAssignment() {
            object[] results = this.Invoke("getEmptyRatePayTypeAssignment", new object[0]);
            return ((TAeRatePayTypeAssignment)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyRatePayTypeAssignmentAsync() {
            this.getEmptyRatePayTypeAssignmentAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyRatePayTypeAssignmentAsync(object userState) {
            if ((this.getEmptyRatePayTypeAssignmentOperationCompleted == null)) {
                this.getEmptyRatePayTypeAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyRatePayTypeAssignmentOperationCompleted);
            }
            this.InvokeAsync("getEmptyRatePayTypeAssignment", new object[0], this.getEmptyRatePayTypeAssignmentOperationCompleted, userState);
        }
        
        private void OngetEmptyRatePayTypeAssignmentOperationCompleted(object arg) {
            if ((this.getEmptyRatePayTypeAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyRatePayTypeAssignmentCompleted(this, new getEmptyRatePayTypeAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeRateHistoryByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeRateAssignment[] getEmployeeRateHistoryByFilekey(int Filekey, string MinDate, string MaxDate) {
            object[] results = this.Invoke("getEmployeeRateHistoryByFilekey", new object[] {
                        Filekey,
                        MinDate,
                        MaxDate});
            return ((TAeRateAssignment[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeRateHistoryByFilekeyAsync(int Filekey, string MinDate, string MaxDate) {
            this.getEmployeeRateHistoryByFilekeyAsync(Filekey, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void getEmployeeRateHistoryByFilekeyAsync(int Filekey, string MinDate, string MaxDate, object userState) {
            if ((this.getEmployeeRateHistoryByFilekeyOperationCompleted == null)) {
                this.getEmployeeRateHistoryByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeRateHistoryByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeRateHistoryByFilekey", new object[] {
                        Filekey,
                        MinDate,
                        MaxDate}, this.getEmployeeRateHistoryByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeRateHistoryByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeRateHistoryByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeRateHistoryByFilekeyCompleted(this, new getEmployeeRateHistoryByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeRateHistoryByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeRateAssignment[] getEmployeeRateHistoryByIDNum(string IDNum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("getEmployeeRateHistoryByIDNum", new object[] {
                        IDNum,
                        MinDate,
                        MaxDate});
            return ((TAeRateAssignment[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeRateHistoryByIDNumAsync(string IDNum, string MinDate, string MaxDate) {
            this.getEmployeeRateHistoryByIDNumAsync(IDNum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void getEmployeeRateHistoryByIDNumAsync(string IDNum, string MinDate, string MaxDate, object userState) {
            if ((this.getEmployeeRateHistoryByIDNumOperationCompleted == null)) {
                this.getEmployeeRateHistoryByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeRateHistoryByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeRateHistoryByIDNum", new object[] {
                        IDNum,
                        MinDate,
                        MaxDate}, this.getEmployeeRateHistoryByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeRateHistoryByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeRateHistoryByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeRateHistoryByIDNumCompleted(this, new getEmployeeRateHistoryByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeRateHistoryByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeRateHistoryByFilekey(int Filekey, string MinDate, string MaxDate) {
            this.Invoke("removeEmployeeRateHistoryByFilekey", new object[] {
                        Filekey,
                        MinDate,
                        MaxDate});
        }
        
        /// <remarks/>
        public void removeEmployeeRateHistoryByFilekeyAsync(int Filekey, string MinDate, string MaxDate) {
            this.removeEmployeeRateHistoryByFilekeyAsync(Filekey, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void removeEmployeeRateHistoryByFilekeyAsync(int Filekey, string MinDate, string MaxDate, object userState) {
            if ((this.removeEmployeeRateHistoryByFilekeyOperationCompleted == null)) {
                this.removeEmployeeRateHistoryByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeRateHistoryByFilekeyOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeRateHistoryByFilekey", new object[] {
                        Filekey,
                        MinDate,
                        MaxDate}, this.removeEmployeeRateHistoryByFilekeyOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeRateHistoryByFilekeyOperationCompleted(object arg) {
            if ((this.removeEmployeeRateHistoryByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeRateHistoryByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeRateHistoryByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeRateHistoryByIDNum(string IDNum, string MinDate, string MaxDate) {
            this.Invoke("removeEmployeeRateHistoryByIDNum", new object[] {
                        IDNum,
                        MinDate,
                        MaxDate});
        }
        
        /// <remarks/>
        public void removeEmployeeRateHistoryByIDNumAsync(string IDNum, string MinDate, string MaxDate) {
            this.removeEmployeeRateHistoryByIDNumAsync(IDNum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void removeEmployeeRateHistoryByIDNumAsync(string IDNum, string MinDate, string MaxDate, object userState) {
            if ((this.removeEmployeeRateHistoryByIDNumOperationCompleted == null)) {
                this.removeEmployeeRateHistoryByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeRateHistoryByIDNumOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeRateHistoryByIDNum", new object[] {
                        IDNum,
                        MinDate,
                        MaxDate}, this.removeEmployeeRateHistoryByIDNumOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeRateHistoryByIDNumOperationCompleted(object arg) {
            if ((this.removeEmployeeRateHistoryByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeRateHistoryByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeFilekeyByBadge", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getEmployeeFilekeyByBadge(int BadgeNum) {
            object[] results = this.Invoke("getEmployeeFilekeyByBadge", new object[] {
                        BadgeNum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeFilekeyByBadgeAsync(int BadgeNum) {
            this.getEmployeeFilekeyByBadgeAsync(BadgeNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeFilekeyByBadgeAsync(int BadgeNum, object userState) {
            if ((this.getEmployeeFilekeyByBadgeOperationCompleted == null)) {
                this.getEmployeeFilekeyByBadgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeFilekeyByBadgeOperationCompleted);
            }
            this.InvokeAsync("getEmployeeFilekeyByBadge", new object[] {
                        BadgeNum}, this.getEmployeeFilekeyByBadgeOperationCompleted, userState);
        }
        
        private void OngetEmployeeFilekeyByBadgeOperationCompleted(object arg) {
            if ((this.getEmployeeFilekeyByBadgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeFilekeyByBadgeCompleted(this, new getEmployeeFilekeyByBadgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#loadUsageItemsInRange", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeUsageItem[] loadUsageItemsInRange(TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("loadUsageItemsInRange", new object[] {
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeUsageItem[])(results[0]));
        }
        
        /// <remarks/>
        public void loadUsageItemsInRangeAsync(TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.loadUsageItemsInRangeAsync(DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void loadUsageItemsInRangeAsync(TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.loadUsageItemsInRangeOperationCompleted == null)) {
                this.loadUsageItemsInRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadUsageItemsInRangeOperationCompleted);
            }
            this.InvokeAsync("loadUsageItemsInRange", new object[] {
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.loadUsageItemsInRangeOperationCompleted, userState);
        }
        
        private void OnloadUsageItemsInRangeOperationCompleted(object arg) {
            if ((this.loadUsageItemsInRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadUsageItemsInRangeCompleted(this, new loadUsageItemsInRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getAccessAccountViaUniqueID", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAccessAccount getAccessAccountViaUniqueID(int UniqueID) {
            object[] results = this.Invoke("getAccessAccountViaUniqueID", new object[] {
                        UniqueID});
            return ((TAeAccessAccount)(results[0]));
        }
        
        /// <remarks/>
        public void getAccessAccountViaUniqueIDAsync(int UniqueID) {
            this.getAccessAccountViaUniqueIDAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void getAccessAccountViaUniqueIDAsync(int UniqueID, object userState) {
            if ((this.getAccessAccountViaUniqueIDOperationCompleted == null)) {
                this.getAccessAccountViaUniqueIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessAccountViaUniqueIDOperationCompleted);
            }
            this.InvokeAsync("getAccessAccountViaUniqueID", new object[] {
                        UniqueID}, this.getAccessAccountViaUniqueIDOperationCompleted, userState);
        }
        
        private void OngetAccessAccountViaUniqueIDOperationCompleted(object arg) {
            if ((this.getAccessAccountViaUniqueIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessAccountViaUniqueIDCompleted(this, new getAccessAccountViaUniqueIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#loadAccessAccountActivitysInRange", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAccessAccountActivity[] loadAccessAccountActivitysInRange(int UniqueID, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("loadAccessAccountActivitysInRange", new object[] {
                        UniqueID,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeAccessAccountActivity[])(results[0]));
        }
        
        /// <remarks/>
        public void loadAccessAccountActivitysInRangeAsync(int UniqueID, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.loadAccessAccountActivitysInRangeAsync(UniqueID, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void loadAccessAccountActivitysInRangeAsync(int UniqueID, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.loadAccessAccountActivitysInRangeOperationCompleted == null)) {
                this.loadAccessAccountActivitysInRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadAccessAccountActivitysInRangeOperationCompleted);
            }
            this.InvokeAsync("loadAccessAccountActivitysInRange", new object[] {
                        UniqueID,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.loadAccessAccountActivitysInRangeOperationCompleted, userState);
        }
        
        private void OnloadAccessAccountActivitysInRangeOperationCompleted(object arg) {
            if ((this.loadAccessAccountActivitysInRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadAccessAccountActivitysInRangeCompleted(this, new loadAccessAccountActivitysInRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractTimeClockStations", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTimeClockStation[] extractTimeClockStations() {
            object[] results = this.Invoke("extractTimeClockStations", new object[0]);
            return ((TAeTimeClockStation[])(results[0]));
        }
        
        /// <remarks/>
        public void extractTimeClockStationsAsync() {
            this.extractTimeClockStationsAsync(null);
        }
        
        /// <remarks/>
        public void extractTimeClockStationsAsync(object userState) {
            if ((this.extractTimeClockStationsOperationCompleted == null)) {
                this.extractTimeClockStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractTimeClockStationsOperationCompleted);
            }
            this.InvokeAsync("extractTimeClockStations", new object[0], this.extractTimeClockStationsOperationCompleted, userState);
        }
        
        private void OnextractTimeClockStationsOperationCompleted(object arg) {
            if ((this.extractTimeClockStationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractTimeClockStationsCompleted(this, new extractTimeClockStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#loadBillingItemsInRange", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBillingItem[] loadBillingItemsInRange(int ItemType, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("loadBillingItemsInRange", new object[] {
                        ItemType,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeBillingItem[])(results[0]));
        }
        
        /// <remarks/>
        public void loadBillingItemsInRangeAsync(int ItemType, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.loadBillingItemsInRangeAsync(ItemType, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void loadBillingItemsInRangeAsync(int ItemType, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.loadBillingItemsInRangeOperationCompleted == null)) {
                this.loadBillingItemsInRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadBillingItemsInRangeOperationCompleted);
            }
            this.InvokeAsync("loadBillingItemsInRange", new object[] {
                        ItemType,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.loadBillingItemsInRangeOperationCompleted, userState);
        }
        
        private void OnloadBillingItemsInRangeOperationCompleted(object arg) {
            if ((this.loadBillingItemsInRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadBillingItemsInRangeCompleted(this, new loadBillingItemsInRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#recomputeEmployeeIncidentsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void recomputeEmployeeIncidentsByFilekey(int Filekey, TDateRangeEnum DateRangeEnum) {
            this.Invoke("recomputeEmployeeIncidentsByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum});
        }
        
        /// <remarks/>
        public void recomputeEmployeeIncidentsByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum) {
            this.recomputeEmployeeIncidentsByFilekeyAsync(Filekey, DateRangeEnum, null);
        }
        
        /// <remarks/>
        public void recomputeEmployeeIncidentsByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, object userState) {
            if ((this.recomputeEmployeeIncidentsByFilekeyOperationCompleted == null)) {
                this.recomputeEmployeeIncidentsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecomputeEmployeeIncidentsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("recomputeEmployeeIncidentsByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum}, this.recomputeEmployeeIncidentsByFilekeyOperationCompleted, userState);
        }
        
        private void OnrecomputeEmployeeIncidentsByFilekeyOperationCompleted(object arg) {
            if ((this.recomputeEmployeeIncidentsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recomputeEmployeeIncidentsByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#recomputeEmployeeIncidentsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void recomputeEmployeeIncidentsByIDNum(string IDNum, TDateRangeEnum DateRangeEnum) {
            this.Invoke("recomputeEmployeeIncidentsByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum});
        }
        
        /// <remarks/>
        public void recomputeEmployeeIncidentsByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum) {
            this.recomputeEmployeeIncidentsByIDNumAsync(IDNum, DateRangeEnum, null);
        }
        
        /// <remarks/>
        public void recomputeEmployeeIncidentsByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, object userState) {
            if ((this.recomputeEmployeeIncidentsByIDNumOperationCompleted == null)) {
                this.recomputeEmployeeIncidentsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecomputeEmployeeIncidentsByIDNumOperationCompleted);
            }
            this.InvokeAsync("recomputeEmployeeIncidentsByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum}, this.recomputeEmployeeIncidentsByIDNumOperationCompleted, userState);
        }
        
        private void OnrecomputeEmployeeIncidentsByIDNumOperationCompleted(object arg) {
            if ((this.recomputeEmployeeIncidentsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recomputeEmployeeIncidentsByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#dateRangeEnumStartDate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string dateRangeEnumStartDate(TDateRangeEnum DateRangeEnum) {
            object[] results = this.Invoke("dateRangeEnumStartDate", new object[] {
                        DateRangeEnum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dateRangeEnumStartDateAsync(TDateRangeEnum DateRangeEnum) {
            this.dateRangeEnumStartDateAsync(DateRangeEnum, null);
        }
        
        /// <remarks/>
        public void dateRangeEnumStartDateAsync(TDateRangeEnum DateRangeEnum, object userState) {
            if ((this.dateRangeEnumStartDateOperationCompleted == null)) {
                this.dateRangeEnumStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndateRangeEnumStartDateOperationCompleted);
            }
            this.InvokeAsync("dateRangeEnumStartDate", new object[] {
                        DateRangeEnum}, this.dateRangeEnumStartDateOperationCompleted, userState);
        }
        
        private void OndateRangeEnumStartDateOperationCompleted(object arg) {
            if ((this.dateRangeEnumStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dateRangeEnumStartDateCompleted(this, new dateRangeEnumStartDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#dateRangeEnumEndDate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string dateRangeEnumEndDate(TDateRangeEnum DateRangeEnum) {
            object[] results = this.Invoke("dateRangeEnumEndDate", new object[] {
                        DateRangeEnum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dateRangeEnumEndDateAsync(TDateRangeEnum DateRangeEnum) {
            this.dateRangeEnumEndDateAsync(DateRangeEnum, null);
        }
        
        /// <remarks/>
        public void dateRangeEnumEndDateAsync(TDateRangeEnum DateRangeEnum, object userState) {
            if ((this.dateRangeEnumEndDateOperationCompleted == null)) {
                this.dateRangeEnumEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndateRangeEnumEndDateOperationCompleted);
            }
            this.InvokeAsync("dateRangeEnumEndDate", new object[] {
                        DateRangeEnum}, this.dateRangeEnumEndDateOperationCompleted, userState);
        }
        
        private void OndateRangeEnumEndDateOperationCompleted(object arg) {
            if ((this.dateRangeEnumEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dateRangeEnumEndDateCompleted(this, new dateRangeEnumEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#ClientServerDateTime", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string ClientServerDateTime() {
            object[] results = this.Invoke("ClientServerDateTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientServerDateTimeAsync() {
            this.ClientServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void ClientServerDateTimeAsync(object userState) {
            if ((this.ClientServerDateTimeOperationCompleted == null)) {
                this.ClientServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("ClientServerDateTime", new object[0], this.ClientServerDateTimeOperationCompleted, userState);
        }
        
        private void OnClientServerDateTimeOperationCompleted(object arg) {
            if ((this.ClientServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientServerDateTimeCompleted(this, new ClientServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#ServerUTCDateTime", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string ServerUTCDateTime() {
            object[] results = this.Invoke("ServerUTCDateTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ServerUTCDateTimeAsync() {
            this.ServerUTCDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void ServerUTCDateTimeAsync(object userState) {
            if ((this.ServerUTCDateTimeOperationCompleted == null)) {
                this.ServerUTCDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServerUTCDateTimeOperationCompleted);
            }
            this.InvokeAsync("ServerUTCDateTime", new object[0], this.ServerUTCDateTimeOperationCompleted, userState);
        }
        
        private void OnServerUTCDateTimeOperationCompleted(object arg) {
            if ((this.ServerUTCDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServerUTCDateTimeCompleted(this, new ServerUTCDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setWorkgroupLevelLabels", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setWorkgroupLevelLabels(TAeWorkgroupLevel AeWorkgroupLevel) {
            this.Invoke("setWorkgroupLevelLabels", new object[] {
                        AeWorkgroupLevel});
        }
        
        /// <remarks/>
        public void setWorkgroupLevelLabelsAsync(TAeWorkgroupLevel AeWorkgroupLevel) {
            this.setWorkgroupLevelLabelsAsync(AeWorkgroupLevel, null);
        }
        
        /// <remarks/>
        public void setWorkgroupLevelLabelsAsync(TAeWorkgroupLevel AeWorkgroupLevel, object userState) {
            if ((this.setWorkgroupLevelLabelsOperationCompleted == null)) {
                this.setWorkgroupLevelLabelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWorkgroupLevelLabelsOperationCompleted);
            }
            this.InvokeAsync("setWorkgroupLevelLabels", new object[] {
                        AeWorkgroupLevel}, this.setWorkgroupLevelLabelsOperationCompleted, userState);
        }
        
        private void OnsetWorkgroupLevelLabelsOperationCompleted(object arg) {
            if ((this.setWorkgroupLevelLabelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWorkgroupLevelLabelsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftDetailsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftLineDetail[] extractEmployeePeriodShiftDetailsByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodShiftDetailsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAeShiftLineDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftDetailsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodShiftDetailsByFilekeyAsync(Filekey, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftDetailsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodShiftDetailsByFilekeyOperationCompleted == null)) {
                this.extractEmployeePeriodShiftDetailsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftDetailsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftDetailsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodShiftDetailsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftDetailsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftDetailsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftDetailsByFilekeyCompleted(this, new extractEmployeePeriodShiftDetailsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftDetailsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftLineDetail[] extractEmployeePeriodShiftDetailsByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodShiftDetailsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAeShiftLineDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftDetailsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodShiftDetailsByIDNumAsync(IDNum, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftDetailsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodShiftDetailsByIDNumOperationCompleted == null)) {
                this.extractEmployeePeriodShiftDetailsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftDetailsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftDetailsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodShiftDetailsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftDetailsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftDetailsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftDetailsByIDNumCompleted(this, new extractEmployeePeriodShiftDetailsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftTransactionsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftTransaction[] extractEmployeePeriodShiftTransactionsByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, int ShiftPosIndex) {
            object[] results = this.Invoke("extractEmployeePeriodShiftTransactionsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum,
                        ShiftPosIndex});
            return ((TAeShiftTransaction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftTransactionsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, int ShiftPosIndex) {
            this.extractEmployeePeriodShiftTransactionsByFilekeyAsync(Filekey, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, ShiftPosIndex, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftTransactionsByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, int ShiftPosIndex, object userState) {
            if ((this.extractEmployeePeriodShiftTransactionsByFilekeyOperationCompleted == null)) {
                this.extractEmployeePeriodShiftTransactionsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftTransactionsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftTransactionsByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum,
                        ShiftPosIndex}, this.extractEmployeePeriodShiftTransactionsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftTransactionsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftTransactionsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftTransactionsByFilekeyCompleted(this, new extractEmployeePeriodShiftTransactionsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftTransactionsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftTransaction[] extractEmployeePeriodShiftTransactionsByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, int ShiftPosIndex) {
            object[] results = this.Invoke("extractEmployeePeriodShiftTransactionsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum,
                        ShiftPosIndex});
            return ((TAeShiftTransaction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftTransactionsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, int ShiftPosIndex) {
            this.extractEmployeePeriodShiftTransactionsByIDNumAsync(IDNum, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, ShiftPosIndex, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftTransactionsByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, int ShiftPosIndex, object userState) {
            if ((this.extractEmployeePeriodShiftTransactionsByIDNumOperationCompleted == null)) {
                this.extractEmployeePeriodShiftTransactionsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftTransactionsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftTransactionsByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum,
                        ShiftPosIndex}, this.extractEmployeePeriodShiftTransactionsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftTransactionsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftTransactionsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftTransactionsByIDNumCompleted(this, new extractEmployeePeriodShiftTransactionsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftSchedulesByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftSchedule[] extractEmployeePeriodShiftSchedulesByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodShiftSchedulesByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAeShiftSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftSchedulesByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodShiftSchedulesByFilekeyAsync(Filekey, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftSchedulesByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodShiftSchedulesByFilekeyOperationCompleted == null)) {
                this.extractEmployeePeriodShiftSchedulesByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftSchedulesByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftSchedulesByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodShiftSchedulesByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftSchedulesByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftSchedulesByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftSchedulesByFilekeyCompleted(this, new extractEmployeePeriodShiftSchedulesByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeePeriodShiftSchedulesByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeShiftSchedule[] extractEmployeePeriodShiftSchedulesByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeePeriodShiftSchedulesByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAeShiftSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftSchedulesByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeePeriodShiftSchedulesByIDNumAsync(IDNum, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeePeriodShiftSchedulesByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeePeriodShiftSchedulesByIDNumOperationCompleted == null)) {
                this.extractEmployeePeriodShiftSchedulesByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeePeriodShiftSchedulesByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeePeriodShiftSchedulesByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeePeriodShiftSchedulesByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeePeriodShiftSchedulesByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeePeriodShiftSchedulesByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeePeriodShiftSchedulesByIDNumCompleted(this, new extractEmployeePeriodShiftSchedulesByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeDailySummsInPeriodByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeDailySummsInPeriodByFilekey(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeeDailySummsInPeriodByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsInPeriodByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeeDailySummsInPeriodByFilekeyAsync(Filekey, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsInPeriodByFilekeyAsync(int Filekey, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeeDailySummsInPeriodByFilekeyOperationCompleted == null)) {
                this.extractEmployeeDailySummsInPeriodByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeDailySummsInPeriodByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeDailySummsInPeriodByFilekey", new object[] {
                        Filekey,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeeDailySummsInPeriodByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeDailySummsInPeriodByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeDailySummsInPeriodByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeDailySummsInPeriodByFilekeyCompleted(this, new extractEmployeeDailySummsInPeriodByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeDailySummsInPeriodByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeDailySummsInPeriodByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            object[] results = this.Invoke("extractEmployeeDailySummsInPeriodByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsInPeriodByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum) {
            this.extractEmployeeDailySummsInPeriodByIDNumAsync(IDNum, PayPeriodEnum, PayLineStateEnum, CalcedDataTypeEnum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeDailySummsInPeriodByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TPayLineStateEnum PayLineStateEnum, TCalcedDataTypeEnum CalcedDataTypeEnum, object userState) {
            if ((this.extractEmployeeDailySummsInPeriodByIDNumOperationCompleted == null)) {
                this.extractEmployeeDailySummsInPeriodByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeDailySummsInPeriodByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeDailySummsInPeriodByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        PayLineStateEnum,
                        CalcedDataTypeEnum}, this.extractEmployeeDailySummsInPeriodByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeDailySummsInPeriodByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeDailySummsInPeriodByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeDailySummsInPeriodByIDNumCompleted(this, new extractEmployeeDailySummsInPeriodByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getCurrentAccessAccount", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAccessAccount getCurrentAccessAccount() {
            object[] results = this.Invoke("getCurrentAccessAccount", new object[0]);
            return ((TAeAccessAccount)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentAccessAccountAsync() {
            this.getCurrentAccessAccountAsync(null);
        }
        
        /// <remarks/>
        public void getCurrentAccessAccountAsync(object userState) {
            if ((this.getCurrentAccessAccountOperationCompleted == null)) {
                this.getCurrentAccessAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentAccessAccountOperationCompleted);
            }
            this.InvokeAsync("getCurrentAccessAccount", new object[0], this.getCurrentAccessAccountOperationCompleted, userState);
        }
        
        private void OngetCurrentAccessAccountOperationCompleted(object arg) {
            if ((this.getCurrentAccessAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentAccessAccountCompleted(this, new getCurrentAccessAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#performTimeCardEdit", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void performTimeCardEdit(TAeEdit AeEdit, bool RecomputeImmediately) {
            this.Invoke("performTimeCardEdit", new object[] {
                        AeEdit,
                        RecomputeImmediately});
        }
        
        /// <remarks/>
        public void performTimeCardEditAsync(TAeEdit AeEdit, bool RecomputeImmediately) {
            this.performTimeCardEditAsync(AeEdit, RecomputeImmediately, null);
        }
        
        /// <remarks/>
        public void performTimeCardEditAsync(TAeEdit AeEdit, bool RecomputeImmediately, object userState) {
            if ((this.performTimeCardEditOperationCompleted == null)) {
                this.performTimeCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnperformTimeCardEditOperationCompleted);
            }
            this.InvokeAsync("performTimeCardEdit", new object[] {
                        AeEdit,
                        RecomputeImmediately}, this.performTimeCardEditOperationCompleted, userState);
        }
        
        private void OnperformTimeCardEditOperationCompleted(object arg) {
            if ((this.performTimeCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.performTimeCardEditCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#cancelTimeCardEdit", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void cancelTimeCardEdit(TAeEdit AeEdit) {
            this.Invoke("cancelTimeCardEdit", new object[] {
                        AeEdit});
        }
        
        /// <remarks/>
        public void cancelTimeCardEditAsync(TAeEdit AeEdit) {
            this.cancelTimeCardEditAsync(AeEdit, null);
        }
        
        /// <remarks/>
        public void cancelTimeCardEditAsync(TAeEdit AeEdit, object userState) {
            if ((this.cancelTimeCardEditOperationCompleted == null)) {
                this.cancelTimeCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelTimeCardEditOperationCompleted);
            }
            this.InvokeAsync("cancelTimeCardEdit", new object[] {
                        AeEdit}, this.cancelTimeCardEditOperationCompleted, userState);
        }
        
        private void OncancelTimeCardEditOperationCompleted(object arg) {
            if ((this.cancelTimeCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelTimeCardEditCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#deleteTimeCardEdit", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void deleteTimeCardEdit(TAeEdit AeEdit) {
            this.Invoke("deleteTimeCardEdit", new object[] {
                        AeEdit});
        }
        
        /// <remarks/>
        public void deleteTimeCardEditAsync(TAeEdit AeEdit) {
            this.deleteTimeCardEditAsync(AeEdit, null);
        }
        
        /// <remarks/>
        public void deleteTimeCardEditAsync(TAeEdit AeEdit, object userState) {
            if ((this.deleteTimeCardEditOperationCompleted == null)) {
                this.deleteTimeCardEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTimeCardEditOperationCompleted);
            }
            this.InvokeAsync("deleteTimeCardEdit", new object[] {
                        AeEdit}, this.deleteTimeCardEditOperationCompleted, userState);
        }
        
        private void OndeleteTimeCardEditOperationCompleted(object arg) {
            if ((this.deleteTimeCardEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTimeCardEditCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#authPeriodTimeCardByFileKey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void authPeriodTimeCardByFileKey(int FileKey, TPayPeriodEnum PayPeriodEnum, TAuthTimeCardOptionEnum AuthTimeCardOptionEnum) {
            this.Invoke("authPeriodTimeCardByFileKey", new object[] {
                        FileKey,
                        PayPeriodEnum,
                        AuthTimeCardOptionEnum});
        }
        
        /// <remarks/>
        public void authPeriodTimeCardByFileKeyAsync(int FileKey, TPayPeriodEnum PayPeriodEnum, TAuthTimeCardOptionEnum AuthTimeCardOptionEnum) {
            this.authPeriodTimeCardByFileKeyAsync(FileKey, PayPeriodEnum, AuthTimeCardOptionEnum, null);
        }
        
        /// <remarks/>
        public void authPeriodTimeCardByFileKeyAsync(int FileKey, TPayPeriodEnum PayPeriodEnum, TAuthTimeCardOptionEnum AuthTimeCardOptionEnum, object userState) {
            if ((this.authPeriodTimeCardByFileKeyOperationCompleted == null)) {
                this.authPeriodTimeCardByFileKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthPeriodTimeCardByFileKeyOperationCompleted);
            }
            this.InvokeAsync("authPeriodTimeCardByFileKey", new object[] {
                        FileKey,
                        PayPeriodEnum,
                        AuthTimeCardOptionEnum}, this.authPeriodTimeCardByFileKeyOperationCompleted, userState);
        }
        
        private void OnauthPeriodTimeCardByFileKeyOperationCompleted(object arg) {
            if ((this.authPeriodTimeCardByFileKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authPeriodTimeCardByFileKeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#authPeriodTimeCardByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void authPeriodTimeCardByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum, TAuthTimeCardOptionEnum AuthTimeCardOptionEnum) {
            this.Invoke("authPeriodTimeCardByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        AuthTimeCardOptionEnum});
        }
        
        /// <remarks/>
        public void authPeriodTimeCardByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TAuthTimeCardOptionEnum AuthTimeCardOptionEnum) {
            this.authPeriodTimeCardByIDNumAsync(IDNum, PayPeriodEnum, AuthTimeCardOptionEnum, null);
        }
        
        /// <remarks/>
        public void authPeriodTimeCardByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, TAuthTimeCardOptionEnum AuthTimeCardOptionEnum, object userState) {
            if ((this.authPeriodTimeCardByIDNumOperationCompleted == null)) {
                this.authPeriodTimeCardByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthPeriodTimeCardByIDNumOperationCompleted);
            }
            this.InvokeAsync("authPeriodTimeCardByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum,
                        AuthTimeCardOptionEnum}, this.authPeriodTimeCardByIDNumOperationCompleted, userState);
        }
        
        private void OnauthPeriodTimeCardByIDNumOperationCompleted(object arg) {
            if ((this.authPeriodTimeCardByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authPeriodTimeCardByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#unAuthPeriodTimeCardByFileKey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void unAuthPeriodTimeCardByFileKey(int FileKey, TPayPeriodEnum PayPeriodEnum) {
            this.Invoke("unAuthPeriodTimeCardByFileKey", new object[] {
                        FileKey,
                        PayPeriodEnum});
        }
        
        /// <remarks/>
        public void unAuthPeriodTimeCardByFileKeyAsync(int FileKey, TPayPeriodEnum PayPeriodEnum) {
            this.unAuthPeriodTimeCardByFileKeyAsync(FileKey, PayPeriodEnum, null);
        }
        
        /// <remarks/>
        public void unAuthPeriodTimeCardByFileKeyAsync(int FileKey, TPayPeriodEnum PayPeriodEnum, object userState) {
            if ((this.unAuthPeriodTimeCardByFileKeyOperationCompleted == null)) {
                this.unAuthPeriodTimeCardByFileKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunAuthPeriodTimeCardByFileKeyOperationCompleted);
            }
            this.InvokeAsync("unAuthPeriodTimeCardByFileKey", new object[] {
                        FileKey,
                        PayPeriodEnum}, this.unAuthPeriodTimeCardByFileKeyOperationCompleted, userState);
        }
        
        private void OnunAuthPeriodTimeCardByFileKeyOperationCompleted(object arg) {
            if ((this.unAuthPeriodTimeCardByFileKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unAuthPeriodTimeCardByFileKeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#unAuthPeriodTimeCardByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void unAuthPeriodTimeCardByIDNum(string IDNum, TPayPeriodEnum PayPeriodEnum) {
            this.Invoke("unAuthPeriodTimeCardByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum});
        }
        
        /// <remarks/>
        public void unAuthPeriodTimeCardByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum) {
            this.unAuthPeriodTimeCardByIDNumAsync(IDNum, PayPeriodEnum, null);
        }
        
        /// <remarks/>
        public void unAuthPeriodTimeCardByIDNumAsync(string IDNum, TPayPeriodEnum PayPeriodEnum, object userState) {
            if ((this.unAuthPeriodTimeCardByIDNumOperationCompleted == null)) {
                this.unAuthPeriodTimeCardByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunAuthPeriodTimeCardByIDNumOperationCompleted);
            }
            this.InvokeAsync("unAuthPeriodTimeCardByIDNum", new object[] {
                        IDNum,
                        PayPeriodEnum}, this.unAuthPeriodTimeCardByIDNumOperationCompleted, userState);
        }
        
        private void OnunAuthPeriodTimeCardByIDNumOperationCompleted(object arg) {
            if ((this.unAuthPeriodTimeCardByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unAuthPeriodTimeCardByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#submitTimeOffRequest", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void submitTimeOffRequest(TAeTimeOffRequest AeTimeOffRequest) {
            this.Invoke("submitTimeOffRequest", new object[] {
                        AeTimeOffRequest});
        }
        
        /// <remarks/>
        public void submitTimeOffRequestAsync(TAeTimeOffRequest AeTimeOffRequest) {
            this.submitTimeOffRequestAsync(AeTimeOffRequest, null);
        }
        
        /// <remarks/>
        public void submitTimeOffRequestAsync(TAeTimeOffRequest AeTimeOffRequest, object userState) {
            if ((this.submitTimeOffRequestOperationCompleted == null)) {
                this.submitTimeOffRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTimeOffRequestOperationCompleted);
            }
            this.InvokeAsync("submitTimeOffRequest", new object[] {
                        AeTimeOffRequest}, this.submitTimeOffRequestOperationCompleted, userState);
        }
        
        private void OnsubmitTimeOffRequestOperationCompleted(object arg) {
            if ((this.submitTimeOffRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTimeOffRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractTimeOffRequestStates", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTimeOffRequestState[] extractTimeOffRequestStates() {
            object[] results = this.Invoke("extractTimeOffRequestStates", new object[0]);
            return ((TAeTimeOffRequestState[])(results[0]));
        }
        
        /// <remarks/>
        public void extractTimeOffRequestStatesAsync() {
            this.extractTimeOffRequestStatesAsync(null);
        }
        
        /// <remarks/>
        public void extractTimeOffRequestStatesAsync(object userState) {
            if ((this.extractTimeOffRequestStatesOperationCompleted == null)) {
                this.extractTimeOffRequestStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractTimeOffRequestStatesOperationCompleted);
            }
            this.InvokeAsync("extractTimeOffRequestStates", new object[0], this.extractTimeOffRequestStatesOperationCompleted, userState);
        }
        
        private void OnextractTimeOffRequestStatesOperationCompleted(object arg) {
            if ((this.extractTimeOffRequestStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractTimeOffRequestStatesCompleted(this, new extractTimeOffRequestStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractLeaveRequestsByState", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTimeOffRequest[] extractLeaveRequestsByState(int StateID, TActiveStatusEnum ActiveStatusEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractLeaveRequestsByState", new object[] {
                        StateID,
                        ActiveStatusEnum,
                        MinDate,
                        MaxDate});
            return ((TAeTimeOffRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void extractLeaveRequestsByStateAsync(int StateID, TActiveStatusEnum ActiveStatusEnum, string MinDate, string MaxDate) {
            this.extractLeaveRequestsByStateAsync(StateID, ActiveStatusEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractLeaveRequestsByStateAsync(int StateID, TActiveStatusEnum ActiveStatusEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractLeaveRequestsByStateOperationCompleted == null)) {
                this.extractLeaveRequestsByStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractLeaveRequestsByStateOperationCompleted);
            }
            this.InvokeAsync("extractLeaveRequestsByState", new object[] {
                        StateID,
                        ActiveStatusEnum,
                        MinDate,
                        MaxDate}, this.extractLeaveRequestsByStateOperationCompleted, userState);
        }
        
        private void OnextractLeaveRequestsByStateOperationCompleted(object arg) {
            if ((this.extractLeaveRequestsByStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractLeaveRequestsByStateCompleted(this, new extractLeaveRequestsByStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeLeaveRequestsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTimeOffRequest[] extractEmployeeLeaveRequestsByFilekey(int Filekey, TRTOFilterEnum RTOFilterEnum, int StateID, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeLeaveRequestsByFilekey", new object[] {
                        Filekey,
                        RTOFilterEnum,
                        StateID,
                        MinDate,
                        MaxDate});
            return ((TAeTimeOffRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestsByFilekeyAsync(int Filekey, TRTOFilterEnum RTOFilterEnum, int StateID, string MinDate, string MaxDate) {
            this.extractEmployeeLeaveRequestsByFilekeyAsync(Filekey, RTOFilterEnum, StateID, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestsByFilekeyAsync(int Filekey, TRTOFilterEnum RTOFilterEnum, int StateID, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeLeaveRequestsByFilekeyOperationCompleted == null)) {
                this.extractEmployeeLeaveRequestsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeLeaveRequestsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeLeaveRequestsByFilekey", new object[] {
                        Filekey,
                        RTOFilterEnum,
                        StateID,
                        MinDate,
                        MaxDate}, this.extractEmployeeLeaveRequestsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeLeaveRequestsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeLeaveRequestsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeLeaveRequestsByFilekeyCompleted(this, new extractEmployeeLeaveRequestsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeLeaveRequestsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTimeOffRequest[] extractEmployeeLeaveRequestsByIDNum(string IDNum, TRTOFilterEnum RTOFilterEnum, int StateID, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeLeaveRequestsByIDNum", new object[] {
                        IDNum,
                        RTOFilterEnum,
                        StateID,
                        MinDate,
                        MaxDate});
            return ((TAeTimeOffRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestsByIDNumAsync(string IDNum, TRTOFilterEnum RTOFilterEnum, int StateID, string MinDate, string MaxDate) {
            this.extractEmployeeLeaveRequestsByIDNumAsync(IDNum, RTOFilterEnum, StateID, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestsByIDNumAsync(string IDNum, TRTOFilterEnum RTOFilterEnum, int StateID, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeLeaveRequestsByIDNumOperationCompleted == null)) {
                this.extractEmployeeLeaveRequestsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeLeaveRequestsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeLeaveRequestsByIDNum", new object[] {
                        IDNum,
                        RTOFilterEnum,
                        StateID,
                        MinDate,
                        MaxDate}, this.extractEmployeeLeaveRequestsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeLeaveRequestsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeLeaveRequestsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeLeaveRequestsByIDNumCompleted(this, new extractEmployeeLeaveRequestsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeLeaveRequestEntry(TAeTimeOffRequest AeTimeOffRequest) {
            this.Invoke("removeLeaveRequestEntry", new object[] {
                        AeTimeOffRequest});
        }
        
        /// <remarks/>
        public void removeLeaveRequestEntryAsync(TAeTimeOffRequest AeTimeOffRequest) {
            this.removeLeaveRequestEntryAsync(AeTimeOffRequest, null);
        }
        
        /// <remarks/>
        public void removeLeaveRequestEntryAsync(TAeTimeOffRequest AeTimeOffRequest, object userState) {
            if ((this.removeLeaveRequestEntryOperationCompleted == null)) {
                this.removeLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("removeLeaveRequestEntry", new object[] {
                        AeTimeOffRequest}, this.removeLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OnremoveLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.removeLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeLeaveRequestEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#describeLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string describeLeaveRequestEntry(int UniqueID) {
            object[] results = this.Invoke("describeLeaveRequestEntry", new object[] {
                        UniqueID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void describeLeaveRequestEntryAsync(int UniqueID) {
            this.describeLeaveRequestEntryAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void describeLeaveRequestEntryAsync(int UniqueID, object userState) {
            if ((this.describeLeaveRequestEntryOperationCompleted == null)) {
                this.describeLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndescribeLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("describeLeaveRequestEntry", new object[] {
                        UniqueID}, this.describeLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OndescribeLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.describeLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.describeLeaveRequestEntryCompleted(this, new describeLeaveRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#approveLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void approveLeaveRequestEntry(int UniqueID) {
            this.Invoke("approveLeaveRequestEntry", new object[] {
                        UniqueID});
        }
        
        /// <remarks/>
        public void approveLeaveRequestEntryAsync(int UniqueID) {
            this.approveLeaveRequestEntryAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void approveLeaveRequestEntryAsync(int UniqueID, object userState) {
            if ((this.approveLeaveRequestEntryOperationCompleted == null)) {
                this.approveLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapproveLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("approveLeaveRequestEntry", new object[] {
                        UniqueID}, this.approveLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OnapproveLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.approveLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.approveLeaveRequestEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#denyLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void denyLeaveRequestEntry(int UniqueID) {
            this.Invoke("denyLeaveRequestEntry", new object[] {
                        UniqueID});
        }
        
        /// <remarks/>
        public void denyLeaveRequestEntryAsync(int UniqueID) {
            this.denyLeaveRequestEntryAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void denyLeaveRequestEntryAsync(int UniqueID, object userState) {
            if ((this.denyLeaveRequestEntryOperationCompleted == null)) {
                this.denyLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndenyLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("denyLeaveRequestEntry", new object[] {
                        UniqueID}, this.denyLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OndenyLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.denyLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.denyLeaveRequestEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesSearchListBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getEmployeesSearchListBasic(string WildCard, bool Phoenetic, int MaxRecords) {
            object[] results = this.Invoke("getEmployeesSearchListBasic", new object[] {
                        WildCard,
                        Phoenetic,
                        MaxRecords});
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesSearchListBasicAsync(string WildCard, bool Phoenetic, int MaxRecords) {
            this.getEmployeesSearchListBasicAsync(WildCard, Phoenetic, MaxRecords, null);
        }
        
        /// <remarks/>
        public void getEmployeesSearchListBasicAsync(string WildCard, bool Phoenetic, int MaxRecords, object userState) {
            if ((this.getEmployeesSearchListBasicOperationCompleted == null)) {
                this.getEmployeesSearchListBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesSearchListBasicOperationCompleted);
            }
            this.InvokeAsync("getEmployeesSearchListBasic", new object[] {
                        WildCard,
                        Phoenetic,
                        MaxRecords}, this.getEmployeesSearchListBasicOperationCompleted, userState);
        }
        
        private void OngetEmployeesSearchListBasicOperationCompleted(object arg) {
            if ((this.getEmployeesSearchListBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesSearchListBasicCompleted(this, new getEmployeesSearchListBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesSearchListDetail", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail[] getEmployeesSearchListDetail(string WildCard, bool Phoenetic, int MaxRecords) {
            object[] results = this.Invoke("getEmployeesSearchListDetail", new object[] {
                        WildCard,
                        Phoenetic,
                        MaxRecords});
            return ((TAeEmployeeDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesSearchListDetailAsync(string WildCard, bool Phoenetic, int MaxRecords) {
            this.getEmployeesSearchListDetailAsync(WildCard, Phoenetic, MaxRecords, null);
        }
        
        /// <remarks/>
        public void getEmployeesSearchListDetailAsync(string WildCard, bool Phoenetic, int MaxRecords, object userState) {
            if ((this.getEmployeesSearchListDetailOperationCompleted == null)) {
                this.getEmployeesSearchListDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesSearchListDetailOperationCompleted);
            }
            this.InvokeAsync("getEmployeesSearchListDetail", new object[] {
                        WildCard,
                        Phoenetic,
                        MaxRecords}, this.getEmployeesSearchListDetailOperationCompleted, userState);
        }
        
        private void OngetEmployeesSearchListDetailOperationCompleted(object arg) {
            if ((this.getEmployeesSearchListDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesSearchListDetailCompleted(this, new getEmployeesSearchListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeTZByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeTZByFilekey(int Filekey, int Offset, bool ObservesDST) {
            this.Invoke("setEmployeeTZByFilekey", new object[] {
                        Filekey,
                        Offset,
                        ObservesDST});
        }
        
        /// <remarks/>
        public void setEmployeeTZByFilekeyAsync(int Filekey, int Offset, bool ObservesDST) {
            this.setEmployeeTZByFilekeyAsync(Filekey, Offset, ObservesDST, null);
        }
        
        /// <remarks/>
        public void setEmployeeTZByFilekeyAsync(int Filekey, int Offset, bool ObservesDST, object userState) {
            if ((this.setEmployeeTZByFilekeyOperationCompleted == null)) {
                this.setEmployeeTZByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeTZByFilekeyOperationCompleted);
            }
            this.InvokeAsync("setEmployeeTZByFilekey", new object[] {
                        Filekey,
                        Offset,
                        ObservesDST}, this.setEmployeeTZByFilekeyOperationCompleted, userState);
        }
        
        private void OnsetEmployeeTZByFilekeyOperationCompleted(object arg) {
            if ((this.setEmployeeTZByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeTZByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeTZByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeTZByIDNum(string IDNum, int Offset, bool ObservesDST) {
            this.Invoke("setEmployeeTZByIDNum", new object[] {
                        IDNum,
                        Offset,
                        ObservesDST});
        }
        
        /// <remarks/>
        public void setEmployeeTZByIDNumAsync(string IDNum, int Offset, bool ObservesDST) {
            this.setEmployeeTZByIDNumAsync(IDNum, Offset, ObservesDST, null);
        }
        
        /// <remarks/>
        public void setEmployeeTZByIDNumAsync(string IDNum, int Offset, bool ObservesDST, object userState) {
            if ((this.setEmployeeTZByIDNumOperationCompleted == null)) {
                this.setEmployeeTZByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeTZByIDNumOperationCompleted);
            }
            this.InvokeAsync("setEmployeeTZByIDNum", new object[] {
                        IDNum,
                        Offset,
                        ObservesDST}, this.setEmployeeTZByIDNumOperationCompleted, userState);
        }
        
        private void OnsetEmployeeTZByIDNumOperationCompleted(object arg) {
            if ((this.setEmployeeTZByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeTZByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeTZOffsetByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getEmployeeTZOffsetByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeTZOffsetByFilekey", new object[] {
                        Filekey});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeTZOffsetByFilekeyAsync(int Filekey) {
            this.getEmployeeTZOffsetByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeTZOffsetByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeTZOffsetByFilekeyOperationCompleted == null)) {
                this.getEmployeeTZOffsetByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeTZOffsetByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeTZOffsetByFilekey", new object[] {
                        Filekey}, this.getEmployeeTZOffsetByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeTZOffsetByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeTZOffsetByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeTZOffsetByFilekeyCompleted(this, new getEmployeeTZOffsetByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeTZOffsetByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getEmployeeTZOffsetByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeTZOffsetByIDNum", new object[] {
                        IDNum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeTZOffsetByIDNumAsync(string IDNum) {
            this.getEmployeeTZOffsetByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeTZOffsetByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeTZOffsetByIDNumOperationCompleted == null)) {
                this.getEmployeeTZOffsetByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeTZOffsetByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeTZOffsetByIDNum", new object[] {
                        IDNum}, this.getEmployeeTZOffsetByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeTZOffsetByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeTZOffsetByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeTZOffsetByIDNumCompleted(this, new getEmployeeTZOffsetByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeTZObservesDSTByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool getEmployeeTZObservesDSTByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeTZObservesDSTByFilekey", new object[] {
                        Filekey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeTZObservesDSTByFilekeyAsync(int Filekey) {
            this.getEmployeeTZObservesDSTByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeTZObservesDSTByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeTZObservesDSTByFilekeyOperationCompleted == null)) {
                this.getEmployeeTZObservesDSTByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeTZObservesDSTByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeTZObservesDSTByFilekey", new object[] {
                        Filekey}, this.getEmployeeTZObservesDSTByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeTZObservesDSTByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeTZObservesDSTByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeTZObservesDSTByFilekeyCompleted(this, new getEmployeeTZObservesDSTByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeTZObservesDSTByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool getEmployeeTZObservesDSTByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeTZObservesDSTByIDNum", new object[] {
                        IDNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeTZObservesDSTByIDNumAsync(string IDNum) {
            this.getEmployeeTZObservesDSTByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeTZObservesDSTByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeTZObservesDSTByIDNumOperationCompleted == null)) {
                this.getEmployeeTZObservesDSTByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeTZObservesDSTByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeTZObservesDSTByIDNum", new object[] {
                        IDNum}, this.getEmployeeTZObservesDSTByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeTZObservesDSTByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeTZObservesDSTByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeTZObservesDSTByIDNumCompleted(this, new getEmployeeTZObservesDSTByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getReasonCodesSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getReasonCodesSimple() {
            object[] results = this.Invoke("getReasonCodesSimple", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getReasonCodesSimpleAsync() {
            this.getReasonCodesSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getReasonCodesSimpleAsync(object userState) {
            if ((this.getReasonCodesSimpleOperationCompleted == null)) {
                this.getReasonCodesSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReasonCodesSimpleOperationCompleted);
            }
            this.InvokeAsync("getReasonCodesSimple", new object[0], this.getReasonCodesSimpleOperationCompleted, userState);
        }
        
        private void OngetReasonCodesSimpleOperationCompleted(object arg) {
            if ((this.getReasonCodesSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReasonCodesSimpleCompleted(this, new getReasonCodesSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSummsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeSummsByFilekey(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeSummsByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSummsByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeSummsByFilekeyAsync(Filekey, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSummsByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeSummsByFilekeyOperationCompleted == null)) {
                this.extractEmployeeSummsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSummsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSummsByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeSummsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSummsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeSummsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSummsByFilekeyCompleted(this, new extractEmployeeSummsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSummsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeSummsByIDNum(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeSummsByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSummsByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeSummsByIDNumAsync(IDNum, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSummsByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeSummsByIDNumOperationCompleted == null)) {
                this.extractEmployeeSummsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSummsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSummsByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeSummsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSummsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeSummsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSummsByIDNumCompleted(this, new extractEmployeeSummsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeDurationTotalsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeDurationTotalsByFilekey(int Filekey, TDurationDetailEnum DurationDetailEnum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeDurationTotalsByFilekey", new object[] {
                        Filekey,
                        DurationDetailEnum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeDurationTotalsByFilekeyAsync(int Filekey, TDurationDetailEnum DurationDetailEnum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeDurationTotalsByFilekeyAsync(Filekey, DurationDetailEnum, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeDurationTotalsByFilekeyAsync(int Filekey, TDurationDetailEnum DurationDetailEnum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeDurationTotalsByFilekeyOperationCompleted == null)) {
                this.extractEmployeeDurationTotalsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeDurationTotalsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeDurationTotalsByFilekey", new object[] {
                        Filekey,
                        DurationDetailEnum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeDurationTotalsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeDurationTotalsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeDurationTotalsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeDurationTotalsByFilekeyCompleted(this, new extractEmployeeDurationTotalsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeDurationTotalsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayLine[] extractEmployeeDurationTotalsByIDNum(string IDNum, TDurationDetailEnum DurationDetailEnum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeDurationTotalsByIDNum", new object[] {
                        IDNum,
                        DurationDetailEnum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAePayLine[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeDurationTotalsByIDNumAsync(string IDNum, TDurationDetailEnum DurationDetailEnum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeDurationTotalsByIDNumAsync(IDNum, DurationDetailEnum, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeDurationTotalsByIDNumAsync(string IDNum, TDurationDetailEnum DurationDetailEnum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeDurationTotalsByIDNumOperationCompleted == null)) {
                this.extractEmployeeDurationTotalsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeDurationTotalsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeDurationTotalsByIDNum", new object[] {
                        IDNum,
                        DurationDetailEnum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeDurationTotalsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeDurationTotalsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeDurationTotalsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeDurationTotalsByIDNumCompleted(this, new extractEmployeeDurationTotalsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyEmployeeDetail2", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2 getEmptyEmployeeDetail2() {
            object[] results = this.Invoke("getEmptyEmployeeDetail2", new object[0]);
            return ((TAeEmployeeDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyEmployeeDetail2Async() {
            this.getEmptyEmployeeDetail2Async(null);
        }
        
        /// <remarks/>
        public void getEmptyEmployeeDetail2Async(object userState) {
            if ((this.getEmptyEmployeeDetail2OperationCompleted == null)) {
                this.getEmptyEmployeeDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyEmployeeDetail2OperationCompleted);
            }
            this.InvokeAsync("getEmptyEmployeeDetail2", new object[0], this.getEmptyEmployeeDetail2OperationCompleted, userState);
        }
        
        private void OngetEmptyEmployeeDetail2OperationCompleted(object arg) {
            if ((this.getEmptyEmployeeDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyEmployeeDetail2Completed(this, new getEmptyEmployeeDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetail2ByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2 getEmployeeDetail2ByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeDetail2ByIDNum", new object[] {
                        IDNum});
            return ((TAeEmployeeDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetail2ByIDNumAsync(string IDNum) {
            this.getEmployeeDetail2ByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetail2ByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeDetail2ByIDNumOperationCompleted == null)) {
                this.getEmployeeDetail2ByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetail2ByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetail2ByIDNum", new object[] {
                        IDNum}, this.getEmployeeDetail2ByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetail2ByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeDetail2ByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetail2ByIDNumCompleted(this, new getEmployeeDetail2ByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetail2BySSN", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2 getEmployeeDetail2BySSN(string SSN) {
            object[] results = this.Invoke("getEmployeeDetail2BySSN", new object[] {
                        SSN});
            return ((TAeEmployeeDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetail2BySSNAsync(string SSN) {
            this.getEmployeeDetail2BySSNAsync(SSN, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetail2BySSNAsync(string SSN, object userState) {
            if ((this.getEmployeeDetail2BySSNOperationCompleted == null)) {
                this.getEmployeeDetail2BySSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetail2BySSNOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetail2BySSN", new object[] {
                        SSN}, this.getEmployeeDetail2BySSNOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetail2BySSNOperationCompleted(object arg) {
            if ((this.getEmployeeDetail2BySSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetail2BySSNCompleted(this, new getEmployeeDetail2BySSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetail2ByBadge", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2 getEmployeeDetail2ByBadge(int Badge) {
            object[] results = this.Invoke("getEmployeeDetail2ByBadge", new object[] {
                        Badge});
            return ((TAeEmployeeDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetail2ByBadgeAsync(int Badge) {
            this.getEmployeeDetail2ByBadgeAsync(Badge, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetail2ByBadgeAsync(int Badge, object userState) {
            if ((this.getEmployeeDetail2ByBadgeOperationCompleted == null)) {
                this.getEmployeeDetail2ByBadgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetail2ByBadgeOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetail2ByBadge", new object[] {
                        Badge}, this.getEmployeeDetail2ByBadgeOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetail2ByBadgeOperationCompleted(object arg) {
            if ((this.getEmployeeDetail2ByBadgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetail2ByBadgeCompleted(this, new getEmployeeDetail2ByBadgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeDetail2ByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2 getEmployeeDetail2ByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeDetail2ByFilekey", new object[] {
                        Filekey});
            return ((TAeEmployeeDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeDetail2ByFilekeyAsync(int Filekey) {
            this.getEmployeeDetail2ByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeDetail2ByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeDetail2ByFilekeyOperationCompleted == null)) {
                this.getEmployeeDetail2ByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeDetail2ByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeDetail2ByFilekey", new object[] {
                        Filekey}, this.getEmployeeDetail2ByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeDetail2ByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeDetail2ByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeDetail2ByFilekeyCompleted(this, new getEmployeeDetail2ByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeDetail2", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeDetail2(TAeEmployeeDetail2 AeEmployeeDetail2) {
            this.Invoke("setEmployeeDetail2", new object[] {
                        AeEmployeeDetail2});
        }
        
        /// <remarks/>
        public void setEmployeeDetail2Async(TAeEmployeeDetail2 AeEmployeeDetail2) {
            this.setEmployeeDetail2Async(AeEmployeeDetail2, null);
        }
        
        /// <remarks/>
        public void setEmployeeDetail2Async(TAeEmployeeDetail2 AeEmployeeDetail2, object userState) {
            if ((this.setEmployeeDetail2OperationCompleted == null)) {
                this.setEmployeeDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeDetail2OperationCompleted);
            }
            this.InvokeAsync("setEmployeeDetail2", new object[] {
                        AeEmployeeDetail2}, this.setEmployeeDetail2OperationCompleted, userState);
        }
        
        private void OnsetEmployeeDetail2OperationCompleted(object arg) {
            if ((this.setEmployeeDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeDetail2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#maintainEmployeeDetail2", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TMaintainEmployeeResult maintainEmployeeDetail2(TAeEmployeeDetail2 AeEmployeeDetail2, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement) {
            object[] results = this.Invoke("maintainEmployeeDetail2", new object[] {
                        AeEmployeeDetail2,
                        AddEmpMode,
                        BadgeManagement});
            return ((TMaintainEmployeeResult)(results[0]));
        }
        
        /// <remarks/>
        public void maintainEmployeeDetail2Async(TAeEmployeeDetail2 AeEmployeeDetail2, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement) {
            this.maintainEmployeeDetail2Async(AeEmployeeDetail2, AddEmpMode, BadgeManagement, null);
        }
        
        /// <remarks/>
        public void maintainEmployeeDetail2Async(TAeEmployeeDetail2 AeEmployeeDetail2, TAddEmpMode AddEmpMode, TBadgeManagement BadgeManagement, object userState) {
            if ((this.maintainEmployeeDetail2OperationCompleted == null)) {
                this.maintainEmployeeDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaintainEmployeeDetail2OperationCompleted);
            }
            this.InvokeAsync("maintainEmployeeDetail2", new object[] {
                        AeEmployeeDetail2,
                        AddEmpMode,
                        BadgeManagement}, this.maintainEmployeeDetail2OperationCompleted, userState);
        }
        
        private void OnmaintainEmployeeDetail2OperationCompleted(object arg) {
            if ((this.maintainEmployeeDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maintainEmployeeDetail2Completed(this, new maintainEmployeeDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesListDetail2FromHyperQuery", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2[] getEmployeesListDetail2FromHyperQuery(string HyperQueryName) {
            object[] results = this.Invoke("getEmployeesListDetail2FromHyperQuery", new object[] {
                        HyperQueryName});
            return ((TAeEmployeeDetail2[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesListDetail2FromHyperQueryAsync(string HyperQueryName) {
            this.getEmployeesListDetail2FromHyperQueryAsync(HyperQueryName, null);
        }
        
        /// <remarks/>
        public void getEmployeesListDetail2FromHyperQueryAsync(string HyperQueryName, object userState) {
            if ((this.getEmployeesListDetail2FromHyperQueryOperationCompleted == null)) {
                this.getEmployeesListDetail2FromHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesListDetail2FromHyperQueryOperationCompleted);
            }
            this.InvokeAsync("getEmployeesListDetail2FromHyperQuery", new object[] {
                        HyperQueryName}, this.getEmployeesListDetail2FromHyperQueryOperationCompleted, userState);
        }
        
        private void OngetEmployeesListDetail2FromHyperQueryOperationCompleted(object arg) {
            if ((this.getEmployeesListDetail2FromHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesListDetail2FromHyperQueryCompleted(this, new getEmployeesListDetail2FromHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesSearchListDetail2", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2[] getEmployeesSearchListDetail2(string WildCard, bool Phoenetic, int MaxRecords) {
            object[] results = this.Invoke("getEmployeesSearchListDetail2", new object[] {
                        WildCard,
                        Phoenetic,
                        MaxRecords});
            return ((TAeEmployeeDetail2[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesSearchListDetail2Async(string WildCard, bool Phoenetic, int MaxRecords) {
            this.getEmployeesSearchListDetail2Async(WildCard, Phoenetic, MaxRecords, null);
        }
        
        /// <remarks/>
        public void getEmployeesSearchListDetail2Async(string WildCard, bool Phoenetic, int MaxRecords, object userState) {
            if ((this.getEmployeesSearchListDetail2OperationCompleted == null)) {
                this.getEmployeesSearchListDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesSearchListDetail2OperationCompleted);
            }
            this.InvokeAsync("getEmployeesSearchListDetail2", new object[] {
                        WildCard,
                        Phoenetic,
                        MaxRecords}, this.getEmployeesSearchListDetail2OperationCompleted, userState);
        }
        
        private void OngetEmployeesSearchListDetail2OperationCompleted(object arg) {
            if ((this.getEmployeesSearchListDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesSearchListDetail2Completed(this, new getEmployeesSearchListDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getManuallySelectedSetupData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeExchangeStruct getManuallySelectedSetupData(TAeExchangeStruct AeExchangeStruct) {
            object[] results = this.Invoke("getManuallySelectedSetupData", new object[] {
                        AeExchangeStruct});
            return ((TAeExchangeStruct)(results[0]));
        }
        
        /// <remarks/>
        public void getManuallySelectedSetupDataAsync(TAeExchangeStruct AeExchangeStruct) {
            this.getManuallySelectedSetupDataAsync(AeExchangeStruct, null);
        }
        
        /// <remarks/>
        public void getManuallySelectedSetupDataAsync(TAeExchangeStruct AeExchangeStruct, object userState) {
            if ((this.getManuallySelectedSetupDataOperationCompleted == null)) {
                this.getManuallySelectedSetupDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetManuallySelectedSetupDataOperationCompleted);
            }
            this.InvokeAsync("getManuallySelectedSetupData", new object[] {
                        AeExchangeStruct}, this.getManuallySelectedSetupDataOperationCompleted, userState);
        }
        
        private void OngetManuallySelectedSetupDataOperationCompleted(object arg) {
            if ((this.getManuallySelectedSetupDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getManuallySelectedSetupDataCompleted(this, new getManuallySelectedSetupDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setManuallySelectedSetupData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeExchangeStruct setManuallySelectedSetupData(TAeExchangeStruct AeExchangeStruct) {
            object[] results = this.Invoke("setManuallySelectedSetupData", new object[] {
                        AeExchangeStruct});
            return ((TAeExchangeStruct)(results[0]));
        }
        
        /// <remarks/>
        public void setManuallySelectedSetupDataAsync(TAeExchangeStruct AeExchangeStruct) {
            this.setManuallySelectedSetupDataAsync(AeExchangeStruct, null);
        }
        
        /// <remarks/>
        public void setManuallySelectedSetupDataAsync(TAeExchangeStruct AeExchangeStruct, object userState) {
            if ((this.setManuallySelectedSetupDataOperationCompleted == null)) {
                this.setManuallySelectedSetupDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetManuallySelectedSetupDataOperationCompleted);
            }
            this.InvokeAsync("setManuallySelectedSetupData", new object[] {
                        AeExchangeStruct}, this.setManuallySelectedSetupDataOperationCompleted, userState);
        }
        
        private void OnsetManuallySelectedSetupDataOperationCompleted(object arg) {
            if ((this.setManuallySelectedSetupDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setManuallySelectedSetupDataCompleted(this, new setManuallySelectedSetupDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getManuallySelectedEmployeeData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeExchangeStruct getManuallySelectedEmployeeData(TAeExchangeStruct AeExchangeStruct) {
            object[] results = this.Invoke("getManuallySelectedEmployeeData", new object[] {
                        AeExchangeStruct});
            return ((TAeExchangeStruct)(results[0]));
        }
        
        /// <remarks/>
        public void getManuallySelectedEmployeeDataAsync(TAeExchangeStruct AeExchangeStruct) {
            this.getManuallySelectedEmployeeDataAsync(AeExchangeStruct, null);
        }
        
        /// <remarks/>
        public void getManuallySelectedEmployeeDataAsync(TAeExchangeStruct AeExchangeStruct, object userState) {
            if ((this.getManuallySelectedEmployeeDataOperationCompleted == null)) {
                this.getManuallySelectedEmployeeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetManuallySelectedEmployeeDataOperationCompleted);
            }
            this.InvokeAsync("getManuallySelectedEmployeeData", new object[] {
                        AeExchangeStruct}, this.getManuallySelectedEmployeeDataOperationCompleted, userState);
        }
        
        private void OngetManuallySelectedEmployeeDataOperationCompleted(object arg) {
            if ((this.getManuallySelectedEmployeeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getManuallySelectedEmployeeDataCompleted(this, new getManuallySelectedEmployeeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getManuallySelectedCalculatedData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeExchangeStruct getManuallySelectedCalculatedData(TAeExchangeStruct AeExchangeStruct) {
            object[] results = this.Invoke("getManuallySelectedCalculatedData", new object[] {
                        AeExchangeStruct});
            return ((TAeExchangeStruct)(results[0]));
        }
        
        /// <remarks/>
        public void getManuallySelectedCalculatedDataAsync(TAeExchangeStruct AeExchangeStruct) {
            this.getManuallySelectedCalculatedDataAsync(AeExchangeStruct, null);
        }
        
        /// <remarks/>
        public void getManuallySelectedCalculatedDataAsync(TAeExchangeStruct AeExchangeStruct, object userState) {
            if ((this.getManuallySelectedCalculatedDataOperationCompleted == null)) {
                this.getManuallySelectedCalculatedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetManuallySelectedCalculatedDataOperationCompleted);
            }
            this.InvokeAsync("getManuallySelectedCalculatedData", new object[] {
                        AeExchangeStruct}, this.getManuallySelectedCalculatedDataOperationCompleted, userState);
        }
        
        private void OngetManuallySelectedCalculatedDataOperationCompleted(object arg) {
            if ((this.getManuallySelectedCalculatedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getManuallySelectedCalculatedDataCompleted(this, new getManuallySelectedCalculatedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setManuallySelectedEmployeeData", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeExchangeStruct setManuallySelectedEmployeeData(TAeExchangeStruct AeExchangeStruct) {
            object[] results = this.Invoke("setManuallySelectedEmployeeData", new object[] {
                        AeExchangeStruct});
            return ((TAeExchangeStruct)(results[0]));
        }
        
        /// <remarks/>
        public void setManuallySelectedEmployeeDataAsync(TAeExchangeStruct AeExchangeStruct) {
            this.setManuallySelectedEmployeeDataAsync(AeExchangeStruct, null);
        }
        
        /// <remarks/>
        public void setManuallySelectedEmployeeDataAsync(TAeExchangeStruct AeExchangeStruct, object userState) {
            if ((this.setManuallySelectedEmployeeDataOperationCompleted == null)) {
                this.setManuallySelectedEmployeeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetManuallySelectedEmployeeDataOperationCompleted);
            }
            this.InvokeAsync("setManuallySelectedEmployeeData", new object[] {
                        AeExchangeStruct}, this.setManuallySelectedEmployeeDataOperationCompleted, userState);
        }
        
        private void OnsetManuallySelectedEmployeeDataOperationCompleted(object arg) {
            if ((this.setManuallySelectedEmployeeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setManuallySelectedEmployeeDataCompleted(this, new setManuallySelectedEmployeeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractWGXlates", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeWorkgroupXLate[] extractWGXlates() {
            object[] results = this.Invoke("extractWGXlates", new object[0]);
            return ((TAeWorkgroupXLate[])(results[0]));
        }
        
        /// <remarks/>
        public void extractWGXlatesAsync() {
            this.extractWGXlatesAsync(null);
        }
        
        /// <remarks/>
        public void extractWGXlatesAsync(object userState) {
            if ((this.extractWGXlatesOperationCompleted == null)) {
                this.extractWGXlatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractWGXlatesOperationCompleted);
            }
            this.InvokeAsync("extractWGXlates", new object[0], this.extractWGXlatesOperationCompleted, userState);
        }
        
        private void OnextractWGXlatesOperationCompleted(object arg) {
            if ((this.extractWGXlatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractWGXlatesCompleted(this, new extractWGXlatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#maintainWGXlate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void maintainWGXlate(TAeWorkgroupXLate AeWorkgroupXLate) {
            this.Invoke("maintainWGXlate", new object[] {
                        AeWorkgroupXLate});
        }
        
        /// <remarks/>
        public void maintainWGXlateAsync(TAeWorkgroupXLate AeWorkgroupXLate) {
            this.maintainWGXlateAsync(AeWorkgroupXLate, null);
        }
        
        /// <remarks/>
        public void maintainWGXlateAsync(TAeWorkgroupXLate AeWorkgroupXLate, object userState) {
            if ((this.maintainWGXlateOperationCompleted == null)) {
                this.maintainWGXlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaintainWGXlateOperationCompleted);
            }
            this.InvokeAsync("maintainWGXlate", new object[] {
                        AeWorkgroupXLate}, this.maintainWGXlateOperationCompleted, userState);
        }
        
        private void OnmaintainWGXlateOperationCompleted(object arg) {
            if ((this.maintainWGXlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maintainWGXlateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeWGXlate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeWGXlate(TAeWorkgroupXLate AeWorkgroupXLate) {
            this.Invoke("removeWGXlate", new object[] {
                        AeWorkgroupXLate});
        }
        
        /// <remarks/>
        public void removeWGXlateAsync(TAeWorkgroupXLate AeWorkgroupXLate) {
            this.removeWGXlateAsync(AeWorkgroupXLate, null);
        }
        
        /// <remarks/>
        public void removeWGXlateAsync(TAeWorkgroupXLate AeWorkgroupXLate, object userState) {
            if ((this.removeWGXlateOperationCompleted == null)) {
                this.removeWGXlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveWGXlateOperationCompleted);
            }
            this.InvokeAsync("removeWGXlate", new object[] {
                        AeWorkgroupXLate}, this.removeWGXlateOperationCompleted, userState);
        }
        
        private void OnremoveWGXlateOperationCompleted(object arg) {
            if ((this.removeWGXlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeWGXlateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getGlobalPayDesMappingsSimple", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getGlobalPayDesMappingsSimple() {
            object[] results = this.Invoke("getGlobalPayDesMappingsSimple", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getGlobalPayDesMappingsSimpleAsync() {
            this.getGlobalPayDesMappingsSimpleAsync(null);
        }
        
        /// <remarks/>
        public void getGlobalPayDesMappingsSimpleAsync(object userState) {
            if ((this.getGlobalPayDesMappingsSimpleOperationCompleted == null)) {
                this.getGlobalPayDesMappingsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGlobalPayDesMappingsSimpleOperationCompleted);
            }
            this.InvokeAsync("getGlobalPayDesMappingsSimple", new object[0], this.getGlobalPayDesMappingsSimpleOperationCompleted, userState);
        }
        
        private void OngetGlobalPayDesMappingsSimpleOperationCompleted(object arg) {
            if ((this.getGlobalPayDesMappingsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGlobalPayDesMappingsSimpleCompleted(this, new getGlobalPayDesMappingsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getGlobalPayDesMappingSet", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayDesMappingSet getGlobalPayDesMappingSet(string GlobalMappingSetName) {
            object[] results = this.Invoke("getGlobalPayDesMappingSet", new object[] {
                        GlobalMappingSetName});
            return ((TAePayDesMappingSet)(results[0]));
        }
        
        /// <remarks/>
        public void getGlobalPayDesMappingSetAsync(string GlobalMappingSetName) {
            this.getGlobalPayDesMappingSetAsync(GlobalMappingSetName, null);
        }
        
        /// <remarks/>
        public void getGlobalPayDesMappingSetAsync(string GlobalMappingSetName, object userState) {
            if ((this.getGlobalPayDesMappingSetOperationCompleted == null)) {
                this.getGlobalPayDesMappingSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGlobalPayDesMappingSetOperationCompleted);
            }
            this.InvokeAsync("getGlobalPayDesMappingSet", new object[] {
                        GlobalMappingSetName}, this.getGlobalPayDesMappingSetOperationCompleted, userState);
        }
        
        private void OngetGlobalPayDesMappingSetOperationCompleted(object arg) {
            if ((this.getGlobalPayDesMappingSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGlobalPayDesMappingSetCompleted(this, new getGlobalPayDesMappingSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getGlobalPayDesMappingSetMappings", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayDesMapping[] getGlobalPayDesMappingSetMappings(string GlobalMappingSetName) {
            object[] results = this.Invoke("getGlobalPayDesMappingSetMappings", new object[] {
                        GlobalMappingSetName});
            return ((TAePayDesMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void getGlobalPayDesMappingSetMappingsAsync(string GlobalMappingSetName) {
            this.getGlobalPayDesMappingSetMappingsAsync(GlobalMappingSetName, null);
        }
        
        /// <remarks/>
        public void getGlobalPayDesMappingSetMappingsAsync(string GlobalMappingSetName, object userState) {
            if ((this.getGlobalPayDesMappingSetMappingsOperationCompleted == null)) {
                this.getGlobalPayDesMappingSetMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGlobalPayDesMappingSetMappingsOperationCompleted);
            }
            this.InvokeAsync("getGlobalPayDesMappingSetMappings", new object[] {
                        GlobalMappingSetName}, this.getGlobalPayDesMappingSetMappingsOperationCompleted, userState);
        }
        
        private void OngetGlobalPayDesMappingSetMappingsOperationCompleted(object arg) {
            if ((this.getGlobalPayDesMappingSetMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGlobalPayDesMappingSetMappingsCompleted(this, new getGlobalPayDesMappingSetMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setGlobalPayDesMappingSet", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setGlobalPayDesMappingSet(TAePayDesMappingSet AePayDesMappingSet, bool ResetMappings) {
            this.Invoke("setGlobalPayDesMappingSet", new object[] {
                        AePayDesMappingSet,
                        ResetMappings});
        }
        
        /// <remarks/>
        public void setGlobalPayDesMappingSetAsync(TAePayDesMappingSet AePayDesMappingSet, bool ResetMappings) {
            this.setGlobalPayDesMappingSetAsync(AePayDesMappingSet, ResetMappings, null);
        }
        
        /// <remarks/>
        public void setGlobalPayDesMappingSetAsync(TAePayDesMappingSet AePayDesMappingSet, bool ResetMappings, object userState) {
            if ((this.setGlobalPayDesMappingSetOperationCompleted == null)) {
                this.setGlobalPayDesMappingSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGlobalPayDesMappingSetOperationCompleted);
            }
            this.InvokeAsync("setGlobalPayDesMappingSet", new object[] {
                        AePayDesMappingSet,
                        ResetMappings}, this.setGlobalPayDesMappingSetOperationCompleted, userState);
        }
        
        private void OnsetGlobalPayDesMappingSetOperationCompleted(object arg) {
            if ((this.setGlobalPayDesMappingSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGlobalPayDesMappingSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendGlobalPayDesMappingSetMapping", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendGlobalPayDesMappingSetMapping(string GlobalMappingSetName, TAePayDesMapping AePayDesMapping) {
            this.Invoke("appendGlobalPayDesMappingSetMapping", new object[] {
                        GlobalMappingSetName,
                        AePayDesMapping});
        }
        
        /// <remarks/>
        public void appendGlobalPayDesMappingSetMappingAsync(string GlobalMappingSetName, TAePayDesMapping AePayDesMapping) {
            this.appendGlobalPayDesMappingSetMappingAsync(GlobalMappingSetName, AePayDesMapping, null);
        }
        
        /// <remarks/>
        public void appendGlobalPayDesMappingSetMappingAsync(string GlobalMappingSetName, TAePayDesMapping AePayDesMapping, object userState) {
            if ((this.appendGlobalPayDesMappingSetMappingOperationCompleted == null)) {
                this.appendGlobalPayDesMappingSetMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendGlobalPayDesMappingSetMappingOperationCompleted);
            }
            this.InvokeAsync("appendGlobalPayDesMappingSetMapping", new object[] {
                        GlobalMappingSetName,
                        AePayDesMapping}, this.appendGlobalPayDesMappingSetMappingOperationCompleted, userState);
        }
        
        private void OnappendGlobalPayDesMappingSetMappingOperationCompleted(object arg) {
            if ((this.appendGlobalPayDesMappingSetMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendGlobalPayDesMappingSetMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeGlobalPayDesMappingSet", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeGlobalPayDesMappingSet(string GlobalMappingSetName) {
            this.Invoke("removeGlobalPayDesMappingSet", new object[] {
                        GlobalMappingSetName});
        }
        
        /// <remarks/>
        public void removeGlobalPayDesMappingSetAsync(string GlobalMappingSetName) {
            this.removeGlobalPayDesMappingSetAsync(GlobalMappingSetName, null);
        }
        
        /// <remarks/>
        public void removeGlobalPayDesMappingSetAsync(string GlobalMappingSetName, object userState) {
            if ((this.removeGlobalPayDesMappingSetOperationCompleted == null)) {
                this.removeGlobalPayDesMappingSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveGlobalPayDesMappingSetOperationCompleted);
            }
            this.InvokeAsync("removeGlobalPayDesMappingSet", new object[] {
                        GlobalMappingSetName}, this.removeGlobalPayDesMappingSetOperationCompleted, userState);
        }
        
        private void OnremoveGlobalPayDesMappingSetOperationCompleted(object arg) {
            if ((this.removeGlobalPayDesMappingSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeGlobalPayDesMappingSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractAttendanceMultiFormActivityUsingHyperQuer" +
            "y", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeMultiForm[] extractAttendanceMultiFormActivityUsingHyperQuery(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractAttendanceMultiFormActivityUsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeMultiForm[])(results[0]));
        }
        
        /// <remarks/>
        public void extractAttendanceMultiFormActivityUsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractAttendanceMultiFormActivityUsingHyperQueryAsync(HyperQueryName, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractAttendanceMultiFormActivityUsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractAttendanceMultiFormActivityUsingHyperQueryOperationCompleted == null)) {
                this.extractAttendanceMultiFormActivityUsingHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractAttendanceMultiFormActivityUsingHyperQueryOperationCompleted);
            }
            this.InvokeAsync("extractAttendanceMultiFormActivityUsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractAttendanceMultiFormActivityUsingHyperQueryOperationCompleted, userState);
        }
        
        private void OnextractAttendanceMultiFormActivityUsingHyperQueryOperationCompleted(object arg) {
            if ((this.extractAttendanceMultiFormActivityUsingHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractAttendanceMultiFormActivityUsingHyperQueryCompleted(this, new extractAttendanceMultiFormActivityUsingHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeSchedulesInRangeByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeSchedulesInRangeByFilekey(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.Invoke("removeEmployeeSchedulesInRangeByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
        }
        
        /// <remarks/>
        public void removeEmployeeSchedulesInRangeByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.removeEmployeeSchedulesInRangeByFilekeyAsync(Filekey, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void removeEmployeeSchedulesInRangeByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.removeEmployeeSchedulesInRangeByFilekeyOperationCompleted == null)) {
                this.removeEmployeeSchedulesInRangeByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeSchedulesInRangeByFilekeyOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeSchedulesInRangeByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.removeEmployeeSchedulesInRangeByFilekeyOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeSchedulesInRangeByFilekeyOperationCompleted(object arg) {
            if ((this.removeEmployeeSchedulesInRangeByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeSchedulesInRangeByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeSchedulesInRangeByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeSchedulesInRangeByIDNum(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.Invoke("removeEmployeeSchedulesInRangeByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
        }
        
        /// <remarks/>
        public void removeEmployeeSchedulesInRangeByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.removeEmployeeSchedulesInRangeByIDNumAsync(IDNum, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void removeEmployeeSchedulesInRangeByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.removeEmployeeSchedulesInRangeByIDNumOperationCompleted == null)) {
                this.removeEmployeeSchedulesInRangeByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeSchedulesInRangeByIDNumOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeSchedulesInRangeByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.removeEmployeeSchedulesInRangeByIDNumOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeSchedulesInRangeByIDNumOperationCompleted(object arg) {
            if ((this.removeEmployeeSchedulesInRangeByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeSchedulesInRangeByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeScheduleByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeScheduleByFilekey(int Filekey, TAeSchedule AeSchedule) {
            this.Invoke("appendEmployeeScheduleByFilekey", new object[] {
                        Filekey,
                        AeSchedule});
        }
        
        /// <remarks/>
        public void appendEmployeeScheduleByFilekeyAsync(int Filekey, TAeSchedule AeSchedule) {
            this.appendEmployeeScheduleByFilekeyAsync(Filekey, AeSchedule, null);
        }
        
        /// <remarks/>
        public void appendEmployeeScheduleByFilekeyAsync(int Filekey, TAeSchedule AeSchedule, object userState) {
            if ((this.appendEmployeeScheduleByFilekeyOperationCompleted == null)) {
                this.appendEmployeeScheduleByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeScheduleByFilekeyOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeScheduleByFilekey", new object[] {
                        Filekey,
                        AeSchedule}, this.appendEmployeeScheduleByFilekeyOperationCompleted, userState);
        }
        
        private void OnappendEmployeeScheduleByFilekeyOperationCompleted(object arg) {
            if ((this.appendEmployeeScheduleByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeScheduleByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeScheduleByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeScheduleByIDNum(string IDNum, TAeSchedule AeSchedule) {
            this.Invoke("appendEmployeeScheduleByIDNum", new object[] {
                        IDNum,
                        AeSchedule});
        }
        
        /// <remarks/>
        public void appendEmployeeScheduleByIDNumAsync(string IDNum, TAeSchedule AeSchedule) {
            this.appendEmployeeScheduleByIDNumAsync(IDNum, AeSchedule, null);
        }
        
        /// <remarks/>
        public void appendEmployeeScheduleByIDNumAsync(string IDNum, TAeSchedule AeSchedule, object userState) {
            if ((this.appendEmployeeScheduleByIDNumOperationCompleted == null)) {
                this.appendEmployeeScheduleByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeScheduleByIDNumOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeScheduleByIDNum", new object[] {
                        IDNum,
                        AeSchedule}, this.appendEmployeeScheduleByIDNumOperationCompleted, userState);
        }
        
        private void OnappendEmployeeScheduleByIDNumOperationCompleted(object arg) {
            if ((this.appendEmployeeScheduleByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeScheduleByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getUserAuthPackage", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeAuthenticationPackage getUserAuthPackage(TAeAuthenticationPackage AeAuthenticationPackage) {
            object[] results = this.Invoke("getUserAuthPackage", new object[] {
                        AeAuthenticationPackage});
            return ((TAeAuthenticationPackage)(results[0]));
        }
        
        /// <remarks/>
        public void getUserAuthPackageAsync(TAeAuthenticationPackage AeAuthenticationPackage) {
            this.getUserAuthPackageAsync(AeAuthenticationPackage, null);
        }
        
        /// <remarks/>
        public void getUserAuthPackageAsync(TAeAuthenticationPackage AeAuthenticationPackage, object userState) {
            if ((this.getUserAuthPackageOperationCompleted == null)) {
                this.getUserAuthPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserAuthPackageOperationCompleted);
            }
            this.InvokeAsync("getUserAuthPackage", new object[] {
                        AeAuthenticationPackage}, this.getUserAuthPackageOperationCompleted, userState);
        }
        
        private void OngetUserAuthPackageOperationCompleted(object arg) {
            if ((this.getUserAuthPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserAuthPackageCompleted(this, new getUserAuthPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPreAuthUserLoginURL", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getPreAuthUserLoginURL(TAeSessionAuthenticationPackage AeSessionAuthenticationPackage) {
            object[] results = this.Invoke("getPreAuthUserLoginURL", new object[] {
                        AeSessionAuthenticationPackage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPreAuthUserLoginURLAsync(TAeSessionAuthenticationPackage AeSessionAuthenticationPackage) {
            this.getPreAuthUserLoginURLAsync(AeSessionAuthenticationPackage, null);
        }
        
        /// <remarks/>
        public void getPreAuthUserLoginURLAsync(TAeSessionAuthenticationPackage AeSessionAuthenticationPackage, object userState) {
            if ((this.getPreAuthUserLoginURLOperationCompleted == null)) {
                this.getPreAuthUserLoginURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPreAuthUserLoginURLOperationCompleted);
            }
            this.InvokeAsync("getPreAuthUserLoginURL", new object[] {
                        AeSessionAuthenticationPackage}, this.getPreAuthUserLoginURLOperationCompleted, userState);
        }
        
        private void OngetPreAuthUserLoginURLOperationCompleted(object arg) {
            if ((this.getPreAuthUserLoginURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPreAuthUserLoginURLCompleted(this, new getPreAuthUserLoginURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#loadBillingItemsExInRange", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBillingItemEx[] loadBillingItemsExInRange(int ItemType, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("loadBillingItemsExInRange", new object[] {
                        ItemType,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeBillingItemEx[])(results[0]));
        }
        
        /// <remarks/>
        public void loadBillingItemsExInRangeAsync(int ItemType, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.loadBillingItemsExInRangeAsync(ItemType, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void loadBillingItemsExInRangeAsync(int ItemType, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.loadBillingItemsExInRangeOperationCompleted == null)) {
                this.loadBillingItemsExInRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadBillingItemsExInRangeOperationCompleted);
            }
            this.InvokeAsync("loadBillingItemsExInRange", new object[] {
                        ItemType,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.loadBillingItemsExInRangeOperationCompleted, userState);
        }
        
        private void OnloadBillingItemsExInRangeOperationCompleted(object arg) {
            if ((this.loadBillingItemsExInRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadBillingItemsExInRangeCompleted(this, new loadBillingItemsExInRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSchedules2ByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeSchedule2[] extractEmployeeSchedules2ByFilekey(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeSchedules2ByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeSchedule2[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSchedules2ByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeSchedules2ByFilekeyAsync(Filekey, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSchedules2ByFilekeyAsync(int Filekey, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeSchedules2ByFilekeyOperationCompleted == null)) {
                this.extractEmployeeSchedules2ByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSchedules2ByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSchedules2ByFilekey", new object[] {
                        Filekey,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeSchedules2ByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSchedules2ByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeSchedules2ByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSchedules2ByFilekeyCompleted(this, new extractEmployeeSchedules2ByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSchedules2ByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeSchedule2[] extractEmployeeSchedules2ByIDNum(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractEmployeeSchedules2ByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeSchedule2[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSchedules2ByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractEmployeeSchedules2ByIDNumAsync(IDNum, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSchedules2ByIDNumAsync(string IDNum, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractEmployeeSchedules2ByIDNumOperationCompleted == null)) {
                this.extractEmployeeSchedules2ByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSchedules2ByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSchedules2ByIDNum", new object[] {
                        IDNum,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractEmployeeSchedules2ByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSchedules2ByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeSchedules2ByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSchedules2ByIDNumCompleted(this, new extractEmployeeSchedules2ByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractRangedSchedules2UsingHyperQuery", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeSchedule2[] extractRangedSchedules2UsingHyperQuery(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            object[] results = this.Invoke("extractRangedSchedules2UsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate});
            return ((TAeSchedule2[])(results[0]));
        }
        
        /// <remarks/>
        public void extractRangedSchedules2UsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate) {
            this.extractRangedSchedules2UsingHyperQueryAsync(HyperQueryName, DateRangeEnum, MinDate, MaxDate, null);
        }
        
        /// <remarks/>
        public void extractRangedSchedules2UsingHyperQueryAsync(string HyperQueryName, TDateRangeEnum DateRangeEnum, string MinDate, string MaxDate, object userState) {
            if ((this.extractRangedSchedules2UsingHyperQueryOperationCompleted == null)) {
                this.extractRangedSchedules2UsingHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractRangedSchedules2UsingHyperQueryOperationCompleted);
            }
            this.InvokeAsync("extractRangedSchedules2UsingHyperQuery", new object[] {
                        HyperQueryName,
                        DateRangeEnum,
                        MinDate,
                        MaxDate}, this.extractRangedSchedules2UsingHyperQueryOperationCompleted, userState);
        }
        
        private void OnextractRangedSchedules2UsingHyperQueryOperationCompleted(object arg) {
            if ((this.extractRangedSchedules2UsingHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractRangedSchedules2UsingHyperQueryCompleted(this, new extractRangedSchedules2UsingHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeSchedule2ByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeSchedule2ByFilekey(int Filekey, TAeSchedule2 AeSchedule2) {
            this.Invoke("appendEmployeeSchedule2ByFilekey", new object[] {
                        Filekey,
                        AeSchedule2});
        }
        
        /// <remarks/>
        public void appendEmployeeSchedule2ByFilekeyAsync(int Filekey, TAeSchedule2 AeSchedule2) {
            this.appendEmployeeSchedule2ByFilekeyAsync(Filekey, AeSchedule2, null);
        }
        
        /// <remarks/>
        public void appendEmployeeSchedule2ByFilekeyAsync(int Filekey, TAeSchedule2 AeSchedule2, object userState) {
            if ((this.appendEmployeeSchedule2ByFilekeyOperationCompleted == null)) {
                this.appendEmployeeSchedule2ByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeSchedule2ByFilekeyOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeSchedule2ByFilekey", new object[] {
                        Filekey,
                        AeSchedule2}, this.appendEmployeeSchedule2ByFilekeyOperationCompleted, userState);
        }
        
        private void OnappendEmployeeSchedule2ByFilekeyOperationCompleted(object arg) {
            if ((this.appendEmployeeSchedule2ByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeSchedule2ByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeSchedule2ByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeSchedule2ByIDNum(string IDNum, TAeSchedule2 AeSchedule2) {
            this.Invoke("appendEmployeeSchedule2ByIDNum", new object[] {
                        IDNum,
                        AeSchedule2});
        }
        
        /// <remarks/>
        public void appendEmployeeSchedule2ByIDNumAsync(string IDNum, TAeSchedule2 AeSchedule2) {
            this.appendEmployeeSchedule2ByIDNumAsync(IDNum, AeSchedule2, null);
        }
        
        /// <remarks/>
        public void appendEmployeeSchedule2ByIDNumAsync(string IDNum, TAeSchedule2 AeSchedule2, object userState) {
            if ((this.appendEmployeeSchedule2ByIDNumOperationCompleted == null)) {
                this.appendEmployeeSchedule2ByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeSchedule2ByIDNumOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeSchedule2ByIDNum", new object[] {
                        IDNum,
                        AeSchedule2}, this.appendEmployeeSchedule2ByIDNumOperationCompleted, userState);
        }
        
        private void OnappendEmployeeSchedule2ByIDNumOperationCompleted(object arg) {
            if ((this.appendEmployeeSchedule2ByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeSchedule2ByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeScheduleByUniqueID", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeScheduleByUniqueID(int UniqueID) {
            this.Invoke("removeEmployeeScheduleByUniqueID", new object[] {
                        UniqueID});
        }
        
        /// <remarks/>
        public void removeEmployeeScheduleByUniqueIDAsync(int UniqueID) {
            this.removeEmployeeScheduleByUniqueIDAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void removeEmployeeScheduleByUniqueIDAsync(int UniqueID, object userState) {
            if ((this.removeEmployeeScheduleByUniqueIDOperationCompleted == null)) {
                this.removeEmployeeScheduleByUniqueIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeScheduleByUniqueIDOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeScheduleByUniqueID", new object[] {
                        UniqueID}, this.removeEmployeeScheduleByUniqueIDOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeScheduleByUniqueIDOperationCompleted(object arg) {
            if ((this.removeEmployeeScheduleByUniqueIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeScheduleByUniqueIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#submitTimeOffRequestEx", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void submitTimeOffRequestEx(TAeTimeOffRequest AeTimeOffRequest, string LinkBack) {
            this.Invoke("submitTimeOffRequestEx", new object[] {
                        AeTimeOffRequest,
                        LinkBack});
        }
        
        /// <remarks/>
        public void submitTimeOffRequestExAsync(TAeTimeOffRequest AeTimeOffRequest, string LinkBack) {
            this.submitTimeOffRequestExAsync(AeTimeOffRequest, LinkBack, null);
        }
        
        /// <remarks/>
        public void submitTimeOffRequestExAsync(TAeTimeOffRequest AeTimeOffRequest, string LinkBack, object userState) {
            if ((this.submitTimeOffRequestExOperationCompleted == null)) {
                this.submitTimeOffRequestExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTimeOffRequestExOperationCompleted);
            }
            this.InvokeAsync("submitTimeOffRequestEx", new object[] {
                        AeTimeOffRequest,
                        LinkBack}, this.submitTimeOffRequestExOperationCompleted, userState);
        }
        
        private void OnsubmitTimeOffRequestExOperationCompleted(object arg) {
            if ((this.submitTimeOffRequestExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTimeOffRequestExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#submitTimeOffRequestMess", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void submitTimeOffRequestMess(TAeTimeOffRequest AeTimeOffRequest, TAeTimeOffRequestNotification AeTimeOffRequestNotification, string LinkBack) {
            this.Invoke("submitTimeOffRequestMess", new object[] {
                        AeTimeOffRequest,
                        AeTimeOffRequestNotification,
                        LinkBack});
        }
        
        /// <remarks/>
        public void submitTimeOffRequestMessAsync(TAeTimeOffRequest AeTimeOffRequest, TAeTimeOffRequestNotification AeTimeOffRequestNotification, string LinkBack) {
            this.submitTimeOffRequestMessAsync(AeTimeOffRequest, AeTimeOffRequestNotification, LinkBack, null);
        }
        
        /// <remarks/>
        public void submitTimeOffRequestMessAsync(TAeTimeOffRequest AeTimeOffRequest, TAeTimeOffRequestNotification AeTimeOffRequestNotification, string LinkBack, object userState) {
            if ((this.submitTimeOffRequestMessOperationCompleted == null)) {
                this.submitTimeOffRequestMessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTimeOffRequestMessOperationCompleted);
            }
            this.InvokeAsync("submitTimeOffRequestMess", new object[] {
                        AeTimeOffRequest,
                        AeTimeOffRequestNotification,
                        LinkBack}, this.submitTimeOffRequestMessOperationCompleted, userState);
        }
        
        private void OnsubmitTimeOffRequestMessOperationCompleted(object arg) {
            if ((this.submitTimeOffRequestMessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTimeOffRequestMessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#empRemoveLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void empRemoveLeaveRequestEntry(int UniqueID, string Comments) {
            this.Invoke("empRemoveLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments});
        }
        
        /// <remarks/>
        public void empRemoveLeaveRequestEntryAsync(int UniqueID, string Comments) {
            this.empRemoveLeaveRequestEntryAsync(UniqueID, Comments, null);
        }
        
        /// <remarks/>
        public void empRemoveLeaveRequestEntryAsync(int UniqueID, string Comments, object userState) {
            if ((this.empRemoveLeaveRequestEntryOperationCompleted == null)) {
                this.empRemoveLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnempRemoveLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("empRemoveLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments}, this.empRemoveLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OnempRemoveLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.empRemoveLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.empRemoveLeaveRequestEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#empRemoveLeaveRequestEntryMess", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void empRemoveLeaveRequestEntryMess(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.Invoke("empRemoveLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification});
        }
        
        /// <remarks/>
        public void empRemoveLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.empRemoveLeaveRequestEntryMessAsync(UniqueID, AeTimeOffRequestNotification, null);
        }
        
        /// <remarks/>
        public void empRemoveLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, object userState) {
            if ((this.empRemoveLeaveRequestEntryMessOperationCompleted == null)) {
                this.empRemoveLeaveRequestEntryMessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnempRemoveLeaveRequestEntryMessOperationCompleted);
            }
            this.InvokeAsync("empRemoveLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification}, this.empRemoveLeaveRequestEntryMessOperationCompleted, userState);
        }
        
        private void OnempRemoveLeaveRequestEntryMessOperationCompleted(object arg) {
            if ((this.empRemoveLeaveRequestEntryMessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.empRemoveLeaveRequestEntryMessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#approveLeaveRequestEntryEx", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void approveLeaveRequestEntryEx(int UniqueID, string Comments) {
            this.Invoke("approveLeaveRequestEntryEx", new object[] {
                        UniqueID,
                        Comments});
        }
        
        /// <remarks/>
        public void approveLeaveRequestEntryExAsync(int UniqueID, string Comments) {
            this.approveLeaveRequestEntryExAsync(UniqueID, Comments, null);
        }
        
        /// <remarks/>
        public void approveLeaveRequestEntryExAsync(int UniqueID, string Comments, object userState) {
            if ((this.approveLeaveRequestEntryExOperationCompleted == null)) {
                this.approveLeaveRequestEntryExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapproveLeaveRequestEntryExOperationCompleted);
            }
            this.InvokeAsync("approveLeaveRequestEntryEx", new object[] {
                        UniqueID,
                        Comments}, this.approveLeaveRequestEntryExOperationCompleted, userState);
        }
        
        private void OnapproveLeaveRequestEntryExOperationCompleted(object arg) {
            if ((this.approveLeaveRequestEntryExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.approveLeaveRequestEntryExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#approveLeaveRequestEntryMess", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void approveLeaveRequestEntryMess(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.Invoke("approveLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification});
        }
        
        /// <remarks/>
        public void approveLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.approveLeaveRequestEntryMessAsync(UniqueID, AeTimeOffRequestNotification, null);
        }
        
        /// <remarks/>
        public void approveLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, object userState) {
            if ((this.approveLeaveRequestEntryMessOperationCompleted == null)) {
                this.approveLeaveRequestEntryMessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapproveLeaveRequestEntryMessOperationCompleted);
            }
            this.InvokeAsync("approveLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification}, this.approveLeaveRequestEntryMessOperationCompleted, userState);
        }
        
        private void OnapproveLeaveRequestEntryMessOperationCompleted(object arg) {
            if ((this.approveLeaveRequestEntryMessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.approveLeaveRequestEntryMessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#denyLeaveRequestEntryEx", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void denyLeaveRequestEntryEx(int UniqueID, string Comments) {
            this.Invoke("denyLeaveRequestEntryEx", new object[] {
                        UniqueID,
                        Comments});
        }
        
        /// <remarks/>
        public void denyLeaveRequestEntryExAsync(int UniqueID, string Comments) {
            this.denyLeaveRequestEntryExAsync(UniqueID, Comments, null);
        }
        
        /// <remarks/>
        public void denyLeaveRequestEntryExAsync(int UniqueID, string Comments, object userState) {
            if ((this.denyLeaveRequestEntryExOperationCompleted == null)) {
                this.denyLeaveRequestEntryExOperationCompleted = new System.Threading.SendOrPostCallback(this.OndenyLeaveRequestEntryExOperationCompleted);
            }
            this.InvokeAsync("denyLeaveRequestEntryEx", new object[] {
                        UniqueID,
                        Comments}, this.denyLeaveRequestEntryExOperationCompleted, userState);
        }
        
        private void OndenyLeaveRequestEntryExOperationCompleted(object arg) {
            if ((this.denyLeaveRequestEntryExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.denyLeaveRequestEntryExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#denyLeaveRequestEntryMess", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void denyLeaveRequestEntryMess(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.Invoke("denyLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification});
        }
        
        /// <remarks/>
        public void denyLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.denyLeaveRequestEntryMessAsync(UniqueID, AeTimeOffRequestNotification, null);
        }
        
        /// <remarks/>
        public void denyLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, object userState) {
            if ((this.denyLeaveRequestEntryMessOperationCompleted == null)) {
                this.denyLeaveRequestEntryMessOperationCompleted = new System.Threading.SendOrPostCallback(this.OndenyLeaveRequestEntryMessOperationCompleted);
            }
            this.InvokeAsync("denyLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification}, this.denyLeaveRequestEntryMessOperationCompleted, userState);
        }
        
        private void OndenyLeaveRequestEntryMessOperationCompleted(object arg) {
            if ((this.denyLeaveRequestEntryMessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.denyLeaveRequestEntryMessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#leaveRequestIsCancelable", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool leaveRequestIsCancelable(int UniqueID) {
            object[] results = this.Invoke("leaveRequestIsCancelable", new object[] {
                        UniqueID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void leaveRequestIsCancelableAsync(int UniqueID) {
            this.leaveRequestIsCancelableAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void leaveRequestIsCancelableAsync(int UniqueID, object userState) {
            if ((this.leaveRequestIsCancelableOperationCompleted == null)) {
                this.leaveRequestIsCancelableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnleaveRequestIsCancelableOperationCompleted);
            }
            this.InvokeAsync("leaveRequestIsCancelable", new object[] {
                        UniqueID}, this.leaveRequestIsCancelableOperationCompleted, userState);
        }
        
        private void OnleaveRequestIsCancelableOperationCompleted(object arg) {
            if ((this.leaveRequestIsCancelableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.leaveRequestIsCancelableCompleted(this, new leaveRequestIsCancelableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#leaveRequestIsRemovable", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool leaveRequestIsRemovable(int UniqueID) {
            object[] results = this.Invoke("leaveRequestIsRemovable", new object[] {
                        UniqueID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void leaveRequestIsRemovableAsync(int UniqueID) {
            this.leaveRequestIsRemovableAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void leaveRequestIsRemovableAsync(int UniqueID, object userState) {
            if ((this.leaveRequestIsRemovableOperationCompleted == null)) {
                this.leaveRequestIsRemovableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnleaveRequestIsRemovableOperationCompleted);
            }
            this.InvokeAsync("leaveRequestIsRemovable", new object[] {
                        UniqueID}, this.leaveRequestIsRemovableOperationCompleted, userState);
        }
        
        private void OnleaveRequestIsRemovableOperationCompleted(object arg) {
            if ((this.leaveRequestIsRemovableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.leaveRequestIsRemovableCompleted(this, new leaveRequestIsRemovableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#approveCancelLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void approveCancelLeaveRequestEntry(int UniqueID, string Comments) {
            this.Invoke("approveCancelLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments});
        }
        
        /// <remarks/>
        public void approveCancelLeaveRequestEntryAsync(int UniqueID, string Comments) {
            this.approveCancelLeaveRequestEntryAsync(UniqueID, Comments, null);
        }
        
        /// <remarks/>
        public void approveCancelLeaveRequestEntryAsync(int UniqueID, string Comments, object userState) {
            if ((this.approveCancelLeaveRequestEntryOperationCompleted == null)) {
                this.approveCancelLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapproveCancelLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("approveCancelLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments}, this.approveCancelLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OnapproveCancelLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.approveCancelLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.approveCancelLeaveRequestEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#approveCancelLeaveRequestEntryMess", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void approveCancelLeaveRequestEntryMess(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.Invoke("approveCancelLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification});
        }
        
        /// <remarks/>
        public void approveCancelLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.approveCancelLeaveRequestEntryMessAsync(UniqueID, AeTimeOffRequestNotification, null);
        }
        
        /// <remarks/>
        public void approveCancelLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, object userState) {
            if ((this.approveCancelLeaveRequestEntryMessOperationCompleted == null)) {
                this.approveCancelLeaveRequestEntryMessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapproveCancelLeaveRequestEntryMessOperationCompleted);
            }
            this.InvokeAsync("approveCancelLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification}, this.approveCancelLeaveRequestEntryMessOperationCompleted, userState);
        }
        
        private void OnapproveCancelLeaveRequestEntryMessOperationCompleted(object arg) {
            if ((this.approveCancelLeaveRequestEntryMessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.approveCancelLeaveRequestEntryMessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#denyCancelLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void denyCancelLeaveRequestEntry(int UniqueID, string Comments) {
            this.Invoke("denyCancelLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments});
        }
        
        /// <remarks/>
        public void denyCancelLeaveRequestEntryAsync(int UniqueID, string Comments) {
            this.denyCancelLeaveRequestEntryAsync(UniqueID, Comments, null);
        }
        
        /// <remarks/>
        public void denyCancelLeaveRequestEntryAsync(int UniqueID, string Comments, object userState) {
            if ((this.denyCancelLeaveRequestEntryOperationCompleted == null)) {
                this.denyCancelLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndenyCancelLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("denyCancelLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments}, this.denyCancelLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OndenyCancelLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.denyCancelLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.denyCancelLeaveRequestEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#denyCancelLeaveRequestEntryMess", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void denyCancelLeaveRequestEntryMess(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.Invoke("denyCancelLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification});
        }
        
        /// <remarks/>
        public void denyCancelLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification) {
            this.denyCancelLeaveRequestEntryMessAsync(UniqueID, AeTimeOffRequestNotification, null);
        }
        
        /// <remarks/>
        public void denyCancelLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, object userState) {
            if ((this.denyCancelLeaveRequestEntryMessOperationCompleted == null)) {
                this.denyCancelLeaveRequestEntryMessOperationCompleted = new System.Threading.SendOrPostCallback(this.OndenyCancelLeaveRequestEntryMessOperationCompleted);
            }
            this.InvokeAsync("denyCancelLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification}, this.denyCancelLeaveRequestEntryMessOperationCompleted, userState);
        }
        
        private void OndenyCancelLeaveRequestEntryMessOperationCompleted(object arg) {
            if ((this.denyCancelLeaveRequestEntryMessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.denyCancelLeaveRequestEntryMessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#empCancelLeaveRequestEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void empCancelLeaveRequestEntry(int UniqueID, string Comments, string LinkBack) {
            this.Invoke("empCancelLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments,
                        LinkBack});
        }
        
        /// <remarks/>
        public void empCancelLeaveRequestEntryAsync(int UniqueID, string Comments, string LinkBack) {
            this.empCancelLeaveRequestEntryAsync(UniqueID, Comments, LinkBack, null);
        }
        
        /// <remarks/>
        public void empCancelLeaveRequestEntryAsync(int UniqueID, string Comments, string LinkBack, object userState) {
            if ((this.empCancelLeaveRequestEntryOperationCompleted == null)) {
                this.empCancelLeaveRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnempCancelLeaveRequestEntryOperationCompleted);
            }
            this.InvokeAsync("empCancelLeaveRequestEntry", new object[] {
                        UniqueID,
                        Comments,
                        LinkBack}, this.empCancelLeaveRequestEntryOperationCompleted, userState);
        }
        
        private void OnempCancelLeaveRequestEntryOperationCompleted(object arg) {
            if ((this.empCancelLeaveRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.empCancelLeaveRequestEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#empCancelLeaveRequestEntryMess", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void empCancelLeaveRequestEntryMess(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, string LinkBack) {
            this.Invoke("empCancelLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification,
                        LinkBack});
        }
        
        /// <remarks/>
        public void empCancelLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, string LinkBack) {
            this.empCancelLeaveRequestEntryMessAsync(UniqueID, AeTimeOffRequestNotification, LinkBack, null);
        }
        
        /// <remarks/>
        public void empCancelLeaveRequestEntryMessAsync(int UniqueID, TAeTimeOffRequestNotification AeTimeOffRequestNotification, string LinkBack, object userState) {
            if ((this.empCancelLeaveRequestEntryMessOperationCompleted == null)) {
                this.empCancelLeaveRequestEntryMessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnempCancelLeaveRequestEntryMessOperationCompleted);
            }
            this.InvokeAsync("empCancelLeaveRequestEntryMess", new object[] {
                        UniqueID,
                        AeTimeOffRequestNotification,
                        LinkBack}, this.empCancelLeaveRequestEntryMessOperationCompleted, userState);
        }
        
        private void OnempCancelLeaveRequestEntryMessOperationCompleted(object arg) {
            if ((this.empCancelLeaveRequestEntryMessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.empCancelLeaveRequestEntryMessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeLeaveRequestHist", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTimeOffRequestHist[] extractEmployeeLeaveRequestHist(int UniqueID) {
            object[] results = this.Invoke("extractEmployeeLeaveRequestHist", new object[] {
                        UniqueID});
            return ((TAeTimeOffRequestHist[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestHistAsync(int UniqueID) {
            this.extractEmployeeLeaveRequestHistAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestHistAsync(int UniqueID, object userState) {
            if ((this.extractEmployeeLeaveRequestHistOperationCompleted == null)) {
                this.extractEmployeeLeaveRequestHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeLeaveRequestHistOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeLeaveRequestHist", new object[] {
                        UniqueID}, this.extractEmployeeLeaveRequestHistOperationCompleted, userState);
        }
        
        private void OnextractEmployeeLeaveRequestHistOperationCompleted(object arg) {
            if ((this.extractEmployeeLeaveRequestHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeLeaveRequestHistCompleted(this, new extractEmployeeLeaveRequestHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeLeaveRequest", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeTimeOffRequest extractEmployeeLeaveRequest(int UniqueID) {
            object[] results = this.Invoke("extractEmployeeLeaveRequest", new object[] {
                        UniqueID});
            return ((TAeTimeOffRequest)(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestAsync(int UniqueID) {
            this.extractEmployeeLeaveRequestAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void extractEmployeeLeaveRequestAsync(int UniqueID, object userState) {
            if ((this.extractEmployeeLeaveRequestOperationCompleted == null)) {
                this.extractEmployeeLeaveRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeLeaveRequestOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeLeaveRequest", new object[] {
                        UniqueID}, this.extractEmployeeLeaveRequestOperationCompleted, userState);
        }
        
        private void OnextractEmployeeLeaveRequestOperationCompleted(object arg) {
            if ((this.extractEmployeeLeaveRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeLeaveRequestCompleted(this, new extractEmployeeLeaveRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeBenefitBalancesAsOfByFileKey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpBenefitBalance[] getEmployeeBenefitBalancesAsOfByFileKey(int Filekey, string SelDate) {
            object[] results = this.Invoke("getEmployeeBenefitBalancesAsOfByFileKey", new object[] {
                        Filekey,
                        SelDate});
            return ((TAeEmpBenefitBalance[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeBenefitBalancesAsOfByFileKeyAsync(int Filekey, string SelDate) {
            this.getEmployeeBenefitBalancesAsOfByFileKeyAsync(Filekey, SelDate, null);
        }
        
        /// <remarks/>
        public void getEmployeeBenefitBalancesAsOfByFileKeyAsync(int Filekey, string SelDate, object userState) {
            if ((this.getEmployeeBenefitBalancesAsOfByFileKeyOperationCompleted == null)) {
                this.getEmployeeBenefitBalancesAsOfByFileKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeBenefitBalancesAsOfByFileKeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeBenefitBalancesAsOfByFileKey", new object[] {
                        Filekey,
                        SelDate}, this.getEmployeeBenefitBalancesAsOfByFileKeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeBenefitBalancesAsOfByFileKeyOperationCompleted(object arg) {
            if ((this.getEmployeeBenefitBalancesAsOfByFileKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeBenefitBalancesAsOfByFileKeyCompleted(this, new getEmployeeBenefitBalancesAsOfByFileKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeBenefitBalancesAsOfByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpBenefitBalance[] getEmployeeBenefitBalancesAsOfByIDNum(string IDNum, string SelDate) {
            object[] results = this.Invoke("getEmployeeBenefitBalancesAsOfByIDNum", new object[] {
                        IDNum,
                        SelDate});
            return ((TAeEmpBenefitBalance[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeBenefitBalancesAsOfByIDNumAsync(string IDNum, string SelDate) {
            this.getEmployeeBenefitBalancesAsOfByIDNumAsync(IDNum, SelDate, null);
        }
        
        /// <remarks/>
        public void getEmployeeBenefitBalancesAsOfByIDNumAsync(string IDNum, string SelDate, object userState) {
            if ((this.getEmployeeBenefitBalancesAsOfByIDNumOperationCompleted == null)) {
                this.getEmployeeBenefitBalancesAsOfByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeBenefitBalancesAsOfByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeBenefitBalancesAsOfByIDNum", new object[] {
                        IDNum,
                        SelDate}, this.getEmployeeBenefitBalancesAsOfByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeBenefitBalancesAsOfByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeBenefitBalancesAsOfByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeBenefitBalancesAsOfByIDNumCompleted(this, new getEmployeeBenefitBalancesAsOfByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeBenefitBalancesAsOfUsingHyperQuer" +
            "y", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpBenefitBalance[] extractEmployeeBenefitBalancesAsOfUsingHyperQuery(string HyperQueryName, int PayPerClass, string SelDate) {
            object[] results = this.Invoke("extractEmployeeBenefitBalancesAsOfUsingHyperQuery", new object[] {
                        HyperQueryName,
                        PayPerClass,
                        SelDate});
            return ((TAeEmpBenefitBalance[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeBenefitBalancesAsOfUsingHyperQueryAsync(string HyperQueryName, int PayPerClass, string SelDate) {
            this.extractEmployeeBenefitBalancesAsOfUsingHyperQueryAsync(HyperQueryName, PayPerClass, SelDate, null);
        }
        
        /// <remarks/>
        public void extractEmployeeBenefitBalancesAsOfUsingHyperQueryAsync(string HyperQueryName, int PayPerClass, string SelDate, object userState) {
            if ((this.extractEmployeeBenefitBalancesAsOfUsingHyperQueryOperationCompleted == null)) {
                this.extractEmployeeBenefitBalancesAsOfUsingHyperQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeBenefitBalancesAsOfUsingHyperQueryOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeBenefitBalancesAsOfUsingHyperQuery", new object[] {
                        HyperQueryName,
                        PayPerClass,
                        SelDate}, this.extractEmployeeBenefitBalancesAsOfUsingHyperQueryOperationCompleted, userState);
        }
        
        private void OnextractEmployeeBenefitBalancesAsOfUsingHyperQueryOperationCompleted(object arg) {
            if ((this.extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompleted(this, new extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeTransferRate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpTranRate getEmployeeTransferRate(int UniqueID) {
            object[] results = this.Invoke("getEmployeeTransferRate", new object[] {
                        UniqueID});
            return ((TAeEmpTranRate)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeTransferRateAsync(int UniqueID) {
            this.getEmployeeTransferRateAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void getEmployeeTransferRateAsync(int UniqueID, object userState) {
            if ((this.getEmployeeTransferRateOperationCompleted == null)) {
                this.getEmployeeTransferRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeTransferRateOperationCompleted);
            }
            this.InvokeAsync("getEmployeeTransferRate", new object[] {
                        UniqueID}, this.getEmployeeTransferRateOperationCompleted, userState);
        }
        
        private void OngetEmployeeTransferRateOperationCompleted(object arg) {
            if ((this.getEmployeeTransferRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeTransferRateCompleted(this, new getEmployeeTransferRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#addEmployeeTransferRate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void addEmployeeTransferRate(TAeEmpTranRate AeEmpTranRate) {
            this.Invoke("addEmployeeTransferRate", new object[] {
                        AeEmpTranRate});
        }
        
        /// <remarks/>
        public void addEmployeeTransferRateAsync(TAeEmpTranRate AeEmpTranRate) {
            this.addEmployeeTransferRateAsync(AeEmpTranRate, null);
        }
        
        /// <remarks/>
        public void addEmployeeTransferRateAsync(TAeEmpTranRate AeEmpTranRate, object userState) {
            if ((this.addEmployeeTransferRateOperationCompleted == null)) {
                this.addEmployeeTransferRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEmployeeTransferRateOperationCompleted);
            }
            this.InvokeAsync("addEmployeeTransferRate", new object[] {
                        AeEmpTranRate}, this.addEmployeeTransferRateOperationCompleted, userState);
        }
        
        private void OnaddEmployeeTransferRateOperationCompleted(object arg) {
            if ((this.addEmployeeTransferRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEmployeeTransferRateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#updateEmployeeTransferRate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void updateEmployeeTransferRate(TAeEmpTranRate AeEmpTranRate) {
            this.Invoke("updateEmployeeTransferRate", new object[] {
                        AeEmpTranRate});
        }
        
        /// <remarks/>
        public void updateEmployeeTransferRateAsync(TAeEmpTranRate AeEmpTranRate) {
            this.updateEmployeeTransferRateAsync(AeEmpTranRate, null);
        }
        
        /// <remarks/>
        public void updateEmployeeTransferRateAsync(TAeEmpTranRate AeEmpTranRate, object userState) {
            if ((this.updateEmployeeTransferRateOperationCompleted == null)) {
                this.updateEmployeeTransferRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEmployeeTransferRateOperationCompleted);
            }
            this.InvokeAsync("updateEmployeeTransferRate", new object[] {
                        AeEmpTranRate}, this.updateEmployeeTransferRateOperationCompleted, userState);
        }
        
        private void OnupdateEmployeeTransferRateOperationCompleted(object arg) {
            if ((this.updateEmployeeTransferRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEmployeeTransferRateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeTransferRate", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeTransferRate(int UniqueID) {
            this.Invoke("removeEmployeeTransferRate", new object[] {
                        UniqueID});
        }
        
        /// <remarks/>
        public void removeEmployeeTransferRateAsync(int UniqueID) {
            this.removeEmployeeTransferRateAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void removeEmployeeTransferRateAsync(int UniqueID, object userState) {
            if ((this.removeEmployeeTransferRateOperationCompleted == null)) {
                this.removeEmployeeTransferRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeTransferRateOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeTransferRate", new object[] {
                        UniqueID}, this.removeEmployeeTransferRateOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeTransferRateOperationCompleted(object arg) {
            if ((this.removeEmployeeTransferRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeTransferRateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeTransferRatesByFileKey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpTranRate[] getEmployeeTransferRatesByFileKey(int Filekey) {
            object[] results = this.Invoke("getEmployeeTransferRatesByFileKey", new object[] {
                        Filekey});
            return ((TAeEmpTranRate[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeTransferRatesByFileKeyAsync(int Filekey) {
            this.getEmployeeTransferRatesByFileKeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeTransferRatesByFileKeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeTransferRatesByFileKeyOperationCompleted == null)) {
                this.getEmployeeTransferRatesByFileKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeTransferRatesByFileKeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeTransferRatesByFileKey", new object[] {
                        Filekey}, this.getEmployeeTransferRatesByFileKeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeTransferRatesByFileKeyOperationCompleted(object arg) {
            if ((this.getEmployeeTransferRatesByFileKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeTransferRatesByFileKeyCompleted(this, new getEmployeeTransferRatesByFileKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeTransferRatesByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpTranRate[] getEmployeeTransferRatesByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeTransferRatesByIDNum", new object[] {
                        IDNum});
            return ((TAeEmpTranRate[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeTransferRatesByIDNumAsync(string IDNum) {
            this.getEmployeeTransferRatesByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeTransferRatesByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeTransferRatesByIDNumOperationCompleted == null)) {
                this.getEmployeeTransferRatesByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeTransferRatesByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeTransferRatesByIDNum", new object[] {
                        IDNum}, this.getEmployeeTransferRatesByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeTransferRatesByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeTransferRatesByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeTransferRatesByIDNumCompleted(this, new getEmployeeTransferRatesByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesListBasicFromHyperQueryWorkgroupFilt" +
            "er", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeBasic[] getEmployeesListBasicFromHyperQueryWorkgroupFilter(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet) {
            object[] results = this.Invoke("getEmployeesListBasicFromHyperQueryWorkgroupFilter", new object[] {
                        HyperQueryName,
                        AeWorkgroupSet});
            return ((TAeEmployeeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesListBasicFromHyperQueryWorkgroupFilterAsync(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet) {
            this.getEmployeesListBasicFromHyperQueryWorkgroupFilterAsync(HyperQueryName, AeWorkgroupSet, null);
        }
        
        /// <remarks/>
        public void getEmployeesListBasicFromHyperQueryWorkgroupFilterAsync(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet, object userState) {
            if ((this.getEmployeesListBasicFromHyperQueryWorkgroupFilterOperationCompleted == null)) {
                this.getEmployeesListBasicFromHyperQueryWorkgroupFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesListBasicFromHyperQueryWorkgroupFilterOperationCompleted);
            }
            this.InvokeAsync("getEmployeesListBasicFromHyperQueryWorkgroupFilter", new object[] {
                        HyperQueryName,
                        AeWorkgroupSet}, this.getEmployeesListBasicFromHyperQueryWorkgroupFilterOperationCompleted, userState);
        }
        
        private void OngetEmployeesListBasicFromHyperQueryWorkgroupFilterOperationCompleted(object arg) {
            if ((this.getEmployeesListBasicFromHyperQueryWorkgroupFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesListBasicFromHyperQueryWorkgroupFilterCompleted(this, new getEmployeesListBasicFromHyperQueryWorkgroupFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesListDetailFromHyperQueryWorkgroupFil" +
            "ter", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail[] getEmployeesListDetailFromHyperQueryWorkgroupFilter(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet) {
            object[] results = this.Invoke("getEmployeesListDetailFromHyperQueryWorkgroupFilter", new object[] {
                        HyperQueryName,
                        AeWorkgroupSet});
            return ((TAeEmployeeDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesListDetailFromHyperQueryWorkgroupFilterAsync(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet) {
            this.getEmployeesListDetailFromHyperQueryWorkgroupFilterAsync(HyperQueryName, AeWorkgroupSet, null);
        }
        
        /// <remarks/>
        public void getEmployeesListDetailFromHyperQueryWorkgroupFilterAsync(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet, object userState) {
            if ((this.getEmployeesListDetailFromHyperQueryWorkgroupFilterOperationCompleted == null)) {
                this.getEmployeesListDetailFromHyperQueryWorkgroupFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesListDetailFromHyperQueryWorkgroupFilterOperationCompleted);
            }
            this.InvokeAsync("getEmployeesListDetailFromHyperQueryWorkgroupFilter", new object[] {
                        HyperQueryName,
                        AeWorkgroupSet}, this.getEmployeesListDetailFromHyperQueryWorkgroupFilterOperationCompleted, userState);
        }
        
        private void OngetEmployeesListDetailFromHyperQueryWorkgroupFilterOperationCompleted(object arg) {
            if ((this.getEmployeesListDetailFromHyperQueryWorkgroupFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesListDetailFromHyperQueryWorkgroupFilterCompleted(this, new getEmployeesListDetailFromHyperQueryWorkgroupFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeesListDetail2FromHyperQueryWorkgroupFi" +
            "lter", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeDetail2[] getEmployeesListDetail2FromHyperQueryWorkgroupFilter(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet) {
            object[] results = this.Invoke("getEmployeesListDetail2FromHyperQueryWorkgroupFilter", new object[] {
                        HyperQueryName,
                        AeWorkgroupSet});
            return ((TAeEmployeeDetail2[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesListDetail2FromHyperQueryWorkgroupFilterAsync(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet) {
            this.getEmployeesListDetail2FromHyperQueryWorkgroupFilterAsync(HyperQueryName, AeWorkgroupSet, null);
        }
        
        /// <remarks/>
        public void getEmployeesListDetail2FromHyperQueryWorkgroupFilterAsync(string HyperQueryName, TAeWorkgroupSet AeWorkgroupSet, object userState) {
            if ((this.getEmployeesListDetail2FromHyperQueryWorkgroupFilterOperationCompleted == null)) {
                this.getEmployeesListDetail2FromHyperQueryWorkgroupFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesListDetail2FromHyperQueryWorkgroupFilterOperationCompleted);
            }
            this.InvokeAsync("getEmployeesListDetail2FromHyperQueryWorkgroupFilter", new object[] {
                        HyperQueryName,
                        AeWorkgroupSet}, this.getEmployeesListDetail2FromHyperQueryWorkgroupFilterOperationCompleted, userState);
        }
        
        private void OngetEmployeesListDetail2FromHyperQueryWorkgroupFilterOperationCompleted(object arg) {
            if ((this.getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompleted(this, new getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyEmployeeACA", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeACA getEmptyEmployeeACA() {
            object[] results = this.Invoke("getEmptyEmployeeACA", new object[0]);
            return ((TAeEmployeeACA)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyEmployeeACAAsync() {
            this.getEmptyEmployeeACAAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyEmployeeACAAsync(object userState) {
            if ((this.getEmptyEmployeeACAOperationCompleted == null)) {
                this.getEmptyEmployeeACAOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyEmployeeACAOperationCompleted);
            }
            this.InvokeAsync("getEmptyEmployeeACA", new object[0], this.getEmptyEmployeeACAOperationCompleted, userState);
        }
        
        private void OngetEmptyEmployeeACAOperationCompleted(object arg) {
            if ((this.getEmptyEmployeeACACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyEmployeeACACompleted(this, new getEmptyEmployeeACACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeACAByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeACA getEmployeeACAByIDNum(string IDNum) {
            object[] results = this.Invoke("getEmployeeACAByIDNum", new object[] {
                        IDNum});
            return ((TAeEmployeeACA)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeACAByIDNumAsync(string IDNum) {
            this.getEmployeeACAByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void getEmployeeACAByIDNumAsync(string IDNum, object userState) {
            if ((this.getEmployeeACAByIDNumOperationCompleted == null)) {
                this.getEmployeeACAByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeACAByIDNumOperationCompleted);
            }
            this.InvokeAsync("getEmployeeACAByIDNum", new object[] {
                        IDNum}, this.getEmployeeACAByIDNumOperationCompleted, userState);
        }
        
        private void OngetEmployeeACAByIDNumOperationCompleted(object arg) {
            if ((this.getEmployeeACAByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeACAByIDNumCompleted(this, new getEmployeeACAByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeACABySSN", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeACA getEmployeeACABySSN(string SSN) {
            object[] results = this.Invoke("getEmployeeACABySSN", new object[] {
                        SSN});
            return ((TAeEmployeeACA)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeACABySSNAsync(string SSN) {
            this.getEmployeeACABySSNAsync(SSN, null);
        }
        
        /// <remarks/>
        public void getEmployeeACABySSNAsync(string SSN, object userState) {
            if ((this.getEmployeeACABySSNOperationCompleted == null)) {
                this.getEmployeeACABySSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeACABySSNOperationCompleted);
            }
            this.InvokeAsync("getEmployeeACABySSN", new object[] {
                        SSN}, this.getEmployeeACABySSNOperationCompleted, userState);
        }
        
        private void OngetEmployeeACABySSNOperationCompleted(object arg) {
            if ((this.getEmployeeACABySSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeACABySSNCompleted(this, new getEmployeeACABySSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeACAByBadge", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeACA getEmployeeACAByBadge(int Badge) {
            object[] results = this.Invoke("getEmployeeACAByBadge", new object[] {
                        Badge});
            return ((TAeEmployeeACA)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeACAByBadgeAsync(int Badge) {
            this.getEmployeeACAByBadgeAsync(Badge, null);
        }
        
        /// <remarks/>
        public void getEmployeeACAByBadgeAsync(int Badge, object userState) {
            if ((this.getEmployeeACAByBadgeOperationCompleted == null)) {
                this.getEmployeeACAByBadgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeACAByBadgeOperationCompleted);
            }
            this.InvokeAsync("getEmployeeACAByBadge", new object[] {
                        Badge}, this.getEmployeeACAByBadgeOperationCompleted, userState);
        }
        
        private void OngetEmployeeACAByBadgeOperationCompleted(object arg) {
            if ((this.getEmployeeACAByBadgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeACAByBadgeCompleted(this, new getEmployeeACAByBadgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeACAByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeACA getEmployeeACAByFilekey(int Filekey) {
            object[] results = this.Invoke("getEmployeeACAByFilekey", new object[] {
                        Filekey});
            return ((TAeEmployeeACA)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeACAByFilekeyAsync(int Filekey) {
            this.getEmployeeACAByFilekeyAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeACAByFilekeyAsync(int Filekey, object userState) {
            if ((this.getEmployeeACAByFilekeyOperationCompleted == null)) {
                this.getEmployeeACAByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeACAByFilekeyOperationCompleted);
            }
            this.InvokeAsync("getEmployeeACAByFilekey", new object[] {
                        Filekey}, this.getEmployeeACAByFilekeyOperationCompleted, userState);
        }
        
        private void OngetEmployeeACAByFilekeyOperationCompleted(object arg) {
            if ((this.getEmployeeACAByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeACAByFilekeyCompleted(this, new getEmployeeACAByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#setEmployeeACA", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void setEmployeeACA(TAeEmployeeACA AeEmployeeACA) {
            this.Invoke("setEmployeeACA", new object[] {
                        AeEmployeeACA});
        }
        
        /// <remarks/>
        public void setEmployeeACAAsync(TAeEmployeeACA AeEmployeeACA) {
            this.setEmployeeACAAsync(AeEmployeeACA, null);
        }
        
        /// <remarks/>
        public void setEmployeeACAAsync(TAeEmployeeACA AeEmployeeACA, object userState) {
            if ((this.setEmployeeACAOperationCompleted == null)) {
                this.setEmployeeACAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmployeeACAOperationCompleted);
            }
            this.InvokeAsync("setEmployeeACA", new object[] {
                        AeEmployeeACA}, this.setEmployeeACAOperationCompleted, userState);
        }
        
        private void OnsetEmployeeACAOperationCompleted(object arg) {
            if ((this.setEmployeeACACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmployeeACACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getControlGroups", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeControlGroup[] getControlGroups() {
            object[] results = this.Invoke("getControlGroups", new object[0]);
            return ((TAeControlGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void getControlGroupsAsync() {
            this.getControlGroupsAsync(null);
        }
        
        /// <remarks/>
        public void getControlGroupsAsync(object userState) {
            if ((this.getControlGroupsOperationCompleted == null)) {
                this.getControlGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetControlGroupsOperationCompleted);
            }
            this.InvokeAsync("getControlGroups", new object[0], this.getControlGroupsOperationCompleted, userState);
        }
        
        private void OngetControlGroupsOperationCompleted(object arg) {
            if ((this.getControlGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getControlGroupsCompleted(this, new getControlGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#changeEmployeeACAFullTimeStatus", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void changeEmployeeACAFullTimeStatus(int Filekey, TAeEmpACAFullTimeStausOptions FTStatus, string PeriodBegin, string PeriodEnd, string Comments, bool NonSeqOverride) {
            this.Invoke("changeEmployeeACAFullTimeStatus", new object[] {
                        Filekey,
                        FTStatus,
                        PeriodBegin,
                        PeriodEnd,
                        Comments,
                        NonSeqOverride});
        }
        
        /// <remarks/>
        public void changeEmployeeACAFullTimeStatusAsync(int Filekey, TAeEmpACAFullTimeStausOptions FTStatus, string PeriodBegin, string PeriodEnd, string Comments, bool NonSeqOverride) {
            this.changeEmployeeACAFullTimeStatusAsync(Filekey, FTStatus, PeriodBegin, PeriodEnd, Comments, NonSeqOverride, null);
        }
        
        /// <remarks/>
        public void changeEmployeeACAFullTimeStatusAsync(int Filekey, TAeEmpACAFullTimeStausOptions FTStatus, string PeriodBegin, string PeriodEnd, string Comments, bool NonSeqOverride, object userState) {
            if ((this.changeEmployeeACAFullTimeStatusOperationCompleted == null)) {
                this.changeEmployeeACAFullTimeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeEmployeeACAFullTimeStatusOperationCompleted);
            }
            this.InvokeAsync("changeEmployeeACAFullTimeStatus", new object[] {
                        Filekey,
                        FTStatus,
                        PeriodBegin,
                        PeriodEnd,
                        Comments,
                        NonSeqOverride}, this.changeEmployeeACAFullTimeStatusOperationCompleted, userState);
        }
        
        private void OnchangeEmployeeACAFullTimeStatusOperationCompleted(object arg) {
            if ((this.changeEmployeeACAFullTimeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeEmployeeACAFullTimeStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#restartEmployeeACAPeriods", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void restartEmployeeACAPeriods(int Filekey) {
            this.Invoke("restartEmployeeACAPeriods", new object[] {
                        Filekey});
        }
        
        /// <remarks/>
        public void restartEmployeeACAPeriodsAsync(int Filekey) {
            this.restartEmployeeACAPeriodsAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void restartEmployeeACAPeriodsAsync(int Filekey, object userState) {
            if ((this.restartEmployeeACAPeriodsOperationCompleted == null)) {
                this.restartEmployeeACAPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestartEmployeeACAPeriodsOperationCompleted);
            }
            this.InvokeAsync("restartEmployeeACAPeriods", new object[] {
                        Filekey}, this.restartEmployeeACAPeriodsOperationCompleted, userState);
        }
        
        private void OnrestartEmployeeACAPeriodsOperationCompleted(object arg) {
            if ((this.restartEmployeeACAPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restartEmployeeACAPeriodsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#revertEmployeeACAAssignments", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void revertEmployeeACAAssignments(int Filekey) {
            this.Invoke("revertEmployeeACAAssignments", new object[] {
                        Filekey});
        }
        
        /// <remarks/>
        public void revertEmployeeACAAssignmentsAsync(int Filekey) {
            this.revertEmployeeACAAssignmentsAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void revertEmployeeACAAssignmentsAsync(int Filekey, object userState) {
            if ((this.revertEmployeeACAAssignmentsOperationCompleted == null)) {
                this.revertEmployeeACAAssignmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrevertEmployeeACAAssignmentsOperationCompleted);
            }
            this.InvokeAsync("revertEmployeeACAAssignments", new object[] {
                        Filekey}, this.revertEmployeeACAAssignmentsOperationCompleted, userState);
        }
        
        private void OnrevertEmployeeACAAssignmentsOperationCompleted(object arg) {
            if ((this.revertEmployeeACAAssignmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.revertEmployeeACAAssignmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getFirstDateOfACAServiceHours", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getFirstDateOfACAServiceHours(int Filekey) {
            object[] results = this.Invoke("getFirstDateOfACAServiceHours", new object[] {
                        Filekey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFirstDateOfACAServiceHoursAsync(int Filekey) {
            this.getFirstDateOfACAServiceHoursAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getFirstDateOfACAServiceHoursAsync(int Filekey, object userState) {
            if ((this.getFirstDateOfACAServiceHoursOperationCompleted == null)) {
                this.getFirstDateOfACAServiceHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFirstDateOfACAServiceHoursOperationCompleted);
            }
            this.InvokeAsync("getFirstDateOfACAServiceHours", new object[] {
                        Filekey}, this.getFirstDateOfACAServiceHoursOperationCompleted, userState);
        }
        
        private void OngetFirstDateOfACAServiceHoursOperationCompleted(object arg) {
            if ((this.getFirstDateOfACAServiceHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFirstDateOfACAServiceHoursCompleted(this, new getFirstDateOfACAServiceHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeActivityLog", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpActLog[] getEmployeeActivityLog(int Filekey, int Operation, string PeriodBegin, string PeriodEnd) {
            object[] results = this.Invoke("getEmployeeActivityLog", new object[] {
                        Filekey,
                        Operation,
                        PeriodBegin,
                        PeriodEnd});
            return ((TAeEmpActLog[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeActivityLogAsync(int Filekey, int Operation, string PeriodBegin, string PeriodEnd) {
            this.getEmployeeActivityLogAsync(Filekey, Operation, PeriodBegin, PeriodEnd, null);
        }
        
        /// <remarks/>
        public void getEmployeeActivityLogAsync(int Filekey, int Operation, string PeriodBegin, string PeriodEnd, object userState) {
            if ((this.getEmployeeActivityLogOperationCompleted == null)) {
                this.getEmployeeActivityLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeActivityLogOperationCompleted);
            }
            this.InvokeAsync("getEmployeeActivityLog", new object[] {
                        Filekey,
                        Operation,
                        PeriodBegin,
                        PeriodEnd}, this.getEmployeeActivityLogOperationCompleted, userState);
        }
        
        private void OngetEmployeeActivityLogOperationCompleted(object arg) {
            if ((this.getEmployeeActivityLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeActivityLogCompleted(this, new getEmployeeActivityLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#flushEmployeeActivityLog", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void flushEmployeeActivityLog(int Filekey, int Operation, string PeriodBegin, string PeriodEnd) {
            this.Invoke("flushEmployeeActivityLog", new object[] {
                        Filekey,
                        Operation,
                        PeriodBegin,
                        PeriodEnd});
        }
        
        /// <remarks/>
        public void flushEmployeeActivityLogAsync(int Filekey, int Operation, string PeriodBegin, string PeriodEnd) {
            this.flushEmployeeActivityLogAsync(Filekey, Operation, PeriodBegin, PeriodEnd, null);
        }
        
        /// <remarks/>
        public void flushEmployeeActivityLogAsync(int Filekey, int Operation, string PeriodBegin, string PeriodEnd, object userState) {
            if ((this.flushEmployeeActivityLogOperationCompleted == null)) {
                this.flushEmployeeActivityLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnflushEmployeeActivityLogOperationCompleted);
            }
            this.InvokeAsync("flushEmployeeActivityLog", new object[] {
                        Filekey,
                        Operation,
                        PeriodBegin,
                        PeriodEnd}, this.flushEmployeeActivityLogOperationCompleted, userState);
        }
        
        private void OnflushEmployeeActivityLogOperationCompleted(object arg) {
            if ((this.flushEmployeeActivityLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.flushEmployeeActivityLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getExpiredUnaddressedMeasurementPeriods", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeACA[] getExpiredUnaddressedMeasurementPeriods(string HyperQueryName) {
            object[] results = this.Invoke("getExpiredUnaddressedMeasurementPeriods", new object[] {
                        HyperQueryName});
            return ((TAeEmployeeACA[])(results[0]));
        }
        
        /// <remarks/>
        public void getExpiredUnaddressedMeasurementPeriodsAsync(string HyperQueryName) {
            this.getExpiredUnaddressedMeasurementPeriodsAsync(HyperQueryName, null);
        }
        
        /// <remarks/>
        public void getExpiredUnaddressedMeasurementPeriodsAsync(string HyperQueryName, object userState) {
            if ((this.getExpiredUnaddressedMeasurementPeriodsOperationCompleted == null)) {
                this.getExpiredUnaddressedMeasurementPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExpiredUnaddressedMeasurementPeriodsOperationCompleted);
            }
            this.InvokeAsync("getExpiredUnaddressedMeasurementPeriods", new object[] {
                        HyperQueryName}, this.getExpiredUnaddressedMeasurementPeriodsOperationCompleted, userState);
        }
        
        private void OngetExpiredUnaddressedMeasurementPeriodsOperationCompleted(object arg) {
            if ((this.getExpiredUnaddressedMeasurementPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExpiredUnaddressedMeasurementPeriodsCompleted(this, new getExpiredUnaddressedMeasurementPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeMeasurementPeriodRecommendation", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeACAMperiodRecommendation getEmployeeMeasurementPeriodRecommendation(int Filekey, string PeriodBegin, string PeriodEnd) {
            object[] results = this.Invoke("getEmployeeMeasurementPeriodRecommendation", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd});
            return ((TAeACAMperiodRecommendation)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeMeasurementPeriodRecommendationAsync(int Filekey, string PeriodBegin, string PeriodEnd) {
            this.getEmployeeMeasurementPeriodRecommendationAsync(Filekey, PeriodBegin, PeriodEnd, null);
        }
        
        /// <remarks/>
        public void getEmployeeMeasurementPeriodRecommendationAsync(int Filekey, string PeriodBegin, string PeriodEnd, object userState) {
            if ((this.getEmployeeMeasurementPeriodRecommendationOperationCompleted == null)) {
                this.getEmployeeMeasurementPeriodRecommendationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeMeasurementPeriodRecommendationOperationCompleted);
            }
            this.InvokeAsync("getEmployeeMeasurementPeriodRecommendation", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd}, this.getEmployeeMeasurementPeriodRecommendationOperationCompleted, userState);
        }
        
        private void OngetEmployeeMeasurementPeriodRecommendationOperationCompleted(object arg) {
            if ((this.getEmployeeMeasurementPeriodRecommendationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeMeasurementPeriodRecommendationCompleted(this, new getEmployeeMeasurementPeriodRecommendationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#CloseEmployeeMeasurementPeriod", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void CloseEmployeeMeasurementPeriod(int Filekey, string PeriodBegin, string PeriodEnd, int FTStatus, string FTStatusPeriodBegin, string Comments) {
            this.Invoke("CloseEmployeeMeasurementPeriod", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd,
                        FTStatus,
                        FTStatusPeriodBegin,
                        Comments});
        }
        
        /// <remarks/>
        public void CloseEmployeeMeasurementPeriodAsync(int Filekey, string PeriodBegin, string PeriodEnd, int FTStatus, string FTStatusPeriodBegin, string Comments) {
            this.CloseEmployeeMeasurementPeriodAsync(Filekey, PeriodBegin, PeriodEnd, FTStatus, FTStatusPeriodBegin, Comments, null);
        }
        
        /// <remarks/>
        public void CloseEmployeeMeasurementPeriodAsync(int Filekey, string PeriodBegin, string PeriodEnd, int FTStatus, string FTStatusPeriodBegin, string Comments, object userState) {
            if ((this.CloseEmployeeMeasurementPeriodOperationCompleted == null)) {
                this.CloseEmployeeMeasurementPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseEmployeeMeasurementPeriodOperationCompleted);
            }
            this.InvokeAsync("CloseEmployeeMeasurementPeriod", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd,
                        FTStatus,
                        FTStatusPeriodBegin,
                        Comments}, this.CloseEmployeeMeasurementPeriodOperationCompleted, userState);
        }
        
        private void OnCloseEmployeeMeasurementPeriodOperationCompleted(object arg) {
            if ((this.CloseEmployeeMeasurementPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseEmployeeMeasurementPeriodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#ReverseClosedEmployeeMeasurementPeriod", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void ReverseClosedEmployeeMeasurementPeriod(int Filekey, string PeriodBegin, string PeriodEnd) {
            this.Invoke("ReverseClosedEmployeeMeasurementPeriod", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd});
        }
        
        /// <remarks/>
        public void ReverseClosedEmployeeMeasurementPeriodAsync(int Filekey, string PeriodBegin, string PeriodEnd) {
            this.ReverseClosedEmployeeMeasurementPeriodAsync(Filekey, PeriodBegin, PeriodEnd, null);
        }
        
        /// <remarks/>
        public void ReverseClosedEmployeeMeasurementPeriodAsync(int Filekey, string PeriodBegin, string PeriodEnd, object userState) {
            if ((this.ReverseClosedEmployeeMeasurementPeriodOperationCompleted == null)) {
                this.ReverseClosedEmployeeMeasurementPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseClosedEmployeeMeasurementPeriodOperationCompleted);
            }
            this.InvokeAsync("ReverseClosedEmployeeMeasurementPeriod", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd}, this.ReverseClosedEmployeeMeasurementPeriodOperationCompleted, userState);
        }
        
        private void OnReverseClosedEmployeeMeasurementPeriodOperationCompleted(object arg) {
            if ((this.ReverseClosedEmployeeMeasurementPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseClosedEmployeeMeasurementPeriodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeACADateRange", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeDateRange getEmployeeACADateRange(int Filekey, TDateRangeEnum DateRangeEnum) {
            object[] results = this.Invoke("getEmployeeACADateRange", new object[] {
                        Filekey,
                        DateRangeEnum});
            return ((TAeDateRange)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeACADateRangeAsync(int Filekey, TDateRangeEnum DateRangeEnum) {
            this.getEmployeeACADateRangeAsync(Filekey, DateRangeEnum, null);
        }
        
        /// <remarks/>
        public void getEmployeeACADateRangeAsync(int Filekey, TDateRangeEnum DateRangeEnum, object userState) {
            if ((this.getEmployeeACADateRangeOperationCompleted == null)) {
                this.getEmployeeACADateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeACADateRangeOperationCompleted);
            }
            this.InvokeAsync("getEmployeeACADateRange", new object[] {
                        Filekey,
                        DateRangeEnum}, this.getEmployeeACADateRangeOperationCompleted, userState);
        }
        
        private void OngetEmployeeACADateRangeOperationCompleted(object arg) {
            if ((this.getEmployeeACADateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeACADateRangeCompleted(this, new getEmployeeACADateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getClosedEmployeeMeasurementPeriods", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpClosedMeasurementPeriod[] getClosedEmployeeMeasurementPeriods(int Filekey, string PeriodBegin, string PeriodEnd) {
            object[] results = this.Invoke("getClosedEmployeeMeasurementPeriods", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd});
            return ((TAeEmpClosedMeasurementPeriod[])(results[0]));
        }
        
        /// <remarks/>
        public void getClosedEmployeeMeasurementPeriodsAsync(int Filekey, string PeriodBegin, string PeriodEnd) {
            this.getClosedEmployeeMeasurementPeriodsAsync(Filekey, PeriodBegin, PeriodEnd, null);
        }
        
        /// <remarks/>
        public void getClosedEmployeeMeasurementPeriodsAsync(int Filekey, string PeriodBegin, string PeriodEnd, object userState) {
            if ((this.getClosedEmployeeMeasurementPeriodsOperationCompleted == null)) {
                this.getClosedEmployeeMeasurementPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClosedEmployeeMeasurementPeriodsOperationCompleted);
            }
            this.InvokeAsync("getClosedEmployeeMeasurementPeriods", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd}, this.getClosedEmployeeMeasurementPeriodsOperationCompleted, userState);
        }
        
        private void OngetClosedEmployeeMeasurementPeriodsOperationCompleted(object arg) {
            if ((this.getClosedEmployeeMeasurementPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClosedEmployeeMeasurementPeriodsCompleted(this, new getClosedEmployeeMeasurementPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeACAPeriods", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpACAPeriod[] getEmployeeACAPeriods(int Filekey, string PeriodBegin, string PeriodEnd) {
            object[] results = this.Invoke("getEmployeeACAPeriods", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd});
            return ((TAeEmpACAPeriod[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeACAPeriodsAsync(int Filekey, string PeriodBegin, string PeriodEnd) {
            this.getEmployeeACAPeriodsAsync(Filekey, PeriodBegin, PeriodEnd, null);
        }
        
        /// <remarks/>
        public void getEmployeeACAPeriodsAsync(int Filekey, string PeriodBegin, string PeriodEnd, object userState) {
            if ((this.getEmployeeACAPeriodsOperationCompleted == null)) {
                this.getEmployeeACAPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeACAPeriodsOperationCompleted);
            }
            this.InvokeAsync("getEmployeeACAPeriods", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd}, this.getEmployeeACAPeriodsOperationCompleted, userState);
        }
        
        private void OngetEmployeeACAPeriodsOperationCompleted(object arg) {
            if ((this.getEmployeeACAPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeACAPeriodsCompleted(this, new getEmployeeACAPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeMeasurementPeriodWasClosed", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool getEmployeeMeasurementPeriodWasClosed(int Filekey, string PeriodBegin, string PeriodEnd) {
            object[] results = this.Invoke("getEmployeeMeasurementPeriodWasClosed", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeMeasurementPeriodWasClosedAsync(int Filekey, string PeriodBegin, string PeriodEnd) {
            this.getEmployeeMeasurementPeriodWasClosedAsync(Filekey, PeriodBegin, PeriodEnd, null);
        }
        
        /// <remarks/>
        public void getEmployeeMeasurementPeriodWasClosedAsync(int Filekey, string PeriodBegin, string PeriodEnd, object userState) {
            if ((this.getEmployeeMeasurementPeriodWasClosedOperationCompleted == null)) {
                this.getEmployeeMeasurementPeriodWasClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeMeasurementPeriodWasClosedOperationCompleted);
            }
            this.InvokeAsync("getEmployeeMeasurementPeriodWasClosed", new object[] {
                        Filekey,
                        PeriodBegin,
                        PeriodEnd}, this.getEmployeeMeasurementPeriodWasClosedOperationCompleted, userState);
        }
        
        private void OngetEmployeeMeasurementPeriodWasClosedOperationCompleted(object arg) {
            if ((this.getEmployeeMeasurementPeriodWasClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeMeasurementPeriodWasClosedCompleted(this, new getEmployeeMeasurementPeriodWasClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmployeeEarliestStabilityPeriodStart", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getEmployeeEarliestStabilityPeriodStart(int Filekey) {
            object[] results = this.Invoke("getEmployeeEarliestStabilityPeriodStart", new object[] {
                        Filekey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeEarliestStabilityPeriodStartAsync(int Filekey) {
            this.getEmployeeEarliestStabilityPeriodStartAsync(Filekey, null);
        }
        
        /// <remarks/>
        public void getEmployeeEarliestStabilityPeriodStartAsync(int Filekey, object userState) {
            if ((this.getEmployeeEarliestStabilityPeriodStartOperationCompleted == null)) {
                this.getEmployeeEarliestStabilityPeriodStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeEarliestStabilityPeriodStartOperationCompleted);
            }
            this.InvokeAsync("getEmployeeEarliestStabilityPeriodStart", new object[] {
                        Filekey}, this.getEmployeeEarliestStabilityPeriodStartOperationCompleted, userState);
        }
        
        private void OngetEmployeeEarliestStabilityPeriodStartOperationCompleted(object arg) {
            if ((this.getEmployeeEarliestStabilityPeriodStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeEarliestStabilityPeriodStartCompleted(this, new getEmployeeEarliestStabilityPeriodStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmpESSPreAuthLoginURL", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getEmpESSPreAuthLoginURL(TAeESSPreAuthPackage AeESSPreAuthPackage) {
            object[] results = this.Invoke("getEmpESSPreAuthLoginURL", new object[] {
                        AeESSPreAuthPackage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmpESSPreAuthLoginURLAsync(TAeESSPreAuthPackage AeESSPreAuthPackage) {
            this.getEmpESSPreAuthLoginURLAsync(AeESSPreAuthPackage, null);
        }
        
        /// <remarks/>
        public void getEmpESSPreAuthLoginURLAsync(TAeESSPreAuthPackage AeESSPreAuthPackage, object userState) {
            if ((this.getEmpESSPreAuthLoginURLOperationCompleted == null)) {
                this.getEmpESSPreAuthLoginURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmpESSPreAuthLoginURLOperationCompleted);
            }
            this.InvokeAsync("getEmpESSPreAuthLoginURL", new object[] {
                        AeESSPreAuthPackage}, this.getEmpESSPreAuthLoginURLOperationCompleted, userState);
        }
        
        private void OngetEmpESSPreAuthLoginURLOperationCompleted(object arg) {
            if ((this.getEmpESSPreAuthLoginURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmpESSPreAuthLoginURLCompleted(this, new getEmpESSPreAuthLoginURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeEmployeeRateHistoryEntry", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeEmployeeRateHistoryEntry(int UniqueID) {
            this.Invoke("removeEmployeeRateHistoryEntry", new object[] {
                        UniqueID});
        }
        
        /// <remarks/>
        public void removeEmployeeRateHistoryEntryAsync(int UniqueID) {
            this.removeEmployeeRateHistoryEntryAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void removeEmployeeRateHistoryEntryAsync(int UniqueID, object userState) {
            if ((this.removeEmployeeRateHistoryEntryOperationCompleted == null)) {
                this.removeEmployeeRateHistoryEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmployeeRateHistoryEntryOperationCompleted);
            }
            this.InvokeAsync("removeEmployeeRateHistoryEntry", new object[] {
                        UniqueID}, this.removeEmployeeRateHistoryEntryOperationCompleted, userState);
        }
        
        private void OnremoveEmployeeRateHistoryEntryOperationCompleted(object arg) {
            if ((this.removeEmployeeRateHistoryEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmployeeRateHistoryEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#maintainPayrollEmployee", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string maintainPayrollEmployee(TAePayrollEmployee AePayrollEmployee) {
            object[] results = this.Invoke("maintainPayrollEmployee", new object[] {
                        AePayrollEmployee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void maintainPayrollEmployeeAsync(TAePayrollEmployee AePayrollEmployee) {
            this.maintainPayrollEmployeeAsync(AePayrollEmployee, null);
        }
        
        /// <remarks/>
        public void maintainPayrollEmployeeAsync(TAePayrollEmployee AePayrollEmployee, object userState) {
            if ((this.maintainPayrollEmployeeOperationCompleted == null)) {
                this.maintainPayrollEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaintainPayrollEmployeeOperationCompleted);
            }
            this.InvokeAsync("maintainPayrollEmployee", new object[] {
                        AePayrollEmployee}, this.maintainPayrollEmployeeOperationCompleted, userState);
        }
        
        private void OnmaintainPayrollEmployeeOperationCompleted(object arg) {
            if ((this.maintainPayrollEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maintainPayrollEmployeeCompleted(this, new maintainPayrollEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#submitPayrollEmployees", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string submitPayrollEmployees(TAePayrollEmployee[] AePayrollEmployees) {
            object[] results = this.Invoke("submitPayrollEmployees", new object[] {
                        AePayrollEmployees});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitPayrollEmployeesAsync(TAePayrollEmployee[] AePayrollEmployees) {
            this.submitPayrollEmployeesAsync(AePayrollEmployees, null);
        }
        
        /// <remarks/>
        public void submitPayrollEmployeesAsync(TAePayrollEmployee[] AePayrollEmployees, object userState) {
            if ((this.submitPayrollEmployeesOperationCompleted == null)) {
                this.submitPayrollEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitPayrollEmployeesOperationCompleted);
            }
            this.InvokeAsync("submitPayrollEmployees", new object[] {
                        AePayrollEmployees}, this.submitPayrollEmployeesOperationCompleted, userState);
        }
        
        private void OnsubmitPayrollEmployeesOperationCompleted(object arg) {
            if ((this.submitPayrollEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitPayrollEmployeesCompleted(this, new submitPayrollEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractImportLogsFromImportEvent", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeImportLogItem[] extractImportLogsFromImportEvent(string GUID) {
            object[] results = this.Invoke("extractImportLogsFromImportEvent", new object[] {
                        GUID});
            return ((TAeImportLogItem[])(results[0]));
        }
        
        /// <remarks/>
        public void extractImportLogsFromImportEventAsync(string GUID) {
            this.extractImportLogsFromImportEventAsync(GUID, null);
        }
        
        /// <remarks/>
        public void extractImportLogsFromImportEventAsync(string GUID, object userState) {
            if ((this.extractImportLogsFromImportEventOperationCompleted == null)) {
                this.extractImportLogsFromImportEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractImportLogsFromImportEventOperationCompleted);
            }
            this.InvokeAsync("extractImportLogsFromImportEvent", new object[] {
                        GUID}, this.extractImportLogsFromImportEventOperationCompleted, userState);
        }
        
        private void OnextractImportLogsFromImportEventOperationCompleted(object arg) {
            if ((this.extractImportLogsFromImportEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractImportLogsFromImportEventCompleted(this, new extractImportLogsFromImportEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getEmptyPayrollEmployee", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayrollEmployee getEmptyPayrollEmployee() {
            object[] results = this.Invoke("getEmptyPayrollEmployee", new object[0]);
            return ((TAePayrollEmployee)(results[0]));
        }
        
        /// <remarks/>
        public void getEmptyPayrollEmployeeAsync() {
            this.getEmptyPayrollEmployeeAsync(null);
        }
        
        /// <remarks/>
        public void getEmptyPayrollEmployeeAsync(object userState) {
            if ((this.getEmptyPayrollEmployeeOperationCompleted == null)) {
                this.getEmptyPayrollEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmptyPayrollEmployeeOperationCompleted);
            }
            this.InvokeAsync("getEmptyPayrollEmployee", new object[0], this.getEmptyPayrollEmployeeOperationCompleted, userState);
        }
        
        private void OngetEmptyPayrollEmployeeOperationCompleted(object arg) {
            if ((this.getEmptyPayrollEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmptyPayrollEmployeeCompleted(this, new getEmptyPayrollEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getPayrollEmployee", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAePayrollEmployee getPayrollEmployee(string EmpID) {
            object[] results = this.Invoke("getPayrollEmployee", new object[] {
                        EmpID});
            return ((TAePayrollEmployee)(results[0]));
        }
        
        /// <remarks/>
        public void getPayrollEmployeeAsync(string EmpID) {
            this.getPayrollEmployeeAsync(EmpID, null);
        }
        
        /// <remarks/>
        public void getPayrollEmployeeAsync(string EmpID, object userState) {
            if ((this.getPayrollEmployeeOperationCompleted == null)) {
                this.getPayrollEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPayrollEmployeeOperationCompleted);
            }
            this.InvokeAsync("getPayrollEmployee", new object[] {
                        EmpID}, this.getPayrollEmployeeOperationCompleted, userState);
        }
        
        private void OngetPayrollEmployeeOperationCompleted(object arg) {
            if ((this.getPayrollEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPayrollEmployeeCompleted(this, new getPayrollEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractNewDBElements", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeNewDBElement[] extractNewDBElements(int ElementState) {
            object[] results = this.Invoke("extractNewDBElements", new object[] {
                        ElementState});
            return ((TAeNewDBElement[])(results[0]));
        }
        
        /// <remarks/>
        public void extractNewDBElementsAsync(int ElementState) {
            this.extractNewDBElementsAsync(ElementState, null);
        }
        
        /// <remarks/>
        public void extractNewDBElementsAsync(int ElementState, object userState) {
            if ((this.extractNewDBElementsOperationCompleted == null)) {
                this.extractNewDBElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractNewDBElementsOperationCompleted);
            }
            this.InvokeAsync("extractNewDBElements", new object[] {
                        ElementState}, this.extractNewDBElementsOperationCompleted, userState);
        }
        
        private void OnextractNewDBElementsOperationCompleted(object arg) {
            if ((this.extractNewDBElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractNewDBElementsCompleted(this, new extractNewDBElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#updateNewDBElement", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void updateNewDBElement(TAeNewDBElement AeNewDBElement) {
            this.Invoke("updateNewDBElement", new object[] {
                        AeNewDBElement});
        }
        
        /// <remarks/>
        public void updateNewDBElementAsync(TAeNewDBElement AeNewDBElement) {
            this.updateNewDBElementAsync(AeNewDBElement, null);
        }
        
        /// <remarks/>
        public void updateNewDBElementAsync(TAeNewDBElement AeNewDBElement, object userState) {
            if ((this.updateNewDBElementOperationCompleted == null)) {
                this.updateNewDBElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateNewDBElementOperationCompleted);
            }
            this.InvokeAsync("updateNewDBElement", new object[] {
                        AeNewDBElement}, this.updateNewDBElementOperationCompleted, userState);
        }
        
        private void OnupdateNewDBElementOperationCompleted(object arg) {
            if ((this.updateNewDBElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateNewDBElementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractDeptXlateItems", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeDeptXLateItem[] extractDeptXlateItems(string Alias) {
            object[] results = this.Invoke("extractDeptXlateItems", new object[] {
                        Alias});
            return ((TAeDeptXLateItem[])(results[0]));
        }
        
        /// <remarks/>
        public void extractDeptXlateItemsAsync(string Alias) {
            this.extractDeptXlateItemsAsync(Alias, null);
        }
        
        /// <remarks/>
        public void extractDeptXlateItemsAsync(string Alias, object userState) {
            if ((this.extractDeptXlateItemsOperationCompleted == null)) {
                this.extractDeptXlateItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractDeptXlateItemsOperationCompleted);
            }
            this.InvokeAsync("extractDeptXlateItems", new object[] {
                        Alias}, this.extractDeptXlateItemsOperationCompleted, userState);
        }
        
        private void OnextractDeptXlateItemsOperationCompleted(object arg) {
            if ((this.extractDeptXlateItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractDeptXlateItemsCompleted(this, new extractDeptXlateItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#updateDeptXlateItem", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void updateDeptXlateItem(TAeDeptXLateItem AeDeptXLateItem) {
            this.Invoke("updateDeptXlateItem", new object[] {
                        AeDeptXLateItem});
        }
        
        /// <remarks/>
        public void updateDeptXlateItemAsync(TAeDeptXLateItem AeDeptXLateItem) {
            this.updateDeptXlateItemAsync(AeDeptXLateItem, null);
        }
        
        /// <remarks/>
        public void updateDeptXlateItemAsync(TAeDeptXLateItem AeDeptXLateItem, object userState) {
            if ((this.updateDeptXlateItemOperationCompleted == null)) {
                this.updateDeptXlateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDeptXlateItemOperationCompleted);
            }
            this.InvokeAsync("updateDeptXlateItem", new object[] {
                        AeDeptXLateItem}, this.updateDeptXlateItemOperationCompleted, userState);
        }
        
        private void OnupdateDeptXlateItemOperationCompleted(object arg) {
            if ((this.updateDeptXlateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDeptXlateItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#addDeptXlateItem", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void addDeptXlateItem(TAeDeptXLateItem AeDeptXLateItem) {
            this.Invoke("addDeptXlateItem", new object[] {
                        AeDeptXLateItem});
        }
        
        /// <remarks/>
        public void addDeptXlateItemAsync(TAeDeptXLateItem AeDeptXLateItem) {
            this.addDeptXlateItemAsync(AeDeptXLateItem, null);
        }
        
        /// <remarks/>
        public void addDeptXlateItemAsync(TAeDeptXLateItem AeDeptXLateItem, object userState) {
            if ((this.addDeptXlateItemOperationCompleted == null)) {
                this.addDeptXlateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDeptXlateItemOperationCompleted);
            }
            this.InvokeAsync("addDeptXlateItem", new object[] {
                        AeDeptXLateItem}, this.addDeptXlateItemOperationCompleted, userState);
        }
        
        private void OnaddDeptXlateItemOperationCompleted(object arg) {
            if ((this.addDeptXlateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDeptXlateItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#removeDeptXlateItem", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void removeDeptXlateItem(int UniqueID) {
            this.Invoke("removeDeptXlateItem", new object[] {
                        UniqueID});
        }
        
        /// <remarks/>
        public void removeDeptXlateItemAsync(int UniqueID) {
            this.removeDeptXlateItemAsync(UniqueID, null);
        }
        
        /// <remarks/>
        public void removeDeptXlateItemAsync(int UniqueID, object userState) {
            if ((this.removeDeptXlateItemOperationCompleted == null)) {
                this.removeDeptXlateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDeptXlateItemOperationCompleted);
            }
            this.InvokeAsync("removeDeptXlateItem", new object[] {
                        UniqueID}, this.removeDeptXlateItemOperationCompleted, userState);
        }
        
        private void OnremoveDeptXlateItemOperationCompleted(object arg) {
            if ((this.removeDeptXlateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDeptXlateItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractACALEDSummaries", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeACALEDMonthSumm[] extractACALEDSummaries(int Year, int ControlGroupID) {
            object[] results = this.Invoke("extractACALEDSummaries", new object[] {
                        Year,
                        ControlGroupID});
            return ((TAeACALEDMonthSumm[])(results[0]));
        }
        
        /// <remarks/>
        public void extractACALEDSummariesAsync(int Year, int ControlGroupID) {
            this.extractACALEDSummariesAsync(Year, ControlGroupID, null);
        }
        
        /// <remarks/>
        public void extractACALEDSummariesAsync(int Year, int ControlGroupID, object userState) {
            if ((this.extractACALEDSummariesOperationCompleted == null)) {
                this.extractACALEDSummariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractACALEDSummariesOperationCompleted);
            }
            this.InvokeAsync("extractACALEDSummaries", new object[] {
                        Year,
                        ControlGroupID}, this.extractACALEDSummariesOperationCompleted, userState);
        }
        
        private void OnextractACALEDSummariesOperationCompleted(object arg) {
            if ((this.extractACALEDSummariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractACALEDSummariesCompleted(this, new extractACALEDSummariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractACAEmployeesFTStatusAsOf", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeACA[] extractACAEmployeesFTStatusAsOf(string RefDate) {
            object[] results = this.Invoke("extractACAEmployeesFTStatusAsOf", new object[] {
                        RefDate});
            return ((TAeEmployeeACA[])(results[0]));
        }
        
        /// <remarks/>
        public void extractACAEmployeesFTStatusAsOfAsync(string RefDate) {
            this.extractACAEmployeesFTStatusAsOfAsync(RefDate, null);
        }
        
        /// <remarks/>
        public void extractACAEmployeesFTStatusAsOfAsync(string RefDate, object userState) {
            if ((this.extractACAEmployeesFTStatusAsOfOperationCompleted == null)) {
                this.extractACAEmployeesFTStatusAsOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractACAEmployeesFTStatusAsOfOperationCompleted);
            }
            this.InvokeAsync("extractACAEmployeesFTStatusAsOf", new object[] {
                        RefDate}, this.extractACAEmployeesFTStatusAsOfOperationCompleted, userState);
        }
        
        private void OnextractACAEmployeesFTStatusAsOfOperationCompleted(object arg) {
            if ((this.extractACAEmployeesFTStatusAsOfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractACAEmployeesFTStatusAsOfCompleted(this, new extractACAEmployeesFTStatusAsOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#submitEmployeeEarnings", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string submitEmployeeEarnings(string IDNum, string PayPeriodStartDate, string PayPeriodEndDate, TAePayrollEarning[] AePayrollEarnings) {
            object[] results = this.Invoke("submitEmployeeEarnings", new object[] {
                        IDNum,
                        PayPeriodStartDate,
                        PayPeriodEndDate,
                        AePayrollEarnings});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitEmployeeEarningsAsync(string IDNum, string PayPeriodStartDate, string PayPeriodEndDate, TAePayrollEarning[] AePayrollEarnings) {
            this.submitEmployeeEarningsAsync(IDNum, PayPeriodStartDate, PayPeriodEndDate, AePayrollEarnings, null);
        }
        
        /// <remarks/>
        public void submitEmployeeEarningsAsync(string IDNum, string PayPeriodStartDate, string PayPeriodEndDate, TAePayrollEarning[] AePayrollEarnings, object userState) {
            if ((this.submitEmployeeEarningsOperationCompleted == null)) {
                this.submitEmployeeEarningsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitEmployeeEarningsOperationCompleted);
            }
            this.InvokeAsync("submitEmployeeEarnings", new object[] {
                        IDNum,
                        PayPeriodStartDate,
                        PayPeriodEndDate,
                        AePayrollEarnings}, this.submitEmployeeEarningsOperationCompleted, userState);
        }
        
        private void OnsubmitEmployeeEarningsOperationCompleted(object arg) {
            if ((this.submitEmployeeEarningsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitEmployeeEarningsCompleted(this, new submitEmployeeEarningsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeGeoPunchByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeGeoPunchByIDNum(string IDNum, string TimeStamp, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.Invoke("appendEmployeeGeoPunchByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude});
        }
        
        /// <remarks/>
        public void appendEmployeeGeoPunchByIDNumAsync(string IDNum, string TimeStamp, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.appendEmployeeGeoPunchByIDNumAsync(IDNum, TimeStamp, Station, TransType, GPSCoordsEnum, Latitude, Longitude, Accuracy, Altitude, null);
        }
        
        /// <remarks/>
        public void appendEmployeeGeoPunchByIDNumAsync(string IDNum, string TimeStamp, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude, object userState) {
            if ((this.appendEmployeeGeoPunchByIDNumOperationCompleted == null)) {
                this.appendEmployeeGeoPunchByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeGeoPunchByIDNumOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeGeoPunchByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude}, this.appendEmployeeGeoPunchByIDNumOperationCompleted, userState);
        }
        
        private void OnappendEmployeeGeoPunchByIDNumOperationCompleted(object arg) {
            if ((this.appendEmployeeGeoPunchByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeGeoPunchByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#appendEmployeeGeoPunchByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void appendEmployeeGeoPunchByFilekey(int Filekey, string TimeStamp, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.Invoke("appendEmployeeGeoPunchByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude});
        }
        
        /// <remarks/>
        public void appendEmployeeGeoPunchByFilekeyAsync(int Filekey, string TimeStamp, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.appendEmployeeGeoPunchByFilekeyAsync(Filekey, TimeStamp, Station, TransType, GPSCoordsEnum, Latitude, Longitude, Accuracy, Altitude, null);
        }
        
        /// <remarks/>
        public void appendEmployeeGeoPunchByFilekeyAsync(int Filekey, string TimeStamp, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude, object userState) {
            if ((this.appendEmployeeGeoPunchByFilekeyOperationCompleted == null)) {
                this.appendEmployeeGeoPunchByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendEmployeeGeoPunchByFilekeyOperationCompleted);
            }
            this.InvokeAsync("appendEmployeeGeoPunchByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude}, this.appendEmployeeGeoPunchByFilekeyOperationCompleted, userState);
        }
        
        private void OnappendEmployeeGeoPunchByFilekeyOperationCompleted(object arg) {
            if ((this.appendEmployeeGeoPunchByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendEmployeeGeoPunchByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#punchEmployeeGeoNowByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void punchEmployeeGeoNowByFilekey(int Filekey, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.Invoke("punchEmployeeGeoNowByFilekey", new object[] {
                        Filekey,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude});
        }
        
        /// <remarks/>
        public void punchEmployeeGeoNowByFilekeyAsync(int Filekey, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.punchEmployeeGeoNowByFilekeyAsync(Filekey, Station, TransType, GPSCoordsEnum, Latitude, Longitude, Accuracy, Altitude, null);
        }
        
        /// <remarks/>
        public void punchEmployeeGeoNowByFilekeyAsync(int Filekey, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude, object userState) {
            if ((this.punchEmployeeGeoNowByFilekeyOperationCompleted == null)) {
                this.punchEmployeeGeoNowByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpunchEmployeeGeoNowByFilekeyOperationCompleted);
            }
            this.InvokeAsync("punchEmployeeGeoNowByFilekey", new object[] {
                        Filekey,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude}, this.punchEmployeeGeoNowByFilekeyOperationCompleted, userState);
        }
        
        private void OnpunchEmployeeGeoNowByFilekeyOperationCompleted(object arg) {
            if ((this.punchEmployeeGeoNowByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.punchEmployeeGeoNowByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#punchEmployeeGeoNowByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void punchEmployeeGeoNowByIDNum(string IDNum, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.Invoke("punchEmployeeGeoNowByIDNum", new object[] {
                        IDNum,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude});
        }
        
        /// <remarks/>
        public void punchEmployeeGeoNowByIDNumAsync(string IDNum, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.punchEmployeeGeoNowByIDNumAsync(IDNum, Station, TransType, GPSCoordsEnum, Latitude, Longitude, Accuracy, Altitude, null);
        }
        
        /// <remarks/>
        public void punchEmployeeGeoNowByIDNumAsync(string IDNum, int Station, int TransType, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude, object userState) {
            if ((this.punchEmployeeGeoNowByIDNumOperationCompleted == null)) {
                this.punchEmployeeGeoNowByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpunchEmployeeGeoNowByIDNumOperationCompleted);
            }
            this.InvokeAsync("punchEmployeeGeoNowByIDNum", new object[] {
                        IDNum,
                        Station,
                        TransType,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude}, this.punchEmployeeGeoNowByIDNumOperationCompleted, userState);
        }
        
        private void OnpunchEmployeeGeoNowByIDNumOperationCompleted(object arg) {
            if ((this.punchEmployeeGeoNowByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.punchEmployeeGeoNowByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#registerEmployeeGPSPresenceByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void registerEmployeeGPSPresenceByFilekey(int Filekey, string TimeStamp, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.Invoke("registerEmployeeGPSPresenceByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude});
        }
        
        /// <remarks/>
        public void registerEmployeeGPSPresenceByFilekeyAsync(int Filekey, string TimeStamp, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.registerEmployeeGPSPresenceByFilekeyAsync(Filekey, TimeStamp, GPSCoordsEnum, Latitude, Longitude, Accuracy, Altitude, null);
        }
        
        /// <remarks/>
        public void registerEmployeeGPSPresenceByFilekeyAsync(int Filekey, string TimeStamp, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude, object userState) {
            if ((this.registerEmployeeGPSPresenceByFilekeyOperationCompleted == null)) {
                this.registerEmployeeGPSPresenceByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterEmployeeGPSPresenceByFilekeyOperationCompleted);
            }
            this.InvokeAsync("registerEmployeeGPSPresenceByFilekey", new object[] {
                        Filekey,
                        TimeStamp,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude}, this.registerEmployeeGPSPresenceByFilekeyOperationCompleted, userState);
        }
        
        private void OnregisterEmployeeGPSPresenceByFilekeyOperationCompleted(object arg) {
            if ((this.registerEmployeeGPSPresenceByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerEmployeeGPSPresenceByFilekeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#registerEmployeeGPSPresenceByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void registerEmployeeGPSPresenceByIDNum(string IDNum, string TimeStamp, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.Invoke("registerEmployeeGPSPresenceByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude});
        }
        
        /// <remarks/>
        public void registerEmployeeGPSPresenceByIDNumAsync(string IDNum, string TimeStamp, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude) {
            this.registerEmployeeGPSPresenceByIDNumAsync(IDNum, TimeStamp, GPSCoordsEnum, Latitude, Longitude, Accuracy, Altitude, null);
        }
        
        /// <remarks/>
        public void registerEmployeeGPSPresenceByIDNumAsync(string IDNum, string TimeStamp, TGPSCoordsEnum GPSCoordsEnum, double Latitude, double Longitude, double Accuracy, double Altitude, object userState) {
            if ((this.registerEmployeeGPSPresenceByIDNumOperationCompleted == null)) {
                this.registerEmployeeGPSPresenceByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterEmployeeGPSPresenceByIDNumOperationCompleted);
            }
            this.InvokeAsync("registerEmployeeGPSPresenceByIDNum", new object[] {
                        IDNum,
                        TimeStamp,
                        GPSCoordsEnum,
                        Latitude,
                        Longitude,
                        Accuracy,
                        Altitude}, this.registerEmployeeGPSPresenceByIDNumOperationCompleted, userState);
        }
        
        private void OnregisterEmployeeGPSPresenceByIDNumOperationCompleted(object arg) {
            if ((this.registerEmployeeGPSPresenceByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerEmployeeGPSPresenceByIDNumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeGPSRegistrationsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpGeoRegistration[] extractEmployeeGPSRegistrationsByIDNum(string IDNum, string FromDateTime, string ToDateTime) {
            object[] results = this.Invoke("extractEmployeeGPSRegistrationsByIDNum", new object[] {
                        IDNum,
                        FromDateTime,
                        ToDateTime});
            return ((TAeEmpGeoRegistration[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeGPSRegistrationsByIDNumAsync(string IDNum, string FromDateTime, string ToDateTime) {
            this.extractEmployeeGPSRegistrationsByIDNumAsync(IDNum, FromDateTime, ToDateTime, null);
        }
        
        /// <remarks/>
        public void extractEmployeeGPSRegistrationsByIDNumAsync(string IDNum, string FromDateTime, string ToDateTime, object userState) {
            if ((this.extractEmployeeGPSRegistrationsByIDNumOperationCompleted == null)) {
                this.extractEmployeeGPSRegistrationsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeGPSRegistrationsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeGPSRegistrationsByIDNum", new object[] {
                        IDNum,
                        FromDateTime,
                        ToDateTime}, this.extractEmployeeGPSRegistrationsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeGPSRegistrationsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeGPSRegistrationsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeGPSRegistrationsByIDNumCompleted(this, new extractEmployeeGPSRegistrationsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeGPSRegistrationsByFilekey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpGeoRegistration[] extractEmployeeGPSRegistrationsByFilekey(int Filekey, string FromDateTime, string ToDateTime) {
            object[] results = this.Invoke("extractEmployeeGPSRegistrationsByFilekey", new object[] {
                        Filekey,
                        FromDateTime,
                        ToDateTime});
            return ((TAeEmpGeoRegistration[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeGPSRegistrationsByFilekeyAsync(int Filekey, string FromDateTime, string ToDateTime) {
            this.extractEmployeeGPSRegistrationsByFilekeyAsync(Filekey, FromDateTime, ToDateTime, null);
        }
        
        /// <remarks/>
        public void extractEmployeeGPSRegistrationsByFilekeyAsync(int Filekey, string FromDateTime, string ToDateTime, object userState) {
            if ((this.extractEmployeeGPSRegistrationsByFilekeyOperationCompleted == null)) {
                this.extractEmployeeGPSRegistrationsByFilekeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeGPSRegistrationsByFilekeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeGPSRegistrationsByFilekey", new object[] {
                        Filekey,
                        FromDateTime,
                        ToDateTime}, this.extractEmployeeGPSRegistrationsByFilekeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeGPSRegistrationsByFilekeyOperationCompleted(object arg) {
            if ((this.extractEmployeeGPSRegistrationsByFilekeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeGPSRegistrationsByFilekeyCompleted(this, new extractEmployeeGPSRegistrationsByFilekeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSelfServiceOperationsByFileKey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeSelfServiceOperation[] extractEmployeeSelfServiceOperationsByFileKey(int FileKey) {
            object[] results = this.Invoke("extractEmployeeSelfServiceOperationsByFileKey", new object[] {
                        FileKey});
            return ((TAeEmployeeSelfServiceOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSelfServiceOperationsByFileKeyAsync(int FileKey) {
            this.extractEmployeeSelfServiceOperationsByFileKeyAsync(FileKey, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSelfServiceOperationsByFileKeyAsync(int FileKey, object userState) {
            if ((this.extractEmployeeSelfServiceOperationsByFileKeyOperationCompleted == null)) {
                this.extractEmployeeSelfServiceOperationsByFileKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSelfServiceOperationsByFileKeyOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSelfServiceOperationsByFileKey", new object[] {
                        FileKey}, this.extractEmployeeSelfServiceOperationsByFileKeyOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSelfServiceOperationsByFileKeyOperationCompleted(object arg) {
            if ((this.extractEmployeeSelfServiceOperationsByFileKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSelfServiceOperationsByFileKeyCompleted(this, new extractEmployeeSelfServiceOperationsByFileKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#extractEmployeeSelfServiceOperationsByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmployeeSelfServiceOperation[] extractEmployeeSelfServiceOperationsByIDNum(string IDNum) {
            object[] results = this.Invoke("extractEmployeeSelfServiceOperationsByIDNum", new object[] {
                        IDNum});
            return ((TAeEmployeeSelfServiceOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void extractEmployeeSelfServiceOperationsByIDNumAsync(string IDNum) {
            this.extractEmployeeSelfServiceOperationsByIDNumAsync(IDNum, null);
        }
        
        /// <remarks/>
        public void extractEmployeeSelfServiceOperationsByIDNumAsync(string IDNum, object userState) {
            if ((this.extractEmployeeSelfServiceOperationsByIDNumOperationCompleted == null)) {
                this.extractEmployeeSelfServiceOperationsByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractEmployeeSelfServiceOperationsByIDNumOperationCompleted);
            }
            this.InvokeAsync("extractEmployeeSelfServiceOperationsByIDNum", new object[] {
                        IDNum}, this.extractEmployeeSelfServiceOperationsByIDNumOperationCompleted, userState);
        }
        
        private void OnextractEmployeeSelfServiceOperationsByIDNumOperationCompleted(object arg) {
            if ((this.extractEmployeeSelfServiceOperationsByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractEmployeeSelfServiceOperationsByIDNumCompleted(this, new extractEmployeeSelfServiceOperationsByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#employeeQuickBalanceAsOfByFileKey", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpBenefitBalanceDate employeeQuickBalanceAsOfByFileKey(int Filekey, int BenefitID, string SelDate) {
            object[] results = this.Invoke("employeeQuickBalanceAsOfByFileKey", new object[] {
                        Filekey,
                        BenefitID,
                        SelDate});
            return ((TAeEmpBenefitBalanceDate)(results[0]));
        }
        
        /// <remarks/>
        public void employeeQuickBalanceAsOfByFileKeyAsync(int Filekey, int BenefitID, string SelDate) {
            this.employeeQuickBalanceAsOfByFileKeyAsync(Filekey, BenefitID, SelDate, null);
        }
        
        /// <remarks/>
        public void employeeQuickBalanceAsOfByFileKeyAsync(int Filekey, int BenefitID, string SelDate, object userState) {
            if ((this.employeeQuickBalanceAsOfByFileKeyOperationCompleted == null)) {
                this.employeeQuickBalanceAsOfByFileKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemployeeQuickBalanceAsOfByFileKeyOperationCompleted);
            }
            this.InvokeAsync("employeeQuickBalanceAsOfByFileKey", new object[] {
                        Filekey,
                        BenefitID,
                        SelDate}, this.employeeQuickBalanceAsOfByFileKeyOperationCompleted, userState);
        }
        
        private void OnemployeeQuickBalanceAsOfByFileKeyOperationCompleted(object arg) {
            if ((this.employeeQuickBalanceAsOfByFileKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.employeeQuickBalanceAsOfByFileKeyCompleted(this, new employeeQuickBalanceAsOfByFileKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#employeeQuickBalanceAsOfByIDNum", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeEmpBenefitBalanceDate employeeQuickBalanceAsOfByIDNum(string IDNum, int BenefitID, string SelDate) {
            object[] results = this.Invoke("employeeQuickBalanceAsOfByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        SelDate});
            return ((TAeEmpBenefitBalanceDate)(results[0]));
        }
        
        /// <remarks/>
        public void employeeQuickBalanceAsOfByIDNumAsync(string IDNum, int BenefitID, string SelDate) {
            this.employeeQuickBalanceAsOfByIDNumAsync(IDNum, BenefitID, SelDate, null);
        }
        
        /// <remarks/>
        public void employeeQuickBalanceAsOfByIDNumAsync(string IDNum, int BenefitID, string SelDate, object userState) {
            if ((this.employeeQuickBalanceAsOfByIDNumOperationCompleted == null)) {
                this.employeeQuickBalanceAsOfByIDNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemployeeQuickBalanceAsOfByIDNumOperationCompleted);
            }
            this.InvokeAsync("employeeQuickBalanceAsOfByIDNum", new object[] {
                        IDNum,
                        BenefitID,
                        SelDate}, this.employeeQuickBalanceAsOfByIDNumOperationCompleted, userState);
        }
        
        private void OnemployeeQuickBalanceAsOfByIDNumOperationCompleted(object arg) {
            if ((this.employeeQuickBalanceAsOfByIDNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.employeeQuickBalanceAsOfByIDNumCompleted(this, new employeeQuickBalanceAsOfByIDNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#getSystemImportsBasic", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TAeBasicDataItem[] getSystemImportsBasic() {
            object[] results = this.Invoke("getSystemImportsBasic", new object[0]);
            return ((TAeBasicDataItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getSystemImportsBasicAsync() {
            this.getSystemImportsBasicAsync(null);
        }
        
        /// <remarks/>
        public void getSystemImportsBasicAsync(object userState) {
            if ((this.getSystemImportsBasicOperationCompleted == null)) {
                this.getSystemImportsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemImportsBasicOperationCompleted);
            }
            this.InvokeAsync("getSystemImportsBasic", new object[0], this.getSystemImportsBasicOperationCompleted, userState);
        }
        
        private void OngetSystemImportsBasicOperationCompleted(object arg) {
            if ((this.getSystemImportsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemImportsBasicCompleted(this, new getSystemImportsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("TSessionHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:AeXMLBridgeIntf-IAeXMLBridge#executeImportOperation", RequestNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge", ResponseNamespace="urn:AeXMLBridgeIntf-IAeXMLBridge")]
        public void executeImportOperation(TAeClientImportDetail AeClientImportDetail) {
            this.Invoke("executeImportOperation", new object[] {
                        AeClientImportDetail});
        }
        
        /// <remarks/>
        public void executeImportOperationAsync(TAeClientImportDetail AeClientImportDetail) {
            this.executeImportOperationAsync(AeClientImportDetail, null);
        }
        
        /// <remarks/>
        public void executeImportOperationAsync(TAeClientImportDetail AeClientImportDetail, object userState) {
            if ((this.executeImportOperationOperationCompleted == null)) {
                this.executeImportOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteImportOperationOperationCompleted);
            }
            this.InvokeAsync("executeImportOperation", new object[] {
                        AeClientImportDetail}, this.executeImportOperationOperationCompleted, userState);
        }
        
        private void OnexecuteImportOperationOperationCompleted(object arg) {
            if ((this.executeImportOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeImportOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TSessionHeader : SoapHeader {
        
        private string accountField;
        
        private string passwordField;
        
        private string clientCodeField;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string ClientCode {
            get {
                return this.clientCodeField;
            }
            set {
                this.clientCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeClientImportDetail {
        
        private string importOpTitleField;
        
        private string fileContentsField;
        
        /// <remarks/>
        public string ImportOpTitle {
            get {
                return this.importOpTitleField;
            }
            set {
                this.importOpTitleField = value;
            }
        }
        
        /// <remarks/>
        public string FileContents {
            get {
                return this.fileContentsField;
            }
            set {
                this.fileContentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpBenefitBalanceDate {
        
        private int filekeyField;
        
        private string empIDField;
        
        private int benefitIDField;
        
        private string effDateField;
        
        private double sOD_HoursField;
        
        private double sOD_DollarsField;
        
        private double eOD_HoursField;
        
        private double eOD_DollarsField;
        
        private bool isHoursField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public int BenefitID {
            get {
                return this.benefitIDField;
            }
            set {
                this.benefitIDField = value;
            }
        }
        
        /// <remarks/>
        public string EffDate {
            get {
                return this.effDateField;
            }
            set {
                this.effDateField = value;
            }
        }
        
        /// <remarks/>
        public double SOD_Hours {
            get {
                return this.sOD_HoursField;
            }
            set {
                this.sOD_HoursField = value;
            }
        }
        
        /// <remarks/>
        public double SOD_Dollars {
            get {
                return this.sOD_DollarsField;
            }
            set {
                this.sOD_DollarsField = value;
            }
        }
        
        /// <remarks/>
        public double EOD_Hours {
            get {
                return this.eOD_HoursField;
            }
            set {
                this.eOD_HoursField = value;
            }
        }
        
        /// <remarks/>
        public double EOD_Dollars {
            get {
                return this.eOD_DollarsField;
            }
            set {
                this.eOD_DollarsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsHours {
            get {
                return this.isHoursField;
            }
            set {
                this.isHoursField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmployeeSelfServiceOperation {
        
        private TESSOperationEnum operationField;
        
        private string captionField;
        
        private int tip1PayDesNumField;
        
        private int tip2PayDesNumField;
        
        private int xferStyleField;
        
        private int rTOStyleField;
        
        private int rTOHoursPromptField;
        
        private int rTODefaultHoursFormulaField;
        
        private int rTOHoursField;
        
        private int rTOIntervalFormulaField;
        
        private int rTOHoursIntervalField;
        
        private int rTOHoursMinField;
        
        private int rTOHoursMaxField;
        
        private int rTOBenefitPromptField;
        
        private int rTODefaultBenefitFormulaField;
        
        private int rTOBenefitField;
        
        private bool rTOZeroHoursField;
        
        private int rTORenderBenBalField;
        
        private int stationIDField;
        
        private int transTypeField;
        
        private int callbackField;
        
        private bool useTip2Field;
        
        private string tip1HintField;
        
        private string tip2HintField;
        
        private string tip1PromptField;
        
        private string tip2PromptField;
        
        private int exitTimeField;
        
        private bool useFastExitField;
        
        private int defaultNewMessStateField;
        
        private bool alsoPunchField;
        
        private bool lAMEmpSetPriorityField;
        
        private bool promptSupEditEmpStateEffDateField;
        
        private string defaultNewMessSubjectField;
        
        private bool promptSupEditEmpStateAField;
        
        private bool promptSupEditEmpStateBField;
        
        private int defaultEmpStateAField;
        
        private int defaultEmpStateBField;
        
        private string captionEmpStateAField;
        
        private string captionEmpStateBField;
        
        private string empStateMemoField;
        
        private int minEmpStateDaysField;
        
        private int empNoticeConditionField;
        
        private string minDateField;
        
        private string maxDateField;
        
        private bool collectGPSField;
        
        private int collectGPSModeField;
        
        private string iconField;
        
        private string gUIDField;
        
        private string fKeyClsField;
        
        /// <remarks/>
        public TESSOperationEnum Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public int Tip1PayDesNum {
            get {
                return this.tip1PayDesNumField;
            }
            set {
                this.tip1PayDesNumField = value;
            }
        }
        
        /// <remarks/>
        public int Tip2PayDesNum {
            get {
                return this.tip2PayDesNumField;
            }
            set {
                this.tip2PayDesNumField = value;
            }
        }
        
        /// <remarks/>
        public int XferStyle {
            get {
                return this.xferStyleField;
            }
            set {
                this.xferStyleField = value;
            }
        }
        
        /// <remarks/>
        public int RTOStyle {
            get {
                return this.rTOStyleField;
            }
            set {
                this.rTOStyleField = value;
            }
        }
        
        /// <remarks/>
        public int RTOHoursPrompt {
            get {
                return this.rTOHoursPromptField;
            }
            set {
                this.rTOHoursPromptField = value;
            }
        }
        
        /// <remarks/>
        public int RTODefaultHoursFormula {
            get {
                return this.rTODefaultHoursFormulaField;
            }
            set {
                this.rTODefaultHoursFormulaField = value;
            }
        }
        
        /// <remarks/>
        public int RTOHours {
            get {
                return this.rTOHoursField;
            }
            set {
                this.rTOHoursField = value;
            }
        }
        
        /// <remarks/>
        public int RTOIntervalFormula {
            get {
                return this.rTOIntervalFormulaField;
            }
            set {
                this.rTOIntervalFormulaField = value;
            }
        }
        
        /// <remarks/>
        public int RTOHoursInterval {
            get {
                return this.rTOHoursIntervalField;
            }
            set {
                this.rTOHoursIntervalField = value;
            }
        }
        
        /// <remarks/>
        public int RTOHoursMin {
            get {
                return this.rTOHoursMinField;
            }
            set {
                this.rTOHoursMinField = value;
            }
        }
        
        /// <remarks/>
        public int RTOHoursMax {
            get {
                return this.rTOHoursMaxField;
            }
            set {
                this.rTOHoursMaxField = value;
            }
        }
        
        /// <remarks/>
        public int RTOBenefitPrompt {
            get {
                return this.rTOBenefitPromptField;
            }
            set {
                this.rTOBenefitPromptField = value;
            }
        }
        
        /// <remarks/>
        public int RTODefaultBenefitFormula {
            get {
                return this.rTODefaultBenefitFormulaField;
            }
            set {
                this.rTODefaultBenefitFormulaField = value;
            }
        }
        
        /// <remarks/>
        public int RTOBenefit {
            get {
                return this.rTOBenefitField;
            }
            set {
                this.rTOBenefitField = value;
            }
        }
        
        /// <remarks/>
        public bool RTOZeroHours {
            get {
                return this.rTOZeroHoursField;
            }
            set {
                this.rTOZeroHoursField = value;
            }
        }
        
        /// <remarks/>
        public int RTORenderBenBal {
            get {
                return this.rTORenderBenBalField;
            }
            set {
                this.rTORenderBenBalField = value;
            }
        }
        
        /// <remarks/>
        public int StationID {
            get {
                return this.stationIDField;
            }
            set {
                this.stationIDField = value;
            }
        }
        
        /// <remarks/>
        public int TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Callback {
            get {
                return this.callbackField;
            }
            set {
                this.callbackField = value;
            }
        }
        
        /// <remarks/>
        public bool UseTip2 {
            get {
                return this.useTip2Field;
            }
            set {
                this.useTip2Field = value;
            }
        }
        
        /// <remarks/>
        public string Tip1Hint {
            get {
                return this.tip1HintField;
            }
            set {
                this.tip1HintField = value;
            }
        }
        
        /// <remarks/>
        public string Tip2Hint {
            get {
                return this.tip2HintField;
            }
            set {
                this.tip2HintField = value;
            }
        }
        
        /// <remarks/>
        public string Tip1Prompt {
            get {
                return this.tip1PromptField;
            }
            set {
                this.tip1PromptField = value;
            }
        }
        
        /// <remarks/>
        public string Tip2Prompt {
            get {
                return this.tip2PromptField;
            }
            set {
                this.tip2PromptField = value;
            }
        }
        
        /// <remarks/>
        public int ExitTime {
            get {
                return this.exitTimeField;
            }
            set {
                this.exitTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool UseFastExit {
            get {
                return this.useFastExitField;
            }
            set {
                this.useFastExitField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultNewMessState {
            get {
                return this.defaultNewMessStateField;
            }
            set {
                this.defaultNewMessStateField = value;
            }
        }
        
        /// <remarks/>
        public bool AlsoPunch {
            get {
                return this.alsoPunchField;
            }
            set {
                this.alsoPunchField = value;
            }
        }
        
        /// <remarks/>
        public bool LAMEmpSetPriority {
            get {
                return this.lAMEmpSetPriorityField;
            }
            set {
                this.lAMEmpSetPriorityField = value;
            }
        }
        
        /// <remarks/>
        public bool PromptSupEditEmpStateEffDate {
            get {
                return this.promptSupEditEmpStateEffDateField;
            }
            set {
                this.promptSupEditEmpStateEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultNewMessSubject {
            get {
                return this.defaultNewMessSubjectField;
            }
            set {
                this.defaultNewMessSubjectField = value;
            }
        }
        
        /// <remarks/>
        public bool PromptSupEditEmpStateA {
            get {
                return this.promptSupEditEmpStateAField;
            }
            set {
                this.promptSupEditEmpStateAField = value;
            }
        }
        
        /// <remarks/>
        public bool PromptSupEditEmpStateB {
            get {
                return this.promptSupEditEmpStateBField;
            }
            set {
                this.promptSupEditEmpStateBField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultEmpStateA {
            get {
                return this.defaultEmpStateAField;
            }
            set {
                this.defaultEmpStateAField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultEmpStateB {
            get {
                return this.defaultEmpStateBField;
            }
            set {
                this.defaultEmpStateBField = value;
            }
        }
        
        /// <remarks/>
        public string CaptionEmpStateA {
            get {
                return this.captionEmpStateAField;
            }
            set {
                this.captionEmpStateAField = value;
            }
        }
        
        /// <remarks/>
        public string CaptionEmpStateB {
            get {
                return this.captionEmpStateBField;
            }
            set {
                this.captionEmpStateBField = value;
            }
        }
        
        /// <remarks/>
        public string EmpStateMemo {
            get {
                return this.empStateMemoField;
            }
            set {
                this.empStateMemoField = value;
            }
        }
        
        /// <remarks/>
        public int MinEmpStateDays {
            get {
                return this.minEmpStateDaysField;
            }
            set {
                this.minEmpStateDaysField = value;
            }
        }
        
        /// <remarks/>
        public int EmpNoticeCondition {
            get {
                return this.empNoticeConditionField;
            }
            set {
                this.empNoticeConditionField = value;
            }
        }
        
        /// <remarks/>
        public string MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
        
        /// <remarks/>
        public bool CollectGPS {
            get {
                return this.collectGPSField;
            }
            set {
                this.collectGPSField = value;
            }
        }
        
        /// <remarks/>
        public int CollectGPSMode {
            get {
                return this.collectGPSModeField;
            }
            set {
                this.collectGPSModeField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        public string FKeyCls {
            get {
                return this.fKeyClsField;
            }
            set {
                this.fKeyClsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TESSOperationEnum {
        
        /// <remarks/>
        essPunch,
        
        /// <remarks/>
        essTransfer,
        
        /// <remarks/>
        essRTO,
        
        /// <remarks/>
        essTip,
        
        /// <remarks/>
        essMessage,
        
        /// <remarks/>
        essSetState,
        
        /// <remarks/>
        essSendNotice,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayrollEarning {
        
        private string empIDField;
        
        private string earningsCodeField;
        
        private double hoursField;
        
        private string payPeriodStartDateField;
        
        private string payPeriodEndDateField;
        
        private double dollarsField;
        
        private double rateField;
        
        private string departmentField;
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public string EarningsCode {
            get {
                return this.earningsCodeField;
            }
            set {
                this.earningsCodeField = value;
            }
        }
        
        /// <remarks/>
        public double Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public string PayPeriodStartDate {
            get {
                return this.payPeriodStartDateField;
            }
            set {
                this.payPeriodStartDateField = value;
            }
        }
        
        /// <remarks/>
        public string PayPeriodEndDate {
            get {
                return this.payPeriodEndDateField;
            }
            set {
                this.payPeriodEndDateField = value;
            }
        }
        
        /// <remarks/>
        public double Dollars {
            get {
                return this.dollarsField;
            }
            set {
                this.dollarsField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeACALEDMonthSumm {
        
        private string startOfMonthField;
        
        private double fullTimeField;
        
        private double fullTimeEquivField;
        
        private double seasonalField;
        
        private double salariedField;
        
        private double aCAEmpCountField;
        
        private double runningAvgField;
        
        /// <remarks/>
        public string StartOfMonth {
            get {
                return this.startOfMonthField;
            }
            set {
                this.startOfMonthField = value;
            }
        }
        
        /// <remarks/>
        public double FullTime {
            get {
                return this.fullTimeField;
            }
            set {
                this.fullTimeField = value;
            }
        }
        
        /// <remarks/>
        public double FullTimeEquiv {
            get {
                return this.fullTimeEquivField;
            }
            set {
                this.fullTimeEquivField = value;
            }
        }
        
        /// <remarks/>
        public double Seasonal {
            get {
                return this.seasonalField;
            }
            set {
                this.seasonalField = value;
            }
        }
        
        /// <remarks/>
        public double Salaried {
            get {
                return this.salariedField;
            }
            set {
                this.salariedField = value;
            }
        }
        
        /// <remarks/>
        public double ACAEmpCount {
            get {
                return this.aCAEmpCountField;
            }
            set {
                this.aCAEmpCountField = value;
            }
        }
        
        /// <remarks/>
        public double RunningAvg {
            get {
                return this.runningAvgField;
            }
            set {
                this.runningAvgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeDeptXLateItem {
        
        private int uniqueIDField;
        
        private string extIDField;
        
        private string extDescrField;
        
        private int formulaField;
        
        private int auxIDField;
        
        private int stateField;
        
        private string createdField;
        
        private int wG1Field;
        
        private int wG2Field;
        
        private int wG3Field;
        
        private int wG4Field;
        
        private int wG5Field;
        
        private int wG6Field;
        
        private int wG7Field;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string ExtID {
            get {
                return this.extIDField;
            }
            set {
                this.extIDField = value;
            }
        }
        
        /// <remarks/>
        public string ExtDescr {
            get {
                return this.extDescrField;
            }
            set {
                this.extDescrField = value;
            }
        }
        
        /// <remarks/>
        public int Formula {
            get {
                return this.formulaField;
            }
            set {
                this.formulaField = value;
            }
        }
        
        /// <remarks/>
        public int AuxID {
            get {
                return this.auxIDField;
            }
            set {
                this.auxIDField = value;
            }
        }
        
        /// <remarks/>
        public int State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public int WG1 {
            get {
                return this.wG1Field;
            }
            set {
                this.wG1Field = value;
            }
        }
        
        /// <remarks/>
        public int WG2 {
            get {
                return this.wG2Field;
            }
            set {
                this.wG2Field = value;
            }
        }
        
        /// <remarks/>
        public int WG3 {
            get {
                return this.wG3Field;
            }
            set {
                this.wG3Field = value;
            }
        }
        
        /// <remarks/>
        public int WG4 {
            get {
                return this.wG4Field;
            }
            set {
                this.wG4Field = value;
            }
        }
        
        /// <remarks/>
        public int WG5 {
            get {
                return this.wG5Field;
            }
            set {
                this.wG5Field = value;
            }
        }
        
        /// <remarks/>
        public int WG6 {
            get {
                return this.wG6Field;
            }
            set {
                this.wG6Field = value;
            }
        }
        
        /// <remarks/>
        public int WG7 {
            get {
                return this.wG7Field;
            }
            set {
                this.wG7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeNewDBElement {
        
        private int uniqueIDField;
        
        private string descrField;
        
        private string createdField;
        
        private string addressedField;
        
        private int elementTypeField;
        
        private string elementTypeDescrField;
        
        private int elementStatusField;
        
        private string elementStatusDescrField;
        
        private string createdByField;
        
        private string addressedByField;
        
        private string userDataField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string Addressed {
            get {
                return this.addressedField;
            }
            set {
                this.addressedField = value;
            }
        }
        
        /// <remarks/>
        public int ElementType {
            get {
                return this.elementTypeField;
            }
            set {
                this.elementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ElementTypeDescr {
            get {
                return this.elementTypeDescrField;
            }
            set {
                this.elementTypeDescrField = value;
            }
        }
        
        /// <remarks/>
        public int ElementStatus {
            get {
                return this.elementStatusField;
            }
            set {
                this.elementStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ElementStatusDescr {
            get {
                return this.elementStatusDescrField;
            }
            set {
                this.elementStatusDescrField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string AddressedBy {
            get {
                return this.addressedByField;
            }
            set {
                this.addressedByField = value;
            }
        }
        
        /// <remarks/>
        public string UserData {
            get {
                return this.userDataField;
            }
            set {
                this.userDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeImportLogItem {
        
        private int uniqueIDField;
        
        private string eventGUIDField;
        
        private string timestampField;
        
        private int severityField;
        
        private int operationField;
        
        private int activityField;
        
        private string logMsgField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string EventGUID {
            get {
                return this.eventGUIDField;
            }
            set {
                this.eventGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public int Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public int Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public int Activity {
            get {
                return this.activityField;
            }
            set {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        public string LogMsg {
            get {
                return this.logMsgField;
            }
            set {
                this.logMsgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayrollEmployee {
        
        private string empIDField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string initialField;
        
        private string badgeField;
        
        private string payClassField;
        
        private string payClassEffDateField;
        
        private string payClassDateUsageField;
        
        private string dateOfHireField;
        
        private string startOfServiceDateField;
        
        private string departmentField;
        
        private string departmentIDField;
        
        private string controlGroupField;
        
        private TAePayrollACAAutoApplyOptions autoApplyField;
        
        private TAePayrollACANoReviewOptions noReviewField;
        
        private TAePayrollACASeasonalOptions seasonalField;
        
        private TAePayrollPayTypeOptions payTypeField;
        
        private TAePayrollActiveStatusEnum activeStatusField;
        
        private string activeConditionField;
        
        private string termConditionField;
        
        private string activeStatusEffDateField;
        
        private string activeStatusDateUsageField;
        
        private TAePayrollHourlyStatusOptions hourlyStatusTypeField;
        
        private string hourlyStatusEffDateField;
        
        private string hourlyStatusDateUsageField;
        
        private string birthDateField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string addressLine3Field;
        
        private string addressCityField;
        
        private string addressStateProvField;
        
        private string addressZIPPCField;
        
        private string phone1Field;
        
        private string phone2Field;
        
        private string unionCodeField;
        
        private string emergencyContactField;
        
        private string eSSPINField;
        
        private string emailAddressField;
        
        private string rateOfPayField;
        
        private string rateEffDateField;
        
        private string rateDateUsageField;
        
        private string schPatternField;
        
        private string schPattEffDateField;
        
        private string schPattDateUsageField;
        
        private string aCAStatusField;
        
        private string aCAStatusMinDateField;
        
        private string aCAStatusMaxDateField;
        
        private string aCAStatusDateUsageField;
        
        private TAePayrollACAStatusOptions aCAPromoteToFullTimeField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customField5Field;
        
        private string customField6Field;
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Initial {
            get {
                return this.initialField;
            }
            set {
                this.initialField = value;
            }
        }
        
        /// <remarks/>
        public string Badge {
            get {
                return this.badgeField;
            }
            set {
                this.badgeField = value;
            }
        }
        
        /// <remarks/>
        public string PayClass {
            get {
                return this.payClassField;
            }
            set {
                this.payClassField = value;
            }
        }
        
        /// <remarks/>
        public string PayClassEffDate {
            get {
                return this.payClassEffDateField;
            }
            set {
                this.payClassEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string PayClassDateUsage {
            get {
                return this.payClassDateUsageField;
            }
            set {
                this.payClassDateUsageField = value;
            }
        }
        
        /// <remarks/>
        public string DateOfHire {
            get {
                return this.dateOfHireField;
            }
            set {
                this.dateOfHireField = value;
            }
        }
        
        /// <remarks/>
        public string StartOfServiceDate {
            get {
                return this.startOfServiceDateField;
            }
            set {
                this.startOfServiceDateField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string DepartmentID {
            get {
                return this.departmentIDField;
            }
            set {
                this.departmentIDField = value;
            }
        }
        
        /// <remarks/>
        public string ControlGroup {
            get {
                return this.controlGroupField;
            }
            set {
                this.controlGroupField = value;
            }
        }
        
        /// <remarks/>
        public TAePayrollACAAutoApplyOptions AutoApply {
            get {
                return this.autoApplyField;
            }
            set {
                this.autoApplyField = value;
            }
        }
        
        /// <remarks/>
        public TAePayrollACANoReviewOptions NoReview {
            get {
                return this.noReviewField;
            }
            set {
                this.noReviewField = value;
            }
        }
        
        /// <remarks/>
        public TAePayrollACASeasonalOptions Seasonal {
            get {
                return this.seasonalField;
            }
            set {
                this.seasonalField = value;
            }
        }
        
        /// <remarks/>
        public TAePayrollPayTypeOptions PayType {
            get {
                return this.payTypeField;
            }
            set {
                this.payTypeField = value;
            }
        }
        
        /// <remarks/>
        public TAePayrollActiveStatusEnum ActiveStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ActiveCondition {
            get {
                return this.activeConditionField;
            }
            set {
                this.activeConditionField = value;
            }
        }
        
        /// <remarks/>
        public string TermCondition {
            get {
                return this.termConditionField;
            }
            set {
                this.termConditionField = value;
            }
        }
        
        /// <remarks/>
        public string ActiveStatusEffDate {
            get {
                return this.activeStatusEffDateField;
            }
            set {
                this.activeStatusEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string ActiveStatusDateUsage {
            get {
                return this.activeStatusDateUsageField;
            }
            set {
                this.activeStatusDateUsageField = value;
            }
        }
        
        /// <remarks/>
        public TAePayrollHourlyStatusOptions HourlyStatusType {
            get {
                return this.hourlyStatusTypeField;
            }
            set {
                this.hourlyStatusTypeField = value;
            }
        }
        
        /// <remarks/>
        public string HourlyStatusEffDate {
            get {
                return this.hourlyStatusEffDateField;
            }
            set {
                this.hourlyStatusEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string HourlyStatusDateUsage {
            get {
                return this.hourlyStatusDateUsageField;
            }
            set {
                this.hourlyStatusDateUsageField = value;
            }
        }
        
        /// <remarks/>
        public string BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine3 {
            get {
                return this.addressLine3Field;
            }
            set {
                this.addressLine3Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressCity {
            get {
                return this.addressCityField;
            }
            set {
                this.addressCityField = value;
            }
        }
        
        /// <remarks/>
        public string AddressStateProv {
            get {
                return this.addressStateProvField;
            }
            set {
                this.addressStateProvField = value;
            }
        }
        
        /// <remarks/>
        public string AddressZIPPC {
            get {
                return this.addressZIPPCField;
            }
            set {
                this.addressZIPPCField = value;
            }
        }
        
        /// <remarks/>
        public string Phone1 {
            get {
                return this.phone1Field;
            }
            set {
                this.phone1Field = value;
            }
        }
        
        /// <remarks/>
        public string Phone2 {
            get {
                return this.phone2Field;
            }
            set {
                this.phone2Field = value;
            }
        }
        
        /// <remarks/>
        public string UnionCode {
            get {
                return this.unionCodeField;
            }
            set {
                this.unionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyContact {
            get {
                return this.emergencyContactField;
            }
            set {
                this.emergencyContactField = value;
            }
        }
        
        /// <remarks/>
        public string ESSPIN {
            get {
                return this.eSSPINField;
            }
            set {
                this.eSSPINField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RateOfPay {
            get {
                return this.rateOfPayField;
            }
            set {
                this.rateOfPayField = value;
            }
        }
        
        /// <remarks/>
        public string RateEffDate {
            get {
                return this.rateEffDateField;
            }
            set {
                this.rateEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string RateDateUsage {
            get {
                return this.rateDateUsageField;
            }
            set {
                this.rateDateUsageField = value;
            }
        }
        
        /// <remarks/>
        public string SchPattern {
            get {
                return this.schPatternField;
            }
            set {
                this.schPatternField = value;
            }
        }
        
        /// <remarks/>
        public string SchPattEffDate {
            get {
                return this.schPattEffDateField;
            }
            set {
                this.schPattEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string SchPattDateUsage {
            get {
                return this.schPattDateUsageField;
            }
            set {
                this.schPattDateUsageField = value;
            }
        }
        
        /// <remarks/>
        public string ACAStatus {
            get {
                return this.aCAStatusField;
            }
            set {
                this.aCAStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ACAStatusMinDate {
            get {
                return this.aCAStatusMinDateField;
            }
            set {
                this.aCAStatusMinDateField = value;
            }
        }
        
        /// <remarks/>
        public string ACAStatusMaxDate {
            get {
                return this.aCAStatusMaxDateField;
            }
            set {
                this.aCAStatusMaxDateField = value;
            }
        }
        
        /// <remarks/>
        public string ACAStatusDateUsage {
            get {
                return this.aCAStatusDateUsageField;
            }
            set {
                this.aCAStatusDateUsageField = value;
            }
        }
        
        /// <remarks/>
        public TAePayrollACAStatusOptions ACAPromoteToFullTime {
            get {
                return this.aCAPromoteToFullTimeField;
            }
            set {
                this.aCAPromoteToFullTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CustomField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAePayrollACAAutoApplyOptions {
        
        /// <remarks/>
        epaaSkip,
        
        /// <remarks/>
        epaaEnabledAlways,
        
        /// <remarks/>
        epaaDisabled,
        
        /// <remarks/>
        epaaEnabledOnFullTime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAePayrollACANoReviewOptions {
        
        /// <remarks/>
        epnrSkip,
        
        /// <remarks/>
        epnrNormal,
        
        /// <remarks/>
        epnrPermFT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAePayrollACASeasonalOptions {
        
        /// <remarks/>
        epsSkip,
        
        /// <remarks/>
        epsNormal,
        
        /// <remarks/>
        epsSeasonal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAePayrollPayTypeOptions {
        
        /// <remarks/>
        apptSkip,
        
        /// <remarks/>
        apptHourly,
        
        /// <remarks/>
        apptSalaried,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAePayrollActiveStatusEnum {
        
        /// <remarks/>
        pasSkip,
        
        /// <remarks/>
        pasActive,
        
        /// <remarks/>
        pasInactive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAePayrollHourlyStatusOptions {
        
        /// <remarks/>
        epftsSkip,
        
        /// <remarks/>
        epftsFullTime,
        
        /// <remarks/>
        epftsPartTime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAePayrollACAStatusOptions {
        
        /// <remarks/>
        epasSkip,
        
        /// <remarks/>
        epasYes,
        
        /// <remarks/>
        epasNo,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeESSPreAuthPackage {
        
        private string empIDField;
        
        private int filekeyField;
        
        private string subIFrameField;
        
        private bool hideWholeheaderField;
        
        private bool excludeCommandsField;
        
        private bool excludeEmpnameField;
        
        private bool excludeImageField;
        
        private bool excludeClockField;
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public string SubIFrame {
            get {
                return this.subIFrameField;
            }
            set {
                this.subIFrameField = value;
            }
        }
        
        /// <remarks/>
        public bool HideWholeheader {
            get {
                return this.hideWholeheaderField;
            }
            set {
                this.hideWholeheaderField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeCommands {
            get {
                return this.excludeCommandsField;
            }
            set {
                this.excludeCommandsField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeEmpname {
            get {
                return this.excludeEmpnameField;
            }
            set {
                this.excludeEmpnameField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeImage {
            get {
                return this.excludeImageField;
            }
            set {
                this.excludeImageField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeClock {
            get {
                return this.excludeClockField;
            }
            set {
                this.excludeClockField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpACAPeriod {
        
        private int filekeyField;
        
        private TAeACAPeriodTypeOptions periodTypeField;
        
        private string minDateField;
        
        private string maxDateField;
        
        private int itemDataField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public TAeACAPeriodTypeOptions PeriodType {
            get {
                return this.periodTypeField;
            }
            set {
                this.periodTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
        
        /// <remarks/>
        public int ItemData {
            get {
                return this.itemDataField;
            }
            set {
                this.itemDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAeACAPeriodTypeOptions {
        
        /// <remarks/>
        aptoMeasurement,
        
        /// <remarks/>
        aptoStability,
        
        /// <remarks/>
        aptoAdministration,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpClosedMeasurementPeriod {
        
        private int filekeyField;
        
        private int fTStatusField;
        
        private int mPeriodModeField;
        
        private int measureField;
        
        private int avgRsltField;
        
        private string descriptionField;
        
        private string minDateField;
        
        private string maxDateField;
        
        private string dTTMStampField;
        
        private string effDateField;
        
        private string effEndField;
        
        private string userNameField;
        
        private int authCodeField;
        
        private int foldField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public int FTStatus {
            get {
                return this.fTStatusField;
            }
            set {
                this.fTStatusField = value;
            }
        }
        
        /// <remarks/>
        public int MPeriodMode {
            get {
                return this.mPeriodModeField;
            }
            set {
                this.mPeriodModeField = value;
            }
        }
        
        /// <remarks/>
        public int Measure {
            get {
                return this.measureField;
            }
            set {
                this.measureField = value;
            }
        }
        
        /// <remarks/>
        public int AvgRslt {
            get {
                return this.avgRsltField;
            }
            set {
                this.avgRsltField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
        
        /// <remarks/>
        public string DTTMStamp {
            get {
                return this.dTTMStampField;
            }
            set {
                this.dTTMStampField = value;
            }
        }
        
        /// <remarks/>
        public string EffDate {
            get {
                return this.effDateField;
            }
            set {
                this.effDateField = value;
            }
        }
        
        /// <remarks/>
        public string EffEnd {
            get {
                return this.effEndField;
            }
            set {
                this.effEndField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
            }
        }
        
        /// <remarks/>
        public int Fold {
            get {
                return this.foldField;
            }
            set {
                this.foldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeDateRange {
        
        private string minDateField;
        
        private string maxDateField;
        
        /// <remarks/>
        public string MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeACAMperiodRecommendation {
        
        private int filekeyField;
        
        private int transCodeField;
        
        private int periodMonitorField;
        
        private int avgHrsField;
        
        private int fTStatusField;
        
        private string fTStatusEffDateField;
        
        private string fTStatusEndDateField;
        
        private int noReviewField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public int TransCode {
            get {
                return this.transCodeField;
            }
            set {
                this.transCodeField = value;
            }
        }
        
        /// <remarks/>
        public int PeriodMonitor {
            get {
                return this.periodMonitorField;
            }
            set {
                this.periodMonitorField = value;
            }
        }
        
        /// <remarks/>
        public int AvgHrs {
            get {
                return this.avgHrsField;
            }
            set {
                this.avgHrsField = value;
            }
        }
        
        /// <remarks/>
        public int FTStatus {
            get {
                return this.fTStatusField;
            }
            set {
                this.fTStatusField = value;
            }
        }
        
        /// <remarks/>
        public string FTStatusEffDate {
            get {
                return this.fTStatusEffDateField;
            }
            set {
                this.fTStatusEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string FTStatusEndDate {
            get {
                return this.fTStatusEndDateField;
            }
            set {
                this.fTStatusEndDateField = value;
            }
        }
        
        /// <remarks/>
        public int NoReview {
            get {
                return this.noReviewField;
            }
            set {
                this.noReviewField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpActLog {
        
        private int filekeyField;
        
        private int operationField;
        
        private int severityField;
        
        private string descriptionField;
        
        private string effDateField;
        
        private string tSDateTimeField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public int Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public int Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string EffDate {
            get {
                return this.effDateField;
            }
            set {
                this.effDateField = value;
            }
        }
        
        /// <remarks/>
        public string TSDateTime {
            get {
                return this.tSDateTimeField;
            }
            set {
                this.tSDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeControlGroup {
        
        private int cGNumField;
        
        private string cGNameField;
        
        private string prevMPeriodStartField;
        
        private string prevMPeriodEndField;
        
        private string currMPeriodStartField;
        
        private string currMPeriodEndField;
        
        private string prevSPeriodStartField;
        
        private string prevSPeriodEndField;
        
        private string currSPeriodStartField;
        
        private string currSPeriodEndField;
        
        /// <remarks/>
        public int CGNum {
            get {
                return this.cGNumField;
            }
            set {
                this.cGNumField = value;
            }
        }
        
        /// <remarks/>
        public string CGName {
            get {
                return this.cGNameField;
            }
            set {
                this.cGNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrevMPeriodStart {
            get {
                return this.prevMPeriodStartField;
            }
            set {
                this.prevMPeriodStartField = value;
            }
        }
        
        /// <remarks/>
        public string PrevMPeriodEnd {
            get {
                return this.prevMPeriodEndField;
            }
            set {
                this.prevMPeriodEndField = value;
            }
        }
        
        /// <remarks/>
        public string CurrMPeriodStart {
            get {
                return this.currMPeriodStartField;
            }
            set {
                this.currMPeriodStartField = value;
            }
        }
        
        /// <remarks/>
        public string CurrMPeriodEnd {
            get {
                return this.currMPeriodEndField;
            }
            set {
                this.currMPeriodEndField = value;
            }
        }
        
        /// <remarks/>
        public string PrevSPeriodStart {
            get {
                return this.prevSPeriodStartField;
            }
            set {
                this.prevSPeriodStartField = value;
            }
        }
        
        /// <remarks/>
        public string PrevSPeriodEnd {
            get {
                return this.prevSPeriodEndField;
            }
            set {
                this.prevSPeriodEndField = value;
            }
        }
        
        /// <remarks/>
        public string CurrSPeriodStart {
            get {
                return this.currSPeriodStartField;
            }
            set {
                this.currSPeriodStartField = value;
            }
        }
        
        /// <remarks/>
        public string CurrSPeriodEnd {
            get {
                return this.currSPeriodEndField;
            }
            set {
                this.currSPeriodEndField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpTranRate {
        
        private int filekeyField;
        
        private string empIDField;
        
        private int flagsField;
        
        private double rateField;
        
        private string effDateField;
        
        private string modifiedField;
        
        private int wG1Field;
        
        private int wG2Field;
        
        private int wG3Field;
        
        private int wG4Field;
        
        private int wG5Field;
        
        private int wG6Field;
        
        private int wG7Field;
        
        private string wGDecrField;
        
        private int uniqueIDField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public int Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public string EffDate {
            get {
                return this.effDateField;
            }
            set {
                this.effDateField = value;
            }
        }
        
        /// <remarks/>
        public string Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int WG1 {
            get {
                return this.wG1Field;
            }
            set {
                this.wG1Field = value;
            }
        }
        
        /// <remarks/>
        public int WG2 {
            get {
                return this.wG2Field;
            }
            set {
                this.wG2Field = value;
            }
        }
        
        /// <remarks/>
        public int WG3 {
            get {
                return this.wG3Field;
            }
            set {
                this.wG3Field = value;
            }
        }
        
        /// <remarks/>
        public int WG4 {
            get {
                return this.wG4Field;
            }
            set {
                this.wG4Field = value;
            }
        }
        
        /// <remarks/>
        public int WG5 {
            get {
                return this.wG5Field;
            }
            set {
                this.wG5Field = value;
            }
        }
        
        /// <remarks/>
        public int WG6 {
            get {
                return this.wG6Field;
            }
            set {
                this.wG6Field = value;
            }
        }
        
        /// <remarks/>
        public int WG7 {
            get {
                return this.wG7Field;
            }
            set {
                this.wG7Field = value;
            }
        }
        
        /// <remarks/>
        public string WGDecr {
            get {
                return this.wGDecrField;
            }
            set {
                this.wGDecrField = value;
            }
        }
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpBenefitBalance {
        
        private int filekeyField;
        
        private string empIDField;
        
        private int benefitIDField;
        
        private string effDateField;
        
        private double amountField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public int BenefitID {
            get {
                return this.benefitIDField;
            }
            set {
                this.benefitIDField = value;
            }
        }
        
        /// <remarks/>
        public string EffDate {
            get {
                return this.effDateField;
            }
            set {
                this.effDateField = value;
            }
        }
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeTimeOffRequestNotification {
        
        private bool notifyField;
        
        private string eMailAddrField;
        
        private string commentField;
        
        private string subjectLineField;
        
        private string bodyTextField;
        
        private string onBehalfOfField;
        
        /// <remarks/>
        public bool Notify {
            get {
                return this.notifyField;
            }
            set {
                this.notifyField = value;
            }
        }
        
        /// <remarks/>
        public string eMailAddr {
            get {
                return this.eMailAddrField;
            }
            set {
                this.eMailAddrField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string SubjectLine {
            get {
                return this.subjectLineField;
            }
            set {
                this.subjectLineField = value;
            }
        }
        
        /// <remarks/>
        public string BodyText {
            get {
                return this.bodyTextField;
            }
            set {
                this.bodyTextField = value;
            }
        }
        
        /// <remarks/>
        public string OnBehalfOf {
            get {
                return this.onBehalfOfField;
            }
            set {
                this.onBehalfOfField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeBillingItemEx {
        
        private int uniqueIDField;
        
        private string eventDateField;
        
        private string periodBeginField;
        
        private string periodEndField;
        
        private string descrField;
        
        private int instancesField;
        
        private int itemTypeField;
        
        private double itemValueField;
        
        private double itemTotalField;
        
        private string gLAField;
        
        private string gLBField;
        
        private string descr1Field;
        
        private string descr2Field;
        
        private string serialNoStrField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public string PeriodBegin {
            get {
                return this.periodBeginField;
            }
            set {
                this.periodBeginField = value;
            }
        }
        
        /// <remarks/>
        public string PeriodEnd {
            get {
                return this.periodEndField;
            }
            set {
                this.periodEndField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public int Instances {
            get {
                return this.instancesField;
            }
            set {
                this.instancesField = value;
            }
        }
        
        /// <remarks/>
        public int ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public double ItemValue {
            get {
                return this.itemValueField;
            }
            set {
                this.itemValueField = value;
            }
        }
        
        /// <remarks/>
        public double ItemTotal {
            get {
                return this.itemTotalField;
            }
            set {
                this.itemTotalField = value;
            }
        }
        
        /// <remarks/>
        public string GLA {
            get {
                return this.gLAField;
            }
            set {
                this.gLAField = value;
            }
        }
        
        /// <remarks/>
        public string GLB {
            get {
                return this.gLBField;
            }
            set {
                this.gLBField = value;
            }
        }
        
        /// <remarks/>
        public string Descr1 {
            get {
                return this.descr1Field;
            }
            set {
                this.descr1Field = value;
            }
        }
        
        /// <remarks/>
        public string Descr2 {
            get {
                return this.descr2Field;
            }
            set {
                this.descr2Field = value;
            }
        }
        
        /// <remarks/>
        public string SerialNoStr {
            get {
                return this.serialNoStrField;
            }
            set {
                this.serialNoStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeSessionAuthenticationPackage {
        
        private string preAuthPackageField;
        
        private int enforcementModeField;
        
        private string remoteAddrField;
        
        private string userAgentField;
        
        private string clientCertField;
        
        private bool expireImmediatelyField;
        
        private bool miniHeaderField;
        
        private string subIFrameField;
        
        /// <remarks/>
        public string PreAuthPackage {
            get {
                return this.preAuthPackageField;
            }
            set {
                this.preAuthPackageField = value;
            }
        }
        
        /// <remarks/>
        public int EnforcementMode {
            get {
                return this.enforcementModeField;
            }
            set {
                this.enforcementModeField = value;
            }
        }
        
        /// <remarks/>
        public string RemoteAddr {
            get {
                return this.remoteAddrField;
            }
            set {
                this.remoteAddrField = value;
            }
        }
        
        /// <remarks/>
        public string UserAgent {
            get {
                return this.userAgentField;
            }
            set {
                this.userAgentField = value;
            }
        }
        
        /// <remarks/>
        public string ClientCert {
            get {
                return this.clientCertField;
            }
            set {
                this.clientCertField = value;
            }
        }
        
        /// <remarks/>
        public bool ExpireImmediately {
            get {
                return this.expireImmediatelyField;
            }
            set {
                this.expireImmediatelyField = value;
            }
        }
        
        /// <remarks/>
        public bool MiniHeader {
            get {
                return this.miniHeaderField;
            }
            set {
                this.miniHeaderField = value;
            }
        }
        
        /// <remarks/>
        public string SubIFrame {
            get {
                return this.subIFrameField;
            }
            set {
                this.subIFrameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeAuthenticationPackage {
        
        private string authGUIDField;
        
        private string accountCodeField;
        
        private string domainAccountField;
        
        private string passwordField;
        
        private string friendlyNameField;
        
        private string vendorTokenField;
        
        private string eMailAddressField;
        
        private string sendBackPackageField;
        
        private int authTypeField;
        
        private int stateField;
        
        private int uniqueIDField;
        
        private int preAuthActionField;
        
        /// <remarks/>
        public string AuthGUID {
            get {
                return this.authGUIDField;
            }
            set {
                this.authGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DomainAccount {
            get {
                return this.domainAccountField;
            }
            set {
                this.domainAccountField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        public string VendorToken {
            get {
                return this.vendorTokenField;
            }
            set {
                this.vendorTokenField = value;
            }
        }
        
        /// <remarks/>
        public string eMailAddress {
            get {
                return this.eMailAddressField;
            }
            set {
                this.eMailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string SendBackPackage {
            get {
                return this.sendBackPackageField;
            }
            set {
                this.sendBackPackageField = value;
            }
        }
        
        /// <remarks/>
        public int AuthType {
            get {
                return this.authTypeField;
            }
            set {
                this.authTypeField = value;
            }
        }
        
        /// <remarks/>
        public int State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int PreAuthAction {
            get {
                return this.preAuthActionField;
            }
            set {
                this.preAuthActionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayDesMapping {
        
        private int payDesNumField;
        
        private string label1Field;
        
        private string label2Field;
        
        private string label3Field;
        
        private double rateFactorField;
        
        private int groupIDField;
        
        private int thresholdMinField;
        
        private int thresholdMaxField;
        
        private int behavesAsField;
        
        /// <remarks/>
        public int PayDesNum {
            get {
                return this.payDesNumField;
            }
            set {
                this.payDesNumField = value;
            }
        }
        
        /// <remarks/>
        public string Label1 {
            get {
                return this.label1Field;
            }
            set {
                this.label1Field = value;
            }
        }
        
        /// <remarks/>
        public string Label2 {
            get {
                return this.label2Field;
            }
            set {
                this.label2Field = value;
            }
        }
        
        /// <remarks/>
        public string Label3 {
            get {
                return this.label3Field;
            }
            set {
                this.label3Field = value;
            }
        }
        
        /// <remarks/>
        public double RateFactor {
            get {
                return this.rateFactorField;
            }
            set {
                this.rateFactorField = value;
            }
        }
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public int ThresholdMin {
            get {
                return this.thresholdMinField;
            }
            set {
                this.thresholdMinField = value;
            }
        }
        
        /// <remarks/>
        public int ThresholdMax {
            get {
                return this.thresholdMaxField;
            }
            set {
                this.thresholdMaxField = value;
            }
        }
        
        /// <remarks/>
        public int BehavesAs {
            get {
                return this.behavesAsField;
            }
            set {
                this.behavesAsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayDesMappingSet {
        
        private string globalMappingSetNameField;
        
        private bool includeUndefinedField;
        
        private bool includeRatesField;
        
        private bool includeWGsField;
        
        private int wGRenderingFormulaField;
        
        private string itemDataField;
        
        /// <remarks/>
        public string GlobalMappingSetName {
            get {
                return this.globalMappingSetNameField;
            }
            set {
                this.globalMappingSetNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IncludeUndefined {
            get {
                return this.includeUndefinedField;
            }
            set {
                this.includeUndefinedField = value;
            }
        }
        
        /// <remarks/>
        public bool IncludeRates {
            get {
                return this.includeRatesField;
            }
            set {
                this.includeRatesField = value;
            }
        }
        
        /// <remarks/>
        public bool IncludeWGs {
            get {
                return this.includeWGsField;
            }
            set {
                this.includeWGsField = value;
            }
        }
        
        /// <remarks/>
        public int WGRenderingFormula {
            get {
                return this.wGRenderingFormulaField;
            }
            set {
                this.wGRenderingFormulaField = value;
            }
        }
        
        /// <remarks/>
        public string ItemData {
            get {
                return this.itemDataField;
            }
            set {
                this.itemDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeWorkgroupXLate {
        
        private string wGExtIDField;
        
        private string wGExtDescrField;
        
        private int wG1Field;
        
        private int wG2Field;
        
        private int wG3Field;
        
        private int wG4Field;
        
        private int wG5Field;
        
        private int wG6Field;
        
        private int wG7Field;
        
        /// <remarks/>
        public string WGExtID {
            get {
                return this.wGExtIDField;
            }
            set {
                this.wGExtIDField = value;
            }
        }
        
        /// <remarks/>
        public string WGExtDescr {
            get {
                return this.wGExtDescrField;
            }
            set {
                this.wGExtDescrField = value;
            }
        }
        
        /// <remarks/>
        public int WG1 {
            get {
                return this.wG1Field;
            }
            set {
                this.wG1Field = value;
            }
        }
        
        /// <remarks/>
        public int WG2 {
            get {
                return this.wG2Field;
            }
            set {
                this.wG2Field = value;
            }
        }
        
        /// <remarks/>
        public int WG3 {
            get {
                return this.wG3Field;
            }
            set {
                this.wG3Field = value;
            }
        }
        
        /// <remarks/>
        public int WG4 {
            get {
                return this.wG4Field;
            }
            set {
                this.wG4Field = value;
            }
        }
        
        /// <remarks/>
        public int WG5 {
            get {
                return this.wG5Field;
            }
            set {
                this.wG5Field = value;
            }
        }
        
        /// <remarks/>
        public int WG6 {
            get {
                return this.wG6Field;
            }
            set {
                this.wG6Field = value;
            }
        }
        
        /// <remarks/>
        public int WG7 {
            get {
                return this.wG7Field;
            }
            set {
                this.wG7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeExchangeStruct {
        
        private string rawDataField;
        
        private string lineSepField;
        
        private string fieldSepField;
        
        private int itemIDField;
        
        /// <remarks/>
        public string RawData {
            get {
                return this.rawDataField;
            }
            set {
                this.rawDataField = value;
            }
        }
        
        /// <remarks/>
        public string LineSep {
            get {
                return this.lineSepField;
            }
            set {
                this.lineSepField = value;
            }
        }
        
        /// <remarks/>
        public string FieldSep {
            get {
                return this.fieldSepField;
            }
            set {
                this.fieldSepField = value;
            }
        }
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeTimeOffRequestState {
        
        private int uniqueIDField;
        
        private int stateIDField;
        
        private TRTOUsageStateEnum usageStateField;
        
        private int approvalIDField;
        
        private string descrField;
        
        private string abbField;
        
        private string createdField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int StateID {
            get {
                return this.stateIDField;
            }
            set {
                this.stateIDField = value;
            }
        }
        
        /// <remarks/>
        public TRTOUsageStateEnum UsageState {
            get {
                return this.usageStateField;
            }
            set {
                this.usageStateField = value;
            }
        }
        
        /// <remarks/>
        public int ApprovalID {
            get {
                return this.approvalIDField;
            }
            set {
                this.approvalIDField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string Abb {
            get {
                return this.abbField;
            }
            set {
                this.abbField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TRTOUsageStateEnum {
        
        /// <remarks/>
        rusSubmitted,
        
        /// <remarks/>
        rusPending,
        
        /// <remarks/>
        rusClosed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeShiftSchedule {
        
        private string schDateField;
        
        private string schStartTimeField;
        
        private string schEndTimeField;
        
        private int schHoursField;
        
        private double schRateField;
        
        private double schHoursHundField;
        
        private TSchTypeEnum schTypeField;
        
        private int schStyleField;
        
        private int schPattIDField;
        
        private int benefitIDField;
        
        private int payDesIDField;
        
        private int schWG1Field;
        
        private int schWG2Field;
        
        private int schWG3Field;
        
        private int schWG4Field;
        
        private int schWG5Field;
        
        private int schWG6Field;
        
        private int schWG7Field;
        
        private string schWGDescrField;
        
        private int shiftPosIndexField;
        
        /// <remarks/>
        public string SchDate {
            get {
                return this.schDateField;
            }
            set {
                this.schDateField = value;
            }
        }
        
        /// <remarks/>
        public string SchStartTime {
            get {
                return this.schStartTimeField;
            }
            set {
                this.schStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public string SchEndTime {
            get {
                return this.schEndTimeField;
            }
            set {
                this.schEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public int SchHours {
            get {
                return this.schHoursField;
            }
            set {
                this.schHoursField = value;
            }
        }
        
        /// <remarks/>
        public double SchRate {
            get {
                return this.schRateField;
            }
            set {
                this.schRateField = value;
            }
        }
        
        /// <remarks/>
        public double SchHoursHund {
            get {
                return this.schHoursHundField;
            }
            set {
                this.schHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public TSchTypeEnum SchType {
            get {
                return this.schTypeField;
            }
            set {
                this.schTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SchStyle {
            get {
                return this.schStyleField;
            }
            set {
                this.schStyleField = value;
            }
        }
        
        /// <remarks/>
        public int SchPattID {
            get {
                return this.schPattIDField;
            }
            set {
                this.schPattIDField = value;
            }
        }
        
        /// <remarks/>
        public int BenefitID {
            get {
                return this.benefitIDField;
            }
            set {
                this.benefitIDField = value;
            }
        }
        
        /// <remarks/>
        public int PayDesID {
            get {
                return this.payDesIDField;
            }
            set {
                this.payDesIDField = value;
            }
        }
        
        /// <remarks/>
        public int SchWG1 {
            get {
                return this.schWG1Field;
            }
            set {
                this.schWG1Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG2 {
            get {
                return this.schWG2Field;
            }
            set {
                this.schWG2Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG3 {
            get {
                return this.schWG3Field;
            }
            set {
                this.schWG3Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG4 {
            get {
                return this.schWG4Field;
            }
            set {
                this.schWG4Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG5 {
            get {
                return this.schWG5Field;
            }
            set {
                this.schWG5Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG6 {
            get {
                return this.schWG6Field;
            }
            set {
                this.schWG6Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG7 {
            get {
                return this.schWG7Field;
            }
            set {
                this.schWG7Field = value;
            }
        }
        
        /// <remarks/>
        public string SchWGDescr {
            get {
                return this.schWGDescrField;
            }
            set {
                this.schWGDescrField = value;
            }
        }
        
        /// <remarks/>
        public int ShiftPosIndex {
            get {
                return this.shiftPosIndexField;
            }
            set {
                this.shiftPosIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TSchTypeEnum {
        
        /// <remarks/>
        steNormal,
        
        /// <remarks/>
        steFlex,
        
        /// <remarks/>
        steAbsPlnBen,
        
        /// <remarks/>
        steAbsPlnPayDes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeShiftTransaction {
        
        private string timeStampField;
        
        private int stationField;
        
        private int transTypeField;
        
        private int shiftPosIndexField;
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public int Station {
            get {
                return this.stationField;
            }
            set {
                this.stationField = value;
            }
        }
        
        /// <remarks/>
        public int TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ShiftPosIndex {
            get {
                return this.shiftPosIndexField;
            }
            set {
                this.shiftPosIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeShiftLineDetail {
        
        private string dateField;
        
        private int transactionCountField;
        
        private string firstPunchField;
        
        private string lastPunchField;
        
        private string schStartField;
        
        private string schEndField;
        
        private string exceptionDescrField;
        
        private int dopField;
        
        private int dowField;
        
        private TDayOfWeekEnum dayOfWeekField;
        
        private int shiftNumField;
        
        private int shiftStyleField;
        
        private int shiftSchField;
        
        private int hoursField;
        
        private double hoursHundField;
        
        private int grossHoursField;
        
        private double grossHoursHundField;
        
        private int schHoursField;
        
        private double schHoursHundField;
        
        private int posIndexField;
        
        private int schStyleField;
        
        private TSchTypeEnum schTypeField;
        
        private double schRateField;
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public int TransactionCount {
            get {
                return this.transactionCountField;
            }
            set {
                this.transactionCountField = value;
            }
        }
        
        /// <remarks/>
        public string FirstPunch {
            get {
                return this.firstPunchField;
            }
            set {
                this.firstPunchField = value;
            }
        }
        
        /// <remarks/>
        public string LastPunch {
            get {
                return this.lastPunchField;
            }
            set {
                this.lastPunchField = value;
            }
        }
        
        /// <remarks/>
        public string SchStart {
            get {
                return this.schStartField;
            }
            set {
                this.schStartField = value;
            }
        }
        
        /// <remarks/>
        public string SchEnd {
            get {
                return this.schEndField;
            }
            set {
                this.schEndField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionDescr {
            get {
                return this.exceptionDescrField;
            }
            set {
                this.exceptionDescrField = value;
            }
        }
        
        /// <remarks/>
        public int Dop {
            get {
                return this.dopField;
            }
            set {
                this.dopField = value;
            }
        }
        
        /// <remarks/>
        public int Dow {
            get {
                return this.dowField;
            }
            set {
                this.dowField = value;
            }
        }
        
        /// <remarks/>
        public TDayOfWeekEnum DayOfWeek {
            get {
                return this.dayOfWeekField;
            }
            set {
                this.dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public int ShiftNum {
            get {
                return this.shiftNumField;
            }
            set {
                this.shiftNumField = value;
            }
        }
        
        /// <remarks/>
        public int ShiftStyle {
            get {
                return this.shiftStyleField;
            }
            set {
                this.shiftStyleField = value;
            }
        }
        
        /// <remarks/>
        public int ShiftSch {
            get {
                return this.shiftSchField;
            }
            set {
                this.shiftSchField = value;
            }
        }
        
        /// <remarks/>
        public int Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public double HoursHund {
            get {
                return this.hoursHundField;
            }
            set {
                this.hoursHundField = value;
            }
        }
        
        /// <remarks/>
        public int GrossHours {
            get {
                return this.grossHoursField;
            }
            set {
                this.grossHoursField = value;
            }
        }
        
        /// <remarks/>
        public double GrossHoursHund {
            get {
                return this.grossHoursHundField;
            }
            set {
                this.grossHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public int SchHours {
            get {
                return this.schHoursField;
            }
            set {
                this.schHoursField = value;
            }
        }
        
        /// <remarks/>
        public double SchHoursHund {
            get {
                return this.schHoursHundField;
            }
            set {
                this.schHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public int PosIndex {
            get {
                return this.posIndexField;
            }
            set {
                this.posIndexField = value;
            }
        }
        
        /// <remarks/>
        public int SchStyle {
            get {
                return this.schStyleField;
            }
            set {
                this.schStyleField = value;
            }
        }
        
        /// <remarks/>
        public TSchTypeEnum SchType {
            get {
                return this.schTypeField;
            }
            set {
                this.schTypeField = value;
            }
        }
        
        /// <remarks/>
        public double SchRate {
            get {
                return this.schRateField;
            }
            set {
                this.schRateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TDayOfWeekEnum {
        
        /// <remarks/>
        dowSunday,
        
        /// <remarks/>
        dowMonday,
        
        /// <remarks/>
        dowTuesday,
        
        /// <remarks/>
        dowWednesday,
        
        /// <remarks/>
        dowThursday,
        
        /// <remarks/>
        dowFriday,
        
        /// <remarks/>
        dowSaturday,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeBillingItem {
        
        private int uniqueIDField;
        
        private string eventDateField;
        
        private string periodBeginField;
        
        private string periodEndField;
        
        private string descrField;
        
        private int instancesField;
        
        private int itemTypeField;
        
        private double itemValueField;
        
        private double itemTotalField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public string PeriodBegin {
            get {
                return this.periodBeginField;
            }
            set {
                this.periodBeginField = value;
            }
        }
        
        /// <remarks/>
        public string PeriodEnd {
            get {
                return this.periodEndField;
            }
            set {
                this.periodEndField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public int Instances {
            get {
                return this.instancesField;
            }
            set {
                this.instancesField = value;
            }
        }
        
        /// <remarks/>
        public int ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public double ItemValue {
            get {
                return this.itemValueField;
            }
            set {
                this.itemValueField = value;
            }
        }
        
        /// <remarks/>
        public double ItemTotal {
            get {
                return this.itemTotalField;
            }
            set {
                this.itemTotalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeTimeClockStation {
        
        private int stationNumField;
        
        private int terminalTypeField;
        
        private int uniqueIDField;
        
        private string stationNameField;
        
        private string serialNoField;
        
        private string createdField;
        
        private int syncModeField;
        
        private int syncIntervalField;
        
        private int syncOffsetField;
        
        private int logFlagsField;
        
        private int capacityField;
        
        private string clockPropsField;
        
        /// <remarks/>
        public int StationNum {
            get {
                return this.stationNumField;
            }
            set {
                this.stationNumField = value;
            }
        }
        
        /// <remarks/>
        public int TerminalType {
            get {
                return this.terminalTypeField;
            }
            set {
                this.terminalTypeField = value;
            }
        }
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string StationName {
            get {
                return this.stationNameField;
            }
            set {
                this.stationNameField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNo {
            get {
                return this.serialNoField;
            }
            set {
                this.serialNoField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public int SyncMode {
            get {
                return this.syncModeField;
            }
            set {
                this.syncModeField = value;
            }
        }
        
        /// <remarks/>
        public int SyncInterval {
            get {
                return this.syncIntervalField;
            }
            set {
                this.syncIntervalField = value;
            }
        }
        
        /// <remarks/>
        public int SyncOffset {
            get {
                return this.syncOffsetField;
            }
            set {
                this.syncOffsetField = value;
            }
        }
        
        /// <remarks/>
        public int LogFlags {
            get {
                return this.logFlagsField;
            }
            set {
                this.logFlagsField = value;
            }
        }
        
        /// <remarks/>
        public int Capacity {
            get {
                return this.capacityField;
            }
            set {
                this.capacityField = value;
            }
        }
        
        /// <remarks/>
        public string ClockProps {
            get {
                return this.clockPropsField;
            }
            set {
                this.clockPropsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeAccessAccountActivity {
        
        private string eventDateField;
        
        private int operationField;
        
        private int sourceField;
        
        private int uniqueIDField;
        
        private string userNameField;
        
        private string expiresField;
        
        /// <remarks/>
        public string EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public int Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public int Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeUsageItem {
        
        private string eventDateField;
        
        private int instancesField;
        
        private int usageItemIDField;
        
        private double itemValueField;
        
        /// <remarks/>
        public string EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public int Instances {
            get {
                return this.instancesField;
            }
            set {
                this.instancesField = value;
            }
        }
        
        /// <remarks/>
        public int UsageItemID {
            get {
                return this.usageItemIDField;
            }
            set {
                this.usageItemIDField = value;
            }
        }
        
        /// <remarks/>
        public double ItemValue {
            get {
                return this.itemValueField;
            }
            set {
                this.itemValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeRateAssignment {
        
        private int uniqueIDField;
        
        private int filekeyField;
        
        private string empIDField;
        
        private double rateField;
        
        private int payTypeField;
        
        private string rateEffDateField;
        
        private string commentsField;
        
        private int isCurrentField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public int PayType {
            get {
                return this.payTypeField;
            }
            set {
                this.payTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RateEffDate {
            get {
                return this.rateEffDateField;
            }
            set {
                this.rateEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int IsCurrent {
            get {
                return this.isCurrentField;
            }
            set {
                this.isCurrentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeWorkgroupSet {
        
        private int wG1Field;
        
        private int wG2Field;
        
        private int wG3Field;
        
        private int wG4Field;
        
        private int wG5Field;
        
        private int wG6Field;
        
        private int wG7Field;
        
        /// <remarks/>
        public int WG1 {
            get {
                return this.wG1Field;
            }
            set {
                this.wG1Field = value;
            }
        }
        
        /// <remarks/>
        public int WG2 {
            get {
                return this.wG2Field;
            }
            set {
                this.wG2Field = value;
            }
        }
        
        /// <remarks/>
        public int WG3 {
            get {
                return this.wG3Field;
            }
            set {
                this.wG3Field = value;
            }
        }
        
        /// <remarks/>
        public int WG4 {
            get {
                return this.wG4Field;
            }
            set {
                this.wG4Field = value;
            }
        }
        
        /// <remarks/>
        public int WG5 {
            get {
                return this.wG5Field;
            }
            set {
                this.wG5Field = value;
            }
        }
        
        /// <remarks/>
        public int WG6 {
            get {
                return this.wG6Field;
            }
            set {
                this.wG6Field = value;
            }
        }
        
        /// <remarks/>
        public int WG7 {
            get {
                return this.wG7Field;
            }
            set {
                this.wG7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayPeriodCloseInfo {
        
        private string hintInfoField;
        
        private int openIssuesField;
        
        private int openCriticalIssuesField;
        
        private int payPeriodClassNumField;
        
        /// <remarks/>
        public string HintInfo {
            get {
                return this.hintInfoField;
            }
            set {
                this.hintInfoField = value;
            }
        }
        
        /// <remarks/>
        public int OpenIssues {
            get {
                return this.openIssuesField;
            }
            set {
                this.openIssuesField = value;
            }
        }
        
        /// <remarks/>
        public int OpenCriticalIssues {
            get {
                return this.openCriticalIssuesField;
            }
            set {
                this.openCriticalIssuesField = value;
            }
        }
        
        /// <remarks/>
        public int PayPeriodClassNum {
            get {
                return this.payPeriodClassNumField;
            }
            set {
                this.payPeriodClassNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeClientVendorOpResults {
        
        private string fileContentsField;
        
        private string fileNameField;
        
        /// <remarks/>
        public string FileContents {
            get {
                return this.fileContentsField;
            }
            set {
                this.fileContentsField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeTransaction {
        
        private string timeStampField;
        
        private int stationField;
        
        private int transTypeField;
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public int Station {
            get {
                return this.stationField;
            }
            set {
                this.stationField = value;
            }
        }
        
        /// <remarks/>
        public int TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeWorkgroup {
        
        private int wGLevelField;
        
        private int wGNumField;
        
        private string wGNameField;
        
        private string wGCodeField;
        
        private double wGRateField;
        
        private string expiresField;
        
        /// <remarks/>
        public int WGLevel {
            get {
                return this.wGLevelField;
            }
            set {
                this.wGLevelField = value;
            }
        }
        
        /// <remarks/>
        public int WGNum {
            get {
                return this.wGNumField;
            }
            set {
                this.wGNumField = value;
            }
        }
        
        /// <remarks/>
        public string WGName {
            get {
                return this.wGNameField;
            }
            set {
                this.wGNameField = value;
            }
        }
        
        /// <remarks/>
        public string WGCode {
            get {
                return this.wGCodeField;
            }
            set {
                this.wGCodeField = value;
            }
        }
        
        /// <remarks/>
        public double WGRate {
            get {
                return this.wGRateField;
            }
            set {
                this.wGRateField = value;
            }
        }
        
        /// <remarks/>
        public string Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeWorkgroupLevel {
        
        private int wGLevelField;
        
        private string wGLevelNameField;
        
        private string wGLevelPluralNameField;
        
        /// <remarks/>
        public int WGLevel {
            get {
                return this.wGLevelField;
            }
            set {
                this.wGLevelField = value;
            }
        }
        
        /// <remarks/>
        public string WGLevelName {
            get {
                return this.wGLevelNameField;
            }
            set {
                this.wGLevelNameField = value;
            }
        }
        
        /// <remarks/>
        public string WGLevelPluralName {
            get {
                return this.wGLevelPluralNameField;
            }
            set {
                this.wGLevelPluralNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeRatePayTypeAssignment {
        
        private int filekeyField;
        
        private string empIDField;
        
        private string rateEffDateField;
        
        private string payTypeEffDateField;
        
        private string commentsField;
        
        private int payTypeIDField;
        
        private double rateField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public string RateEffDate {
            get {
                return this.rateEffDateField;
            }
            set {
                this.rateEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string PayTypeEffDate {
            get {
                return this.payTypeEffDateField;
            }
            set {
                this.payTypeEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int PayTypeID {
            get {
                return this.payTypeIDField;
            }
            set {
                this.payTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeWorkgroupAssignment {
        
        private int filekeyField;
        
        private string empIDField;
        
        private string effDateField;
        
        private string commentsField;
        
        private int wG1Field;
        
        private int wG2Field;
        
        private int wG3Field;
        
        private int wG4Field;
        
        private int wG5Field;
        
        private int wG6Field;
        
        private int wG7Field;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public string EffDate {
            get {
                return this.effDateField;
            }
            set {
                this.effDateField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int WG1 {
            get {
                return this.wG1Field;
            }
            set {
                this.wG1Field = value;
            }
        }
        
        /// <remarks/>
        public int WG2 {
            get {
                return this.wG2Field;
            }
            set {
                this.wG2Field = value;
            }
        }
        
        /// <remarks/>
        public int WG3 {
            get {
                return this.wG3Field;
            }
            set {
                this.wG3Field = value;
            }
        }
        
        /// <remarks/>
        public int WG4 {
            get {
                return this.wG4Field;
            }
            set {
                this.wG4Field = value;
            }
        }
        
        /// <remarks/>
        public int WG5 {
            get {
                return this.wG5Field;
            }
            set {
                this.wG5Field = value;
            }
        }
        
        /// <remarks/>
        public int WG6 {
            get {
                return this.wG6Field;
            }
            set {
                this.wG6Field = value;
            }
        }
        
        /// <remarks/>
        public int WG7 {
            get {
                return this.wG7Field;
            }
            set {
                this.wG7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmpGeoRegistration))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmployeeACA))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeTimeOffRequestHist))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeSchedule2))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeMultiForm))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeTimeOffRequest))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmpBenefitActivity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmpTransaction))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEdit))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeSchedule))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAePayLine))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmployeeDetail))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmployeeDetail2))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeShiftLineSimple))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmployeeBasic {
        
        private string empNameField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string initialField;
        
        private string empIDField;
        
        private string sSNField;
        
        private int badgeField;
        
        private int filekeyField;
        
        private int activeStatusField;
        
        private string dateOfHireField;
        
        private int wG1Field;
        
        private int wG2Field;
        
        private int wG3Field;
        
        private int wG4Field;
        
        private int wG5Field;
        
        private int wG6Field;
        
        private int wG7Field;
        
        private string wGDescrField;
        
        /// <remarks/>
        public string EmpName {
            get {
                return this.empNameField;
            }
            set {
                this.empNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Initial {
            get {
                return this.initialField;
            }
            set {
                this.initialField = value;
            }
        }
        
        /// <remarks/>
        public string EmpID {
            get {
                return this.empIDField;
            }
            set {
                this.empIDField = value;
            }
        }
        
        /// <remarks/>
        public string SSN {
            get {
                return this.sSNField;
            }
            set {
                this.sSNField = value;
            }
        }
        
        /// <remarks/>
        public int Badge {
            get {
                return this.badgeField;
            }
            set {
                this.badgeField = value;
            }
        }
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public int ActiveStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DateOfHire {
            get {
                return this.dateOfHireField;
            }
            set {
                this.dateOfHireField = value;
            }
        }
        
        /// <remarks/>
        public int WG1 {
            get {
                return this.wG1Field;
            }
            set {
                this.wG1Field = value;
            }
        }
        
        /// <remarks/>
        public int WG2 {
            get {
                return this.wG2Field;
            }
            set {
                this.wG2Field = value;
            }
        }
        
        /// <remarks/>
        public int WG3 {
            get {
                return this.wG3Field;
            }
            set {
                this.wG3Field = value;
            }
        }
        
        /// <remarks/>
        public int WG4 {
            get {
                return this.wG4Field;
            }
            set {
                this.wG4Field = value;
            }
        }
        
        /// <remarks/>
        public int WG5 {
            get {
                return this.wG5Field;
            }
            set {
                this.wG5Field = value;
            }
        }
        
        /// <remarks/>
        public int WG6 {
            get {
                return this.wG6Field;
            }
            set {
                this.wG6Field = value;
            }
        }
        
        /// <remarks/>
        public int WG7 {
            get {
                return this.wG7Field;
            }
            set {
                this.wG7Field = value;
            }
        }
        
        /// <remarks/>
        public string WGDescr {
            get {
                return this.wGDescrField;
            }
            set {
                this.wGDescrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpGeoRegistration : TAeEmployeeBasic {
        
        private string timeStampField;
        
        private int successCodeField;
        
        private int collTypeField;
        
        private int sourceField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private double accuracyField;
        
        private double altitudeField;
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public int SuccessCode {
            get {
                return this.successCodeField;
            }
            set {
                this.successCodeField = value;
            }
        }
        
        /// <remarks/>
        public int CollType {
            get {
                return this.collTypeField;
            }
            set {
                this.collTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Accuracy {
            get {
                return this.accuracyField;
            }
            set {
                this.accuracyField = value;
            }
        }
        
        /// <remarks/>
        public double Altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmployeeACA : TAeEmployeeBasic {
        
        private int fullTimeStatusIDField;
        
        private string fullTimeStatusEffDateField;
        
        private string fullTimeStatusEffEndField;
        
        private string serviceStartField;
        
        private string mPBeginDateField;
        
        private string mPEndDateField;
        
        private int controlGroupIDField;
        
        private TAeEmpACAMPeriodMode mPeriodModeField;
        
        private TAeEmpACAAutoApplyACAOptions autoApplyField;
        
        private TAeEmpACANoReviewOptions noReviewField;
        
        private TAeEmpACASeasonalOptions seasonalField;
        
        private int authCodeField;
        
        /// <remarks/>
        public int FullTimeStatusID {
            get {
                return this.fullTimeStatusIDField;
            }
            set {
                this.fullTimeStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public string FullTimeStatusEffDate {
            get {
                return this.fullTimeStatusEffDateField;
            }
            set {
                this.fullTimeStatusEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string FullTimeStatusEffEnd {
            get {
                return this.fullTimeStatusEffEndField;
            }
            set {
                this.fullTimeStatusEffEndField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceStart {
            get {
                return this.serviceStartField;
            }
            set {
                this.serviceStartField = value;
            }
        }
        
        /// <remarks/>
        public string MPBeginDate {
            get {
                return this.mPBeginDateField;
            }
            set {
                this.mPBeginDateField = value;
            }
        }
        
        /// <remarks/>
        public string MPEndDate {
            get {
                return this.mPEndDateField;
            }
            set {
                this.mPEndDateField = value;
            }
        }
        
        /// <remarks/>
        public int ControlGroupID {
            get {
                return this.controlGroupIDField;
            }
            set {
                this.controlGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public TAeEmpACAMPeriodMode MPeriodMode {
            get {
                return this.mPeriodModeField;
            }
            set {
                this.mPeriodModeField = value;
            }
        }
        
        /// <remarks/>
        public TAeEmpACAAutoApplyACAOptions AutoApply {
            get {
                return this.autoApplyField;
            }
            set {
                this.autoApplyField = value;
            }
        }
        
        /// <remarks/>
        public TAeEmpACANoReviewOptions NoReview {
            get {
                return this.noReviewField;
            }
            set {
                this.noReviewField = value;
            }
        }
        
        /// <remarks/>
        public TAeEmpACASeasonalOptions Seasonal {
            get {
                return this.seasonalField;
            }
            set {
                this.seasonalField = value;
            }
        }
        
        /// <remarks/>
        public int AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAeEmpACAMPeriodMode {
        
        /// <remarks/>
        eampMPControlGroup,
        
        /// <remarks/>
        eampMPInitial,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAeEmpACAAutoApplyACAOptions {
        
        /// <remarks/>
        eaaEnabledAlways,
        
        /// <remarks/>
        eaaDisabled,
        
        /// <remarks/>
        eaaEnabledOnFullTime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAeEmpACANoReviewOptions {
        
        /// <remarks/>
        eanrNormal,
        
        /// <remarks/>
        eanrPermFT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAeEmpACASeasonalOptions {
        
        /// <remarks/>
        easNormal,
        
        /// <remarks/>
        easSeasonal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeTimeOffRequestHist : TAeEmployeeBasic {
        
        private int filekeyField;
        
        private int uniqueIDField;
        
        private int rTOUniqueIDField;
        
        private int eventTypeField;
        
        private string eventDateField;
        
        private string tSDateTimeField;
        
        private string userNameField;
        
        private string commentsField;
        
        private string userDataField;
        
        /// <remarks/>
        public int Filekey {
            get {
                return this.filekeyField;
            }
            set {
                this.filekeyField = value;
            }
        }
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int RTOUniqueID {
            get {
                return this.rTOUniqueIDField;
            }
            set {
                this.rTOUniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public string EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public string TSDateTime {
            get {
                return this.tSDateTimeField;
            }
            set {
                this.tSDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public string UserData {
            get {
                return this.userDataField;
            }
            set {
                this.userDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeSchedule2 : TAeEmployeeBasic {
        
        private int uniqueIDField;
        
        private string schDateField;
        
        private string schStartTimeField;
        
        private string schEndTimeField;
        
        private int schHoursField;
        
        private double schRateField;
        
        private double schHoursHundField;
        
        private TSchTypeEnum schTypeField;
        
        private int schStyleField;
        
        private int schPattIDField;
        
        private int benefitIDField;
        
        private int payDesIDField;
        
        private int schWG1Field;
        
        private int schWG2Field;
        
        private int schWG3Field;
        
        private int schWG4Field;
        
        private int schWG5Field;
        
        private int schWG6Field;
        
        private int schWG7Field;
        
        private string schWGDescrField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public string SchDate {
            get {
                return this.schDateField;
            }
            set {
                this.schDateField = value;
            }
        }
        
        /// <remarks/>
        public string SchStartTime {
            get {
                return this.schStartTimeField;
            }
            set {
                this.schStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public string SchEndTime {
            get {
                return this.schEndTimeField;
            }
            set {
                this.schEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public int SchHours {
            get {
                return this.schHoursField;
            }
            set {
                this.schHoursField = value;
            }
        }
        
        /// <remarks/>
        public double SchRate {
            get {
                return this.schRateField;
            }
            set {
                this.schRateField = value;
            }
        }
        
        /// <remarks/>
        public double SchHoursHund {
            get {
                return this.schHoursHundField;
            }
            set {
                this.schHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public TSchTypeEnum SchType {
            get {
                return this.schTypeField;
            }
            set {
                this.schTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SchStyle {
            get {
                return this.schStyleField;
            }
            set {
                this.schStyleField = value;
            }
        }
        
        /// <remarks/>
        public int SchPattID {
            get {
                return this.schPattIDField;
            }
            set {
                this.schPattIDField = value;
            }
        }
        
        /// <remarks/>
        public int BenefitID {
            get {
                return this.benefitIDField;
            }
            set {
                this.benefitIDField = value;
            }
        }
        
        /// <remarks/>
        public int PayDesID {
            get {
                return this.payDesIDField;
            }
            set {
                this.payDesIDField = value;
            }
        }
        
        /// <remarks/>
        public int SchWG1 {
            get {
                return this.schWG1Field;
            }
            set {
                this.schWG1Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG2 {
            get {
                return this.schWG2Field;
            }
            set {
                this.schWG2Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG3 {
            get {
                return this.schWG3Field;
            }
            set {
                this.schWG3Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG4 {
            get {
                return this.schWG4Field;
            }
            set {
                this.schWG4Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG5 {
            get {
                return this.schWG5Field;
            }
            set {
                this.schWG5Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG6 {
            get {
                return this.schWG6Field;
            }
            set {
                this.schWG6Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG7 {
            get {
                return this.schWG7Field;
            }
            set {
                this.schWG7Field = value;
            }
        }
        
        /// <remarks/>
        public string SchWGDescr {
            get {
                return this.schWGDescrField;
            }
            set {
                this.schWGDescrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeMultiForm : TAeEmployeeBasic {
        
        private TMultiFormItemTypeEnum itemTypeField;
        
        private string dateField;
        
        private string itemData1Field;
        
        private string itemData2Field;
        
        private string itemData3Field;
        
        private string itemData4Field;
        
        private string itemData5Field;
        
        private string itemData6Field;
        
        private string itemData7Field;
        
        private string itemData8Field;
        
        /// <remarks/>
        public TMultiFormItemTypeEnum ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string ItemData1 {
            get {
                return this.itemData1Field;
            }
            set {
                this.itemData1Field = value;
            }
        }
        
        /// <remarks/>
        public string ItemData2 {
            get {
                return this.itemData2Field;
            }
            set {
                this.itemData2Field = value;
            }
        }
        
        /// <remarks/>
        public string ItemData3 {
            get {
                return this.itemData3Field;
            }
            set {
                this.itemData3Field = value;
            }
        }
        
        /// <remarks/>
        public string ItemData4 {
            get {
                return this.itemData4Field;
            }
            set {
                this.itemData4Field = value;
            }
        }
        
        /// <remarks/>
        public string ItemData5 {
            get {
                return this.itemData5Field;
            }
            set {
                this.itemData5Field = value;
            }
        }
        
        /// <remarks/>
        public string ItemData6 {
            get {
                return this.itemData6Field;
            }
            set {
                this.itemData6Field = value;
            }
        }
        
        /// <remarks/>
        public string ItemData7 {
            get {
                return this.itemData7Field;
            }
            set {
                this.itemData7Field = value;
            }
        }
        
        /// <remarks/>
        public string ItemData8 {
            get {
                return this.itemData8Field;
            }
            set {
                this.itemData8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TMultiFormItemTypeEnum {
        
        /// <remarks/>
        mfitSchedule,
        
        /// <remarks/>
        mfitShift,
        
        /// <remarks/>
        mfitShiftTransaction,
        
        /// <remarks/>
        mfitDailyPayDes,
        
        /// <remarks/>
        mfitSupEdit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeTimeOffRequest : TAeEmployeeBasic {
        
        private int uniqueIDField;
        
        private int requestUseField;
        
        private int benefitIDField;
        
        private int payDesIDField;
        
        private TRequestTimeOffTypeEnum requestTimeOffTypeEnumField;
        
        private TRTOShiftPartTypeEnum rTOShiftPartTypeEnumField;
        
        private int posTimeField;
        
        private int reqStateField;
        
        private int hoursField;
        
        private double hoursHundField;
        
        private double dollarsField;
        
        private string startDateField;
        
        private string endDateField;
        
        private string commentsField;
        
        private string createdField;
        
        private string closedOnField;
        
        private string closedByField;
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int RequestUse {
            get {
                return this.requestUseField;
            }
            set {
                this.requestUseField = value;
            }
        }
        
        /// <remarks/>
        public int BenefitID {
            get {
                return this.benefitIDField;
            }
            set {
                this.benefitIDField = value;
            }
        }
        
        /// <remarks/>
        public int PayDesID {
            get {
                return this.payDesIDField;
            }
            set {
                this.payDesIDField = value;
            }
        }
        
        /// <remarks/>
        public TRequestTimeOffTypeEnum RequestTimeOffTypeEnum {
            get {
                return this.requestTimeOffTypeEnumField;
            }
            set {
                this.requestTimeOffTypeEnumField = value;
            }
        }
        
        /// <remarks/>
        public TRTOShiftPartTypeEnum RTOShiftPartTypeEnum {
            get {
                return this.rTOShiftPartTypeEnumField;
            }
            set {
                this.rTOShiftPartTypeEnumField = value;
            }
        }
        
        /// <remarks/>
        public int PosTime {
            get {
                return this.posTimeField;
            }
            set {
                this.posTimeField = value;
            }
        }
        
        /// <remarks/>
        public int ReqState {
            get {
                return this.reqStateField;
            }
            set {
                this.reqStateField = value;
            }
        }
        
        /// <remarks/>
        public int Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public double HoursHund {
            get {
                return this.hoursHundField;
            }
            set {
                this.hoursHundField = value;
            }
        }
        
        /// <remarks/>
        public double Dollars {
            get {
                return this.dollarsField;
            }
            set {
                this.dollarsField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string ClosedOn {
            get {
                return this.closedOnField;
            }
            set {
                this.closedOnField = value;
            }
        }
        
        /// <remarks/>
        public string ClosedBy {
            get {
                return this.closedByField;
            }
            set {
                this.closedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TRequestTimeOffTypeEnum {
        
        /// <remarks/>
        rtoDays,
        
        /// <remarks/>
        rtoPartialDay,
        
        /// <remarks/>
        rtoOneDay,
        
        /// <remarks/>
        rtoExtended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TRTOShiftPartTypeEnum {
        
        /// <remarks/>
        rspBeginning,
        
        /// <remarks/>
        rspEnding,
        
        /// <remarks/>
        rspMiddle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpBenefitActivity : TAeEmployeeBasic {
        
        private int creditHoursField;
        
        private int debitHoursField;
        
        private int balanceHoursField;
        
        private double creditHoursHundField;
        
        private double debitHoursHundField;
        
        private double balanceHoursHundField;
        
        private double creditDollarsField;
        
        private double debitDollarsField;
        
        private double balanceDollarsField;
        
        private string descrField;
        
        private string abbField;
        
        private string categoryField;
        
        private string eventDateField;
        
        private bool isHoursField;
        
        private bool lastInGroupField;
        
        private int benefitIDField;
        
        /// <remarks/>
        public int CreditHours {
            get {
                return this.creditHoursField;
            }
            set {
                this.creditHoursField = value;
            }
        }
        
        /// <remarks/>
        public int DebitHours {
            get {
                return this.debitHoursField;
            }
            set {
                this.debitHoursField = value;
            }
        }
        
        /// <remarks/>
        public int BalanceHours {
            get {
                return this.balanceHoursField;
            }
            set {
                this.balanceHoursField = value;
            }
        }
        
        /// <remarks/>
        public double CreditHoursHund {
            get {
                return this.creditHoursHundField;
            }
            set {
                this.creditHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public double DebitHoursHund {
            get {
                return this.debitHoursHundField;
            }
            set {
                this.debitHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public double BalanceHoursHund {
            get {
                return this.balanceHoursHundField;
            }
            set {
                this.balanceHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public double CreditDollars {
            get {
                return this.creditDollarsField;
            }
            set {
                this.creditDollarsField = value;
            }
        }
        
        /// <remarks/>
        public double DebitDollars {
            get {
                return this.debitDollarsField;
            }
            set {
                this.debitDollarsField = value;
            }
        }
        
        /// <remarks/>
        public double BalanceDollars {
            get {
                return this.balanceDollarsField;
            }
            set {
                this.balanceDollarsField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string Abb {
            get {
                return this.abbField;
            }
            set {
                this.abbField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsHours {
            get {
                return this.isHoursField;
            }
            set {
                this.isHoursField = value;
            }
        }
        
        /// <remarks/>
        public bool LastInGroup {
            get {
                return this.lastInGroupField;
            }
            set {
                this.lastInGroupField = value;
            }
        }
        
        /// <remarks/>
        public int BenefitID {
            get {
                return this.benefitIDField;
            }
            set {
                this.benefitIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmpTransaction : TAeEmployeeBasic {
        
        private string timeStampField;
        
        private int stationField;
        
        private int transTypeField;
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public int Station {
            get {
                return this.stationField;
            }
            set {
                this.stationField = value;
            }
        }
        
        /// <remarks/>
        public int TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEdit : TAeEmployeeBasic {
        
        private string editNameDescrField;
        
        private string editOpDescrField;
        
        private string accountCodeField;
        
        private string effDateField;
        
        private string effTimeField;
        
        private string editTimeStampField;
        
        private int hoursField;
        
        private double editRateField;
        
        private double editDollarsField;
        
        private double hoursHundField;
        
        private int editTypeField;
        
        private int clkSupField;
        
        private int siteIDField;
        
        private int payDesIDField;
        
        private int prevPayDesIDField;
        
        private int reasonCodeIDField;
        
        private int editWG1Field;
        
        private int editWG2Field;
        
        private int editWG3Field;
        
        private int editWG4Field;
        
        private int editWG5Field;
        
        private int editWG6Field;
        
        private int editWG7Field;
        
        private string editWGDescrField;
        
        /// <remarks/>
        public string EditNameDescr {
            get {
                return this.editNameDescrField;
            }
            set {
                this.editNameDescrField = value;
            }
        }
        
        /// <remarks/>
        public string EditOpDescr {
            get {
                return this.editOpDescrField;
            }
            set {
                this.editOpDescrField = value;
            }
        }
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EffDate {
            get {
                return this.effDateField;
            }
            set {
                this.effDateField = value;
            }
        }
        
        /// <remarks/>
        public string EffTime {
            get {
                return this.effTimeField;
            }
            set {
                this.effTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EditTimeStamp {
            get {
                return this.editTimeStampField;
            }
            set {
                this.editTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public int Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public double EditRate {
            get {
                return this.editRateField;
            }
            set {
                this.editRateField = value;
            }
        }
        
        /// <remarks/>
        public double EditDollars {
            get {
                return this.editDollarsField;
            }
            set {
                this.editDollarsField = value;
            }
        }
        
        /// <remarks/>
        public double HoursHund {
            get {
                return this.hoursHundField;
            }
            set {
                this.hoursHundField = value;
            }
        }
        
        /// <remarks/>
        public int EditType {
            get {
                return this.editTypeField;
            }
            set {
                this.editTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ClkSup {
            get {
                return this.clkSupField;
            }
            set {
                this.clkSupField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public int PayDesID {
            get {
                return this.payDesIDField;
            }
            set {
                this.payDesIDField = value;
            }
        }
        
        /// <remarks/>
        public int PrevPayDesID {
            get {
                return this.prevPayDesIDField;
            }
            set {
                this.prevPayDesIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReasonCodeID {
            get {
                return this.reasonCodeIDField;
            }
            set {
                this.reasonCodeIDField = value;
            }
        }
        
        /// <remarks/>
        public int EditWG1 {
            get {
                return this.editWG1Field;
            }
            set {
                this.editWG1Field = value;
            }
        }
        
        /// <remarks/>
        public int EditWG2 {
            get {
                return this.editWG2Field;
            }
            set {
                this.editWG2Field = value;
            }
        }
        
        /// <remarks/>
        public int EditWG3 {
            get {
                return this.editWG3Field;
            }
            set {
                this.editWG3Field = value;
            }
        }
        
        /// <remarks/>
        public int EditWG4 {
            get {
                return this.editWG4Field;
            }
            set {
                this.editWG4Field = value;
            }
        }
        
        /// <remarks/>
        public int EditWG5 {
            get {
                return this.editWG5Field;
            }
            set {
                this.editWG5Field = value;
            }
        }
        
        /// <remarks/>
        public int EditWG6 {
            get {
                return this.editWG6Field;
            }
            set {
                this.editWG6Field = value;
            }
        }
        
        /// <remarks/>
        public int EditWG7 {
            get {
                return this.editWG7Field;
            }
            set {
                this.editWG7Field = value;
            }
        }
        
        /// <remarks/>
        public string EditWGDescr {
            get {
                return this.editWGDescrField;
            }
            set {
                this.editWGDescrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeSchedule : TAeEmployeeBasic {
        
        private string schDateField;
        
        private string schStartTimeField;
        
        private string schEndTimeField;
        
        private int schHoursField;
        
        private double schRateField;
        
        private double schHoursHundField;
        
        private TSchTypeEnum schTypeField;
        
        private int schStyleField;
        
        private int schPattIDField;
        
        private int benefitIDField;
        
        private int payDesIDField;
        
        private int schWG1Field;
        
        private int schWG2Field;
        
        private int schWG3Field;
        
        private int schWG4Field;
        
        private int schWG5Field;
        
        private int schWG6Field;
        
        private int schWG7Field;
        
        private string schWGDescrField;
        
        /// <remarks/>
        public string SchDate {
            get {
                return this.schDateField;
            }
            set {
                this.schDateField = value;
            }
        }
        
        /// <remarks/>
        public string SchStartTime {
            get {
                return this.schStartTimeField;
            }
            set {
                this.schStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public string SchEndTime {
            get {
                return this.schEndTimeField;
            }
            set {
                this.schEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public int SchHours {
            get {
                return this.schHoursField;
            }
            set {
                this.schHoursField = value;
            }
        }
        
        /// <remarks/>
        public double SchRate {
            get {
                return this.schRateField;
            }
            set {
                this.schRateField = value;
            }
        }
        
        /// <remarks/>
        public double SchHoursHund {
            get {
                return this.schHoursHundField;
            }
            set {
                this.schHoursHundField = value;
            }
        }
        
        /// <remarks/>
        public TSchTypeEnum SchType {
            get {
                return this.schTypeField;
            }
            set {
                this.schTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SchStyle {
            get {
                return this.schStyleField;
            }
            set {
                this.schStyleField = value;
            }
        }
        
        /// <remarks/>
        public int SchPattID {
            get {
                return this.schPattIDField;
            }
            set {
                this.schPattIDField = value;
            }
        }
        
        /// <remarks/>
        public int BenefitID {
            get {
                return this.benefitIDField;
            }
            set {
                this.benefitIDField = value;
            }
        }
        
        /// <remarks/>
        public int PayDesID {
            get {
                return this.payDesIDField;
            }
            set {
                this.payDesIDField = value;
            }
        }
        
        /// <remarks/>
        public int SchWG1 {
            get {
                return this.schWG1Field;
            }
            set {
                this.schWG1Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG2 {
            get {
                return this.schWG2Field;
            }
            set {
                this.schWG2Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG3 {
            get {
                return this.schWG3Field;
            }
            set {
                this.schWG3Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG4 {
            get {
                return this.schWG4Field;
            }
            set {
                this.schWG4Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG5 {
            get {
                return this.schWG5Field;
            }
            set {
                this.schWG5Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG6 {
            get {
                return this.schWG6Field;
            }
            set {
                this.schWG6Field = value;
            }
        }
        
        /// <remarks/>
        public int SchWG7 {
            get {
                return this.schWG7Field;
            }
            set {
                this.schWG7Field = value;
            }
        }
        
        /// <remarks/>
        public string SchWGDescr {
            get {
                return this.schWGDescrField;
            }
            set {
                this.schWGDescrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayLine : TAeEmployeeBasic {
        
        private double baseRateField;
        
        private string dateField;
        
        private int payDesNumField;
        
        private string payDesNameField;
        
        private int wrkWG1Field;
        
        private int wrkWG2Field;
        
        private int wrkWG3Field;
        
        private int wrkWG4Field;
        
        private int wrkWG5Field;
        
        private int wrkWG6Field;
        
        private int wrkWG7Field;
        
        private string wrkWGDescrField;
        
        private int hoursField;
        
        private double wrkRateField;
        
        private double hoursHundField;
        
        private double dollarsField;
        
        /// <remarks/>
        public double BaseRate {
            get {
                return this.baseRateField;
            }
            set {
                this.baseRateField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public int PayDesNum {
            get {
                return this.payDesNumField;
            }
            set {
                this.payDesNumField = value;
            }
        }
        
        /// <remarks/>
        public string PayDesName {
            get {
                return this.payDesNameField;
            }
            set {
                this.payDesNameField = value;
            }
        }
        
        /// <remarks/>
        public int WrkWG1 {
            get {
                return this.wrkWG1Field;
            }
            set {
                this.wrkWG1Field = value;
            }
        }
        
        /// <remarks/>
        public int WrkWG2 {
            get {
                return this.wrkWG2Field;
            }
            set {
                this.wrkWG2Field = value;
            }
        }
        
        /// <remarks/>
        public int WrkWG3 {
            get {
                return this.wrkWG3Field;
            }
            set {
                this.wrkWG3Field = value;
            }
        }
        
        /// <remarks/>
        public int WrkWG4 {
            get {
                return this.wrkWG4Field;
            }
            set {
                this.wrkWG4Field = value;
            }
        }
        
        /// <remarks/>
        public int WrkWG5 {
            get {
                return this.wrkWG5Field;
            }
            set {
                this.wrkWG5Field = value;
            }
        }
        
        /// <remarks/>
        public int WrkWG6 {
            get {
                return this.wrkWG6Field;
            }
            set {
                this.wrkWG6Field = value;
            }
        }
        
        /// <remarks/>
        public int WrkWG7 {
            get {
                return this.wrkWG7Field;
            }
            set {
                this.wrkWG7Field = value;
            }
        }
        
        /// <remarks/>
        public string WrkWGDescr {
            get {
                return this.wrkWGDescrField;
            }
            set {
                this.wrkWGDescrField = value;
            }
        }
        
        /// <remarks/>
        public int Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public double WrkRate {
            get {
                return this.wrkRateField;
            }
            set {
                this.wrkRateField = value;
            }
        }
        
        /// <remarks/>
        public double HoursHund {
            get {
                return this.hoursHundField;
            }
            set {
                this.hoursHundField = value;
            }
        }
        
        /// <remarks/>
        public double Dollars {
            get {
                return this.dollarsField;
            }
            set {
                this.dollarsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAeEmployeeDetail2))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmployeeDetail : TAeEmployeeBasic {
        
        private double currentRateField;
        
        private string currentRateEffDateField;
        
        private int activeStatusConditionIDField;
        
        private int inactiveStatusConditionIDField;
        
        private string activeStatusConditionEffDateField;
        
        private int payTypeIDField;
        
        private string payTypeEffDateField;
        
        private int payClassIDField;
        
        private string payClassEffDateField;
        
        private int schPatternIDField;
        
        private string schPatternEffDateField;
        
        private int hourlyStatusIDField;
        
        private string hourlyStatusEffDateField;
        
        private int avgWeeklyHrsField;
        
        private int clockGroupIDField;
        
        private string birthDateField;
        
        private string wGEffDateField;
        
        private string phone1Field;
        
        private string phone2Field;
        
        private string emergencyContactField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string addressCityField;
        
        private string addressStateProvField;
        
        private string addressZIPPCField;
        
        private string unionCodeField;
        
        private string staticCustom1Field;
        
        private string staticCustom2Field;
        
        private string staticCustom3Field;
        
        private string staticCustom4Field;
        
        private string staticCustom5Field;
        
        private string staticCustom6Field;
        
        /// <remarks/>
        public double CurrentRate {
            get {
                return this.currentRateField;
            }
            set {
                this.currentRateField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentRateEffDate {
            get {
                return this.currentRateEffDateField;
            }
            set {
                this.currentRateEffDateField = value;
            }
        }
        
        /// <remarks/>
        public int ActiveStatusConditionID {
            get {
                return this.activeStatusConditionIDField;
            }
            set {
                this.activeStatusConditionIDField = value;
            }
        }
        
        /// <remarks/>
        public int InactiveStatusConditionID {
            get {
                return this.inactiveStatusConditionIDField;
            }
            set {
                this.inactiveStatusConditionIDField = value;
            }
        }
        
        /// <remarks/>
        public string ActiveStatusConditionEffDate {
            get {
                return this.activeStatusConditionEffDateField;
            }
            set {
                this.activeStatusConditionEffDateField = value;
            }
        }
        
        /// <remarks/>
        public int PayTypeID {
            get {
                return this.payTypeIDField;
            }
            set {
                this.payTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string PayTypeEffDate {
            get {
                return this.payTypeEffDateField;
            }
            set {
                this.payTypeEffDateField = value;
            }
        }
        
        /// <remarks/>
        public int PayClassID {
            get {
                return this.payClassIDField;
            }
            set {
                this.payClassIDField = value;
            }
        }
        
        /// <remarks/>
        public string PayClassEffDate {
            get {
                return this.payClassEffDateField;
            }
            set {
                this.payClassEffDateField = value;
            }
        }
        
        /// <remarks/>
        public int SchPatternID {
            get {
                return this.schPatternIDField;
            }
            set {
                this.schPatternIDField = value;
            }
        }
        
        /// <remarks/>
        public string SchPatternEffDate {
            get {
                return this.schPatternEffDateField;
            }
            set {
                this.schPatternEffDateField = value;
            }
        }
        
        /// <remarks/>
        public int HourlyStatusID {
            get {
                return this.hourlyStatusIDField;
            }
            set {
                this.hourlyStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public string HourlyStatusEffDate {
            get {
                return this.hourlyStatusEffDateField;
            }
            set {
                this.hourlyStatusEffDateField = value;
            }
        }
        
        /// <remarks/>
        public int AvgWeeklyHrs {
            get {
                return this.avgWeeklyHrsField;
            }
            set {
                this.avgWeeklyHrsField = value;
            }
        }
        
        /// <remarks/>
        public int ClockGroupID {
            get {
                return this.clockGroupIDField;
            }
            set {
                this.clockGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public string BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string WGEffDate {
            get {
                return this.wGEffDateField;
            }
            set {
                this.wGEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string Phone1 {
            get {
                return this.phone1Field;
            }
            set {
                this.phone1Field = value;
            }
        }
        
        /// <remarks/>
        public string Phone2 {
            get {
                return this.phone2Field;
            }
            set {
                this.phone2Field = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyContact {
            get {
                return this.emergencyContactField;
            }
            set {
                this.emergencyContactField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressCity {
            get {
                return this.addressCityField;
            }
            set {
                this.addressCityField = value;
            }
        }
        
        /// <remarks/>
        public string AddressStateProv {
            get {
                return this.addressStateProvField;
            }
            set {
                this.addressStateProvField = value;
            }
        }
        
        /// <remarks/>
        public string AddressZIPPC {
            get {
                return this.addressZIPPCField;
            }
            set {
                this.addressZIPPCField = value;
            }
        }
        
        /// <remarks/>
        public string UnionCode {
            get {
                return this.unionCodeField;
            }
            set {
                this.unionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StaticCustom1 {
            get {
                return this.staticCustom1Field;
            }
            set {
                this.staticCustom1Field = value;
            }
        }
        
        /// <remarks/>
        public string StaticCustom2 {
            get {
                return this.staticCustom2Field;
            }
            set {
                this.staticCustom2Field = value;
            }
        }
        
        /// <remarks/>
        public string StaticCustom3 {
            get {
                return this.staticCustom3Field;
            }
            set {
                this.staticCustom3Field = value;
            }
        }
        
        /// <remarks/>
        public string StaticCustom4 {
            get {
                return this.staticCustom4Field;
            }
            set {
                this.staticCustom4Field = value;
            }
        }
        
        /// <remarks/>
        public string StaticCustom5 {
            get {
                return this.staticCustom5Field;
            }
            set {
                this.staticCustom5Field = value;
            }
        }
        
        /// <remarks/>
        public string StaticCustom6 {
            get {
                return this.staticCustom6Field;
            }
            set {
                this.staticCustom6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeEmployeeDetail2 : TAeEmployeeDetail {
        
        private string eSSPINField;
        
        private string eMAILField;
        
        private int observesDSTField;
        
        private int timeZoneOffsetField;
        
        private string spareStr1Field;
        
        private int spareInt1Field;
        
        /// <remarks/>
        public string ESSPIN {
            get {
                return this.eSSPINField;
            }
            set {
                this.eSSPINField = value;
            }
        }
        
        /// <remarks/>
        public string EMAIL {
            get {
                return this.eMAILField;
            }
            set {
                this.eMAILField = value;
            }
        }
        
        /// <remarks/>
        public int ObservesDST {
            get {
                return this.observesDSTField;
            }
            set {
                this.observesDSTField = value;
            }
        }
        
        /// <remarks/>
        public int TimeZoneOffset {
            get {
                return this.timeZoneOffsetField;
            }
            set {
                this.timeZoneOffsetField = value;
            }
        }
        
        /// <remarks/>
        public string SpareStr1 {
            get {
                return this.spareStr1Field;
            }
            set {
                this.spareStr1Field = value;
            }
        }
        
        /// <remarks/>
        public int SpareInt1 {
            get {
                return this.spareInt1Field;
            }
            set {
                this.spareInt1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeShiftLineSimple : TAeEmployeeBasic {
        
        private string dateField;
        
        private int transactionCountField;
        
        private string punch1Field;
        
        private string punch2Field;
        
        private string punch3Field;
        
        private string punch4Field;
        
        private string punch5Field;
        
        private string punch6Field;
        
        private string punch7Field;
        
        private string punch8Field;
        
        private string exceptionDescrField;
        
        private int dopField;
        
        private TDayOfWeekEnum dayOfWeekField;
        
        private int shiftNumField;
        
        private int hoursField;
        
        private double hoursHundField;
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public int TransactionCount {
            get {
                return this.transactionCountField;
            }
            set {
                this.transactionCountField = value;
            }
        }
        
        /// <remarks/>
        public string Punch1 {
            get {
                return this.punch1Field;
            }
            set {
                this.punch1Field = value;
            }
        }
        
        /// <remarks/>
        public string Punch2 {
            get {
                return this.punch2Field;
            }
            set {
                this.punch2Field = value;
            }
        }
        
        /// <remarks/>
        public string Punch3 {
            get {
                return this.punch3Field;
            }
            set {
                this.punch3Field = value;
            }
        }
        
        /// <remarks/>
        public string Punch4 {
            get {
                return this.punch4Field;
            }
            set {
                this.punch4Field = value;
            }
        }
        
        /// <remarks/>
        public string Punch5 {
            get {
                return this.punch5Field;
            }
            set {
                this.punch5Field = value;
            }
        }
        
        /// <remarks/>
        public string Punch6 {
            get {
                return this.punch6Field;
            }
            set {
                this.punch6Field = value;
            }
        }
        
        /// <remarks/>
        public string Punch7 {
            get {
                return this.punch7Field;
            }
            set {
                this.punch7Field = value;
            }
        }
        
        /// <remarks/>
        public string Punch8 {
            get {
                return this.punch8Field;
            }
            set {
                this.punch8Field = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionDescr {
            get {
                return this.exceptionDescrField;
            }
            set {
                this.exceptionDescrField = value;
            }
        }
        
        /// <remarks/>
        public int Dop {
            get {
                return this.dopField;
            }
            set {
                this.dopField = value;
            }
        }
        
        /// <remarks/>
        public TDayOfWeekEnum DayOfWeek {
            get {
                return this.dayOfWeekField;
            }
            set {
                this.dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public int ShiftNum {
            get {
                return this.shiftNumField;
            }
            set {
                this.shiftNumField = value;
            }
        }
        
        /// <remarks/>
        public int Hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public double HoursHund {
            get {
                return this.hoursHundField;
            }
            set {
                this.hoursHundField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TAePayPeriodInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayPeriodFrame {
        
        private string prevStartField;
        
        private string prevEndField;
        
        private string currStartField;
        
        private string currEndField;
        
        private string nextStartField;
        
        private string nextEndField;
        
        private string nextPostField;
        
        /// <remarks/>
        public string PrevStart {
            get {
                return this.prevStartField;
            }
            set {
                this.prevStartField = value;
            }
        }
        
        /// <remarks/>
        public string PrevEnd {
            get {
                return this.prevEndField;
            }
            set {
                this.prevEndField = value;
            }
        }
        
        /// <remarks/>
        public string CurrStart {
            get {
                return this.currStartField;
            }
            set {
                this.currStartField = value;
            }
        }
        
        /// <remarks/>
        public string CurrEnd {
            get {
                return this.currEndField;
            }
            set {
                this.currEndField = value;
            }
        }
        
        /// <remarks/>
        public string NextStart {
            get {
                return this.nextStartField;
            }
            set {
                this.nextStartField = value;
            }
        }
        
        /// <remarks/>
        public string NextEnd {
            get {
                return this.nextEndField;
            }
            set {
                this.nextEndField = value;
            }
        }
        
        /// <remarks/>
        public string NextPost {
            get {
                return this.nextPostField;
            }
            set {
                this.nextPostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAePayPeriodInfo : TAePayPeriodFrame {
        
        private int payPeriodClassNumField;
        
        private string payPeriodClassNameField;
        
        private int activeEmployeesField;
        
        private int inactiveEmployeesField;
        
        private int payPeriodLengthField;
        
        /// <remarks/>
        public int PayPeriodClassNum {
            get {
                return this.payPeriodClassNumField;
            }
            set {
                this.payPeriodClassNumField = value;
            }
        }
        
        /// <remarks/>
        public string PayPeriodClassName {
            get {
                return this.payPeriodClassNameField;
            }
            set {
                this.payPeriodClassNameField = value;
            }
        }
        
        /// <remarks/>
        public int ActiveEmployees {
            get {
                return this.activeEmployeesField;
            }
            set {
                this.activeEmployeesField = value;
            }
        }
        
        /// <remarks/>
        public int InactiveEmployees {
            get {
                return this.inactiveEmployeesField;
            }
            set {
                this.inactiveEmployeesField = value;
            }
        }
        
        /// <remarks/>
        public int PayPeriodLength {
            get {
                return this.payPeriodLengthField;
            }
            set {
                this.payPeriodLengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeBrowserMenuItem {
        
        private string menuCaptionField;
        
        private string menuHintField;
        
        private string menuGUIDField;
        
        private string menuGroupField;
        
        /// <remarks/>
        public string MenuCaption {
            get {
                return this.menuCaptionField;
            }
            set {
                this.menuCaptionField = value;
            }
        }
        
        /// <remarks/>
        public string MenuHint {
            get {
                return this.menuHintField;
            }
            set {
                this.menuHintField = value;
            }
        }
        
        /// <remarks/>
        public string MenuGUID {
            get {
                return this.menuGUIDField;
            }
            set {
                this.menuGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string MenuGroup {
            get {
                return this.menuGroupField;
            }
            set {
                this.menuGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeBasicDataItem {
        
        private string nameLabelField;
        
        private int numField;
        
        /// <remarks/>
        public string NameLabel {
            get {
                return this.nameLabelField;
            }
            set {
                this.nameLabelField = value;
            }
        }
        
        /// <remarks/>
        public int Num {
            get {
                return this.numField;
            }
            set {
                this.numField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeClientVendorOp {
        
        private bool applyOverridesField;
        
        private TDateRangeEnum dateRangeField;
        
        private string minDateField;
        
        private string maxDateField;
        
        private TDayOfWeekEnum weekBeginsField;
        
        private string biWeekBeginsField;
        
        private int payPerClassField;
        
        private string vendorOpNameField;
        
        private string vendorOpGroupField;
        
        private string vendorOpHintField;
        
        private string eMailRecipientsField;
        
        private string eMailSenderField;
        
        private string eMailBodyTextField;
        
        private string eMailSubjectLineField;
        
        private TDestinationOptionsEnum destinationOptionsEnumField;
        
        /// <remarks/>
        public bool ApplyOverrides {
            get {
                return this.applyOverridesField;
            }
            set {
                this.applyOverridesField = value;
            }
        }
        
        /// <remarks/>
        public TDateRangeEnum DateRange {
            get {
                return this.dateRangeField;
            }
            set {
                this.dateRangeField = value;
            }
        }
        
        /// <remarks/>
        public string MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
        
        /// <remarks/>
        public TDayOfWeekEnum WeekBegins {
            get {
                return this.weekBeginsField;
            }
            set {
                this.weekBeginsField = value;
            }
        }
        
        /// <remarks/>
        public string BiWeekBegins {
            get {
                return this.biWeekBeginsField;
            }
            set {
                this.biWeekBeginsField = value;
            }
        }
        
        /// <remarks/>
        public int PayPerClass {
            get {
                return this.payPerClassField;
            }
            set {
                this.payPerClassField = value;
            }
        }
        
        /// <remarks/>
        public string VendorOpName {
            get {
                return this.vendorOpNameField;
            }
            set {
                this.vendorOpNameField = value;
            }
        }
        
        /// <remarks/>
        public string VendorOpGroup {
            get {
                return this.vendorOpGroupField;
            }
            set {
                this.vendorOpGroupField = value;
            }
        }
        
        /// <remarks/>
        public string VendorOpHint {
            get {
                return this.vendorOpHintField;
            }
            set {
                this.vendorOpHintField = value;
            }
        }
        
        /// <remarks/>
        public string eMailRecipients {
            get {
                return this.eMailRecipientsField;
            }
            set {
                this.eMailRecipientsField = value;
            }
        }
        
        /// <remarks/>
        public string eMailSender {
            get {
                return this.eMailSenderField;
            }
            set {
                this.eMailSenderField = value;
            }
        }
        
        /// <remarks/>
        public string eMailBodyText {
            get {
                return this.eMailBodyTextField;
            }
            set {
                this.eMailBodyTextField = value;
            }
        }
        
        /// <remarks/>
        public string eMailSubjectLine {
            get {
                return this.eMailSubjectLineField;
            }
            set {
                this.eMailSubjectLineField = value;
            }
        }
        
        /// <remarks/>
        public TDestinationOptionsEnum DestinationOptionsEnum {
            get {
                return this.destinationOptionsEnumField;
            }
            set {
                this.destinationOptionsEnumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TDateRangeEnum {
        
        /// <remarks/>
        drCustom,
        
        /// <remarks/>
        drPrevPeriod,
        
        /// <remarks/>
        drCurrPeriod,
        
        /// <remarks/>
        drNextPeriod,
        
        /// <remarks/>
        drYesterday,
        
        /// <remarks/>
        drToday,
        
        /// <remarks/>
        drTomorrow,
        
        /// <remarks/>
        drPrevWeek,
        
        /// <remarks/>
        drCurrWeek,
        
        /// <remarks/>
        drNextWeek,
        
        /// <remarks/>
        drPrevBiWeek,
        
        /// <remarks/>
        drCurrBiWeek,
        
        /// <remarks/>
        drNextBiWeek,
        
        /// <remarks/>
        drPrevMonth,
        
        /// <remarks/>
        drCurrMonth,
        
        /// <remarks/>
        drNextMonth,
        
        /// <remarks/>
        drPrevYear,
        
        /// <remarks/>
        drCurrYear,
        
        /// <remarks/>
        drNextYear,
        
        /// <remarks/>
        drFMLAPeriod,
        
        /// <remarks/>
        drPrevCurr,
        
        /// <remarks/>
        drWeekBeforeLast,
        
        /// <remarks/>
        drTwoDaysAgo,
        
        /// <remarks/>
        drThreeDaysAgo,
        
        /// <remarks/>
        drFourDaysAgo,
        
        /// <remarks/>
        drFiveDaysAgo,
        
        /// <remarks/>
        drSixDaysAgo,
        
        /// <remarks/>
        drLastTwoDays,
        
        /// <remarks/>
        drLastThreeDays,
        
        /// <remarks/>
        drLastFourDays,
        
        /// <remarks/>
        drLastFiveDays,
        
        /// <remarks/>
        drLastSixDays,
        
        /// <remarks/>
        drNextWeekend,
        
        /// <remarks/>
        drLastWeekend,
        
        /// <remarks/>
        drTwoWeekendsAgo,
        
        /// <remarks/>
        drThreeWeekendsAgo,
        
        /// <remarks/>
        drThisWeekWeekdays,
        
        /// <remarks/>
        drLastWeekWeekdays,
        
        /// <remarks/>
        drNextWeekWeekdays,
        
        /// <remarks/>
        drThisMonday,
        
        /// <remarks/>
        drThisTuesday,
        
        /// <remarks/>
        drThisWednesday,
        
        /// <remarks/>
        drThisThursday,
        
        /// <remarks/>
        drThisFriday,
        
        /// <remarks/>
        drThisSaturday,
        
        /// <remarks/>
        drThisSunday,
        
        /// <remarks/>
        drNextMonday,
        
        /// <remarks/>
        drNextTuesday,
        
        /// <remarks/>
        drNextWednesday,
        
        /// <remarks/>
        drNextThursday,
        
        /// <remarks/>
        drNextFriday,
        
        /// <remarks/>
        drNextSaturday,
        
        /// <remarks/>
        drNextSunday,
        
        /// <remarks/>
        drLastMonday,
        
        /// <remarks/>
        drLastTuesday,
        
        /// <remarks/>
        drLastWednesday,
        
        /// <remarks/>
        drLastThursday,
        
        /// <remarks/>
        drLastFriday,
        
        /// <remarks/>
        drLastSaturday,
        
        /// <remarks/>
        drLastSunday,
        
        /// <remarks/>
        drPrevCurrYear,
        
        /// <remarks/>
        drFMLAEndOfCurrPeriod,
        
        /// <remarks/>
        drFMLAEndOfNextPeriod,
        
        /// <remarks/>
        drFMLAEndOfCurrMonth,
        
        /// <remarks/>
        drFMLAEndOfNextMonth,
        
        /// <remarks/>
        drLastSevenDays,
        
        /// <remarks/>
        drLastEightDays,
        
        /// <remarks/>
        drLastNineDays,
        
        /// <remarks/>
        drLastTenDays,
        
        /// <remarks/>
        drPrevCurrMonth,
        
        /// <remarks/>
        drCurrNextMonth,
        
        /// <remarks/>
        drThreeWeeksAgo,
        
        /// <remarks/>
        drCurrNextYear,
        
        /// <remarks/>
        drCurrMeasurementPeriod,
        
        /// <remarks/>
        drCurrAdminPeriod,
        
        /// <remarks/>
        drCurrStabilityPeriod,
        
        /// <remarks/>
        drPrevMeasurementPeriod,
        
        /// <remarks/>
        drPrevAdminPeriod,
        
        /// <remarks/>
        drPrevStabilityPeriod,
        
        /// <remarks/>
        drePrevEmploymentYear,
        
        /// <remarks/>
        dreCurrEmploymentYear,
        
        /// <remarks/>
        dreNextEmploymentYear,
        
        /// <remarks/>
        drePrevBirthYear,
        
        /// <remarks/>
        dreCurrBirthYear,
        
        /// <remarks/>
        dreNextBirthYear,
        
        /// <remarks/>
        dreDurationOfEmployment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TDestinationOptionsEnum {
        
        /// <remarks/>
        doDirect,
        
        /// <remarks/>
        doEmail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeClientExport {
        
        private bool applyOverridesField;
        
        private TDateRangeEnum dateRangeField;
        
        private string minDateField;
        
        private string maxDateField;
        
        private TDayOfWeekEnum weekBeginsField;
        
        private string biWeekBeginsField;
        
        private int payPerClassField;
        
        private string exportTitleField;
        
        private string exportGroupField;
        
        private string exportHintField;
        
        private string eMailRecipientsField;
        
        private string eMailSenderField;
        
        private string eMailBodyTextField;
        
        private string eMailSubjectLineField;
        
        private TDestinationOptionsEnum destinationOptionsEnumField;
        
        private TFileFormatEnum fileFormatEnumField;
        
        private TFileConversionOptionsEnum fileConversionOptionsEnumField;
        
        /// <remarks/>
        public bool ApplyOverrides {
            get {
                return this.applyOverridesField;
            }
            set {
                this.applyOverridesField = value;
            }
        }
        
        /// <remarks/>
        public TDateRangeEnum DateRange {
            get {
                return this.dateRangeField;
            }
            set {
                this.dateRangeField = value;
            }
        }
        
        /// <remarks/>
        public string MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
        
        /// <remarks/>
        public TDayOfWeekEnum WeekBegins {
            get {
                return this.weekBeginsField;
            }
            set {
                this.weekBeginsField = value;
            }
        }
        
        /// <remarks/>
        public string BiWeekBegins {
            get {
                return this.biWeekBeginsField;
            }
            set {
                this.biWeekBeginsField = value;
            }
        }
        
        /// <remarks/>
        public int PayPerClass {
            get {
                return this.payPerClassField;
            }
            set {
                this.payPerClassField = value;
            }
        }
        
        /// <remarks/>
        public string ExportTitle {
            get {
                return this.exportTitleField;
            }
            set {
                this.exportTitleField = value;
            }
        }
        
        /// <remarks/>
        public string ExportGroup {
            get {
                return this.exportGroupField;
            }
            set {
                this.exportGroupField = value;
            }
        }
        
        /// <remarks/>
        public string ExportHint {
            get {
                return this.exportHintField;
            }
            set {
                this.exportHintField = value;
            }
        }
        
        /// <remarks/>
        public string eMailRecipients {
            get {
                return this.eMailRecipientsField;
            }
            set {
                this.eMailRecipientsField = value;
            }
        }
        
        /// <remarks/>
        public string eMailSender {
            get {
                return this.eMailSenderField;
            }
            set {
                this.eMailSenderField = value;
            }
        }
        
        /// <remarks/>
        public string eMailBodyText {
            get {
                return this.eMailBodyTextField;
            }
            set {
                this.eMailBodyTextField = value;
            }
        }
        
        /// <remarks/>
        public string eMailSubjectLine {
            get {
                return this.eMailSubjectLineField;
            }
            set {
                this.eMailSubjectLineField = value;
            }
        }
        
        /// <remarks/>
        public TDestinationOptionsEnum DestinationOptionsEnum {
            get {
                return this.destinationOptionsEnumField;
            }
            set {
                this.destinationOptionsEnumField = value;
            }
        }
        
        /// <remarks/>
        public TFileFormatEnum FileFormatEnum {
            get {
                return this.fileFormatEnumField;
            }
            set {
                this.fileFormatEnumField = value;
            }
        }
        
        /// <remarks/>
        public TFileConversionOptionsEnum FileConversionOptionsEnum {
            get {
                return this.fileConversionOptionsEnumField;
            }
            set {
                this.fileConversionOptionsEnumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TFileFormatEnum {
        
        /// <remarks/>
        ffDefault,
        
        /// <remarks/>
        ffCSV,
        
        /// <remarks/>
        ffXMLSS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TFileConversionOptionsEnum {
        
        /// <remarks/>
        fcoInHex,
        
        /// <remarks/>
        fcoNative,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeClientReport {
        
        private bool applyOverridesField;
        
        private TDateRangeEnum dateRangeField;
        
        private string minDateField;
        
        private string maxDateField;
        
        private TDayOfWeekEnum weekBeginsField;
        
        private string biWeekBeginsField;
        
        private int payPerClassField;
        
        private string reportTitleField;
        
        private string reportGroupField;
        
        private string reportHintField;
        
        private string eMailRecipientsField;
        
        private string eMailSenderField;
        
        private string eMailBodyTextField;
        
        private string eMailSubjectLineField;
        
        private TDestinationOptionsEnum destinationOptionsEnumField;
        
        private TFileConversionOptionsEnum fileConversionOptionsEnumField;
        
        /// <remarks/>
        public bool ApplyOverrides {
            get {
                return this.applyOverridesField;
            }
            set {
                this.applyOverridesField = value;
            }
        }
        
        /// <remarks/>
        public TDateRangeEnum DateRange {
            get {
                return this.dateRangeField;
            }
            set {
                this.dateRangeField = value;
            }
        }
        
        /// <remarks/>
        public string MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
        
        /// <remarks/>
        public TDayOfWeekEnum WeekBegins {
            get {
                return this.weekBeginsField;
            }
            set {
                this.weekBeginsField = value;
            }
        }
        
        /// <remarks/>
        public string BiWeekBegins {
            get {
                return this.biWeekBeginsField;
            }
            set {
                this.biWeekBeginsField = value;
            }
        }
        
        /// <remarks/>
        public int PayPerClass {
            get {
                return this.payPerClassField;
            }
            set {
                this.payPerClassField = value;
            }
        }
        
        /// <remarks/>
        public string ReportTitle {
            get {
                return this.reportTitleField;
            }
            set {
                this.reportTitleField = value;
            }
        }
        
        /// <remarks/>
        public string ReportGroup {
            get {
                return this.reportGroupField;
            }
            set {
                this.reportGroupField = value;
            }
        }
        
        /// <remarks/>
        public string ReportHint {
            get {
                return this.reportHintField;
            }
            set {
                this.reportHintField = value;
            }
        }
        
        /// <remarks/>
        public string eMailRecipients {
            get {
                return this.eMailRecipientsField;
            }
            set {
                this.eMailRecipientsField = value;
            }
        }
        
        /// <remarks/>
        public string eMailSender {
            get {
                return this.eMailSenderField;
            }
            set {
                this.eMailSenderField = value;
            }
        }
        
        /// <remarks/>
        public string eMailBodyText {
            get {
                return this.eMailBodyTextField;
            }
            set {
                this.eMailBodyTextField = value;
            }
        }
        
        /// <remarks/>
        public string eMailSubjectLine {
            get {
                return this.eMailSubjectLineField;
            }
            set {
                this.eMailSubjectLineField = value;
            }
        }
        
        /// <remarks/>
        public TDestinationOptionsEnum DestinationOptionsEnum {
            get {
                return this.destinationOptionsEnumField;
            }
            set {
                this.destinationOptionsEnumField = value;
            }
        }
        
        /// <remarks/>
        public TFileConversionOptionsEnum FileConversionOptionsEnum {
            get {
                return this.fileConversionOptionsEnumField;
            }
            set {
                this.fileConversionOptionsEnumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeAccessAccount {
        
        private TBrowserProfileTypeEnum browserProfileTypeField;
        
        private string domainNameField;
        
        private string accountCodeField;
        
        private string friendlyNameField;
        
        private string passwordField;
        
        private string browserProfileField;
        
        private string eMailAddressField;
        
        private int accountTypeField;
        
        private int userGroupIDField;
        
        private int uniqueIDField;
        
        /// <remarks/>
        public TBrowserProfileTypeEnum BrowserProfileType {
            get {
                return this.browserProfileTypeField;
            }
            set {
                this.browserProfileTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string BrowserProfile {
            get {
                return this.browserProfileField;
            }
            set {
                this.browserProfileField = value;
            }
        }
        
        /// <remarks/>
        public string eMailAddress {
            get {
                return this.eMailAddressField;
            }
            set {
                this.eMailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public int UserGroupID {
            get {
                return this.userGroupIDField;
            }
            set {
                this.userGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public int UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TBrowserProfileTypeEnum {
        
        /// <remarks/>
        bptPrivate,
        
        /// <remarks/>
        bptSystem,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeClientData {
        
        private string companyNameField;
        
        private string companyPrimaryPhoneField;
        
        private string companyPrimaryFAXField;
        
        private string primaryContactNameField;
        
        private string primaryContactPrimaryPhoneField;
        
        private string companyAddr1Field;
        
        private string companyAddr2Field;
        
        private string companyCityField;
        
        private string companyStateProvField;
        
        private string companyZIPPCField;
        
        private int totalEmployeesField;
        
        private int activeEmployeesField;
        
        private int inactiveEmployeesField;
        
        private int payPeriodClassesField;
        
        private int workgroupLevelsField;
        
        private bool demoModeField;
        
        private bool productionModeField;
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyPrimaryPhone {
            get {
                return this.companyPrimaryPhoneField;
            }
            set {
                this.companyPrimaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyPrimaryFAX {
            get {
                return this.companyPrimaryFAXField;
            }
            set {
                this.companyPrimaryFAXField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryContactName {
            get {
                return this.primaryContactNameField;
            }
            set {
                this.primaryContactNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryContactPrimaryPhone {
            get {
                return this.primaryContactPrimaryPhoneField;
            }
            set {
                this.primaryContactPrimaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyAddr1 {
            get {
                return this.companyAddr1Field;
            }
            set {
                this.companyAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string CompanyAddr2 {
            get {
                return this.companyAddr2Field;
            }
            set {
                this.companyAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string CompanyCity {
            get {
                return this.companyCityField;
            }
            set {
                this.companyCityField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyStateProv {
            get {
                return this.companyStateProvField;
            }
            set {
                this.companyStateProvField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyZIPPC {
            get {
                return this.companyZIPPCField;
            }
            set {
                this.companyZIPPCField = value;
            }
        }
        
        /// <remarks/>
        public int TotalEmployees {
            get {
                return this.totalEmployeesField;
            }
            set {
                this.totalEmployeesField = value;
            }
        }
        
        /// <remarks/>
        public int ActiveEmployees {
            get {
                return this.activeEmployeesField;
            }
            set {
                this.activeEmployeesField = value;
            }
        }
        
        /// <remarks/>
        public int InactiveEmployees {
            get {
                return this.inactiveEmployeesField;
            }
            set {
                this.inactiveEmployeesField = value;
            }
        }
        
        /// <remarks/>
        public int PayPeriodClasses {
            get {
                return this.payPeriodClassesField;
            }
            set {
                this.payPeriodClassesField = value;
            }
        }
        
        /// <remarks/>
        public int WorkgroupLevels {
            get {
                return this.workgroupLevelsField;
            }
            set {
                this.workgroupLevelsField = value;
            }
        }
        
        /// <remarks/>
        public bool DemoMode {
            get {
                return this.demoModeField;
            }
            set {
                this.demoModeField = value;
            }
        }
        
        /// <remarks/>
        public bool ProductionMode {
            get {
                return this.productionModeField;
            }
            set {
                this.productionModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public partial class TAeSiteEnvironment {
        
        private int majorVerField;
        
        private int minorVerField;
        
        private int buildNumberField;
        
        private string computerNameField;
        
        private string serverDateTimeField;
        
        private string clientDateTimeField;
        
        private int siteNumField;
        
        /// <remarks/>
        public int MajorVer {
            get {
                return this.majorVerField;
            }
            set {
                this.majorVerField = value;
            }
        }
        
        /// <remarks/>
        public int MinorVer {
            get {
                return this.minorVerField;
            }
            set {
                this.minorVerField = value;
            }
        }
        
        /// <remarks/>
        public int BuildNumber {
            get {
                return this.buildNumberField;
            }
            set {
                this.buildNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ComputerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        public string ServerDateTime {
            get {
                return this.serverDateTimeField;
            }
            set {
                this.serverDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ClientDateTime {
            get {
                return this.clientDateTimeField;
            }
            set {
                this.clientDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public int SiteNum {
            get {
                return this.siteNumField;
            }
            set {
                this.siteNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAddEmpMode {
        
        /// <remarks/>
        aemAuto,
        
        /// <remarks/>
        aemAdd,
        
        /// <remarks/>
        aemEdit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TBadgeManagement {
        
        /// <remarks/>
        bmAuto,
        
        /// <remarks/>
        bmManual,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TMaintainEmployeeResult {
        
        /// <remarks/>
        merEditOk,
        
        /// <remarks/>
        merAddOk,
        
        /// <remarks/>
        merAddedWithErrors,
        
        /// <remarks/>
        merBadParam,
        
        /// <remarks/>
        merDupID,
        
        /// <remarks/>
        merDupBadge,
        
        /// <remarks/>
        merCap,
        
        /// <remarks/>
        merUnknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TPayPeriodEnum {
        
        /// <remarks/>
        ppePrevious,
        
        /// <remarks/>
        ppeCurrent,
        
        /// <remarks/>
        ppeNext,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TWGSortingOption {
        
        /// <remarks/>
        wgsNum,
        
        /// <remarks/>
        wgsCode,
        
        /// <remarks/>
        wgsName,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TPayLineStateEnum {
        
        /// <remarks/>
        plsCalculated,
        
        /// <remarks/>
        plsAsSaved,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TCalcedDataTypeEnum {
        
        /// <remarks/>
        cdtNormal,
        
        /// <remarks/>
        cdtScheduled,
        
        /// <remarks/>
        cdtEstimated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TNoActivityInclusion {
        
        /// <remarks/>
        naiSkip,
        
        /// <remarks/>
        naiInclude,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TBenAdjTypeEnum {
        
        /// <remarks/>
        batCredit,
        
        /// <remarks/>
        batDebit,
        
        /// <remarks/>
        batSetBalance,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAuthTimeCardOptionEnum {
        
        /// <remarks/>
        atcoSupervisor,
        
        /// <remarks/>
        atcoSupervisorLock,
        
        /// <remarks/>
        atcoEmployee,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TActiveStatusEnum {
        
        /// <remarks/>
        asActive,
        
        /// <remarks/>
        asInactive,
        
        /// <remarks/>
        asAll,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TRTOFilterEnum {
        
        /// <remarks/>
        rfState,
        
        /// <remarks/>
        rfCreated,
        
        /// <remarks/>
        rfRequested,
        
        /// <remarks/>
        rfStateCreated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TDurationDetailEnum {
        
        /// <remarks/>
        ddePayDes,
        
        /// <remarks/>
        ddePayDesWG,
        
        /// <remarks/>
        ddePayDesWGRate,
        
        /// <remarks/>
        ddeWGOnly,
        
        /// <remarks/>
        ddePayDesRate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TAeEmpACAFullTimeStausOptions {
        
        /// <remarks/>
        eaftsFullTime,
        
        /// <remarks/>
        eaftsNotFullTime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AeXMLBridgeIntf")]
    public enum TGPSCoordsEnum {
        
        /// <remarks/>
        gpsNone,
        
        /// <remarks/>
        gpsOk,
        
        /// <remarks/>
        gpsUnableToAcquire,
        
        /// <remarks/>
        gpsPrevented,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void interfaceBuildCompletedEventHandler(object sender, interfaceBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class interfaceBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal interfaceBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCompanyNameCompletedEventHandler(object sender, getCompanyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getTotalEmployeeCountCompletedEventHandler(object sender, getTotalEmployeeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTotalEmployeeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTotalEmployeeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getActiveEmployeesCountCompletedEventHandler(object sender, getActiveEmployeesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveEmployeesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveEmployeesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getInactiveEmployeesCountCompletedEventHandler(object sender, getInactiveEmployeesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInactiveEmployeesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInactiveEmployeesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSiteEnvironmentCompletedEventHandler(object sender, getSiteEnvironmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSiteEnvironmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSiteEnvironmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeSiteEnvironment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeSiteEnvironment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getBaseClientDataCompletedEventHandler(object sender, getBaseClientDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBaseClientDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBaseClientDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setBaseClientDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAccessAccountsCompletedEventHandler(object sender, getAccessAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAccessAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAccessAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAccessAccountViaAccountCodeCompletedEventHandler(object sender, getAccessAccountViaAccountCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessAccountViaAccountCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessAccountViaAccountCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAccessAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAccessAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void accessAccountCodeExistsCompletedEventHandler(object sender, accessAccountCodeExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accessAccountCodeExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accessAccountCodeExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSystemReportsBasicCompletedEventHandler(object sender, getSystemReportsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemReportsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemReportsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientReport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSystemExportsBasicCompletedEventHandler(object sender, getSystemExportsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemExportsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemExportsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientExport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientExport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSystemVendorOpsBasicCompletedEventHandler(object sender, getSystemVendorOpsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemVendorOpsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemVendorOpsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientVendorOp[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientVendorOp[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getActiveStatusConditionsCompletedEventHandler(object sender, getActiveStatusConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveStatusConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveStatusConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getInactiveStatusConditionsCompletedEventHandler(object sender, getInactiveStatusConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInactiveStatusConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInactiveStatusConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayTypesCompletedEventHandler(object sender, getPayTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayClassesSimpleCompletedEventHandler(object sender, getPayClassesSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayClassesSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayClassesSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSchedulePatternsSimpleCompletedEventHandler(object sender, getSchedulePatternsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSchedulePatternsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSchedulePatternsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getClockGroupsSimpleCompletedEventHandler(object sender, getClockGroupsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClockGroupsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClockGroupsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getHourlyStatusTypesSimpleCompletedEventHandler(object sender, getHourlyStatusTypesSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHourlyStatusTypesSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHourlyStatusTypesSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCorrectiveActionsSimpleCompletedEventHandler(object sender, getCorrectiveActionsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorrectiveActionsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorrectiveActionsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getStationsSimpleCompletedEventHandler(object sender, getStationsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getClustersSimpleCompletedEventHandler(object sender, getClustersSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClustersSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClustersSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getClusterStationsSimpleCompletedEventHandler(object sender, getClusterStationsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClusterStationsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClusterStationsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getClockGroupStationsSimpleCompletedEventHandler(object sender, getClockGroupStationsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClockGroupStationsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClockGroupStationsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getBenefitsSimpleCompletedEventHandler(object sender, getBenefitsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBenefitsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBenefitsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayDesignationsSimpleCompletedEventHandler(object sender, getPayDesignationsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayDesignationsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayDesignationsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getScheduleStylesSimpleCompletedEventHandler(object sender, getScheduleStylesSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScheduleStylesSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScheduleStylesSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getUserGroupsSimpleCompletedEventHandler(object sender, getUserGroupsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserGroupsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserGroupsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getBrowserProfilesSimpleCompletedEventHandler(object sender, getBrowserProfilesSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBrowserProfilesSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBrowserProfilesSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCurrentBrowserProfileMenuItemsCompletedEventHandler(object sender, getCurrentBrowserProfileMenuItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentBrowserProfileMenuItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentBrowserProfileMenuItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBrowserMenuItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBrowserMenuItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getHyperQueriesSimpleCompletedEventHandler(object sender, getHyperQueriesSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHyperQueriesSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHyperQueriesSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayPeriodClassDataCompletedEventHandler(object sender, getPayPeriodClassDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayPeriodClassDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayPeriodClassDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayPeriodInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayPeriodInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayPeriodClassesCompletedEventHandler(object sender, getPayPeriodClassesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayPeriodClassesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayPeriodClassesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayPeriodInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayPeriodInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyEmployeeBasicCompletedEventHandler(object sender, getEmptyEmployeeBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyEmployeeBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyEmployeeBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyEmployeeDetailCompletedEventHandler(object sender, getEmptyEmployeeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyEmployeeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyEmployeeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyClientExportCompletedEventHandler(object sender, getEmptyClientExportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyClientExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyClientExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientExport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientExport)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyClientReportCompletedEventHandler(object sender, getEmptyClientReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyClientReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyClientReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientReport)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyClientVendorOpCompletedEventHandler(object sender, getEmptyClientVendorOpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyClientVendorOpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyClientVendorOpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientVendorOp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientVendorOp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyAccessAccountCompletedEventHandler(object sender, getEmptyAccessAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyAccessAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyAccessAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAccessAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAccessAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeBasicByIDNumCompletedEventHandler(object sender, getEmployeeBasicByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeBasicByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeBasicByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeBasicBySSNCompletedEventHandler(object sender, getEmployeeBasicBySSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeBasicBySSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeBasicBySSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeBasicByBadgeCompletedEventHandler(object sender, getEmployeeBasicByBadgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeBasicByBadgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeBasicByBadgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeBasicByFilekeyCompletedEventHandler(object sender, getEmployeeBasicByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeBasicByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeBasicByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetailByIDNumCompletedEventHandler(object sender, getEmployeeDetailByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetailByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetailByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetailBySSNCompletedEventHandler(object sender, getEmployeeDetailBySSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetailBySSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetailBySSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetailByBadgeCompletedEventHandler(object sender, getEmployeeDetailByBadgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetailByBadgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetailByBadgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetailByFilekeyCompletedEventHandler(object sender, getEmployeeDetailByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetailByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetailByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeWorkgroupAssignmentByFilekeyCompletedEventHandler(object sender, extractEmployeeWorkgroupAssignmentByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeWorkgroupAssignmentByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeWorkgroupAssignmentByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroupAssignment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroupAssignment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeWorkgroupAssignmentByIDNumCompletedEventHandler(object sender, extractEmployeeWorkgroupAssignmentByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeWorkgroupAssignmentByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeWorkgroupAssignmentByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroupAssignment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroupAssignment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeRatePayTypeAssignmentByFilekeyCompletedEventHandler(object sender, extractEmployeeRatePayTypeAssignmentByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeRatePayTypeAssignmentByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeRatePayTypeAssignmentByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeRatePayTypeAssignment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeRatePayTypeAssignment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeRatePayTypeAssignmentByIDNumCompletedEventHandler(object sender, extractEmployeeRatePayTypeAssignmentByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeRatePayTypeAssignmentByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeRatePayTypeAssignmentByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeRatePayTypeAssignment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeRatePayTypeAssignment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void reassignEmployeeWorkgroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void reassignEmployeeRatePayTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeBasicCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void maintainEmployeeBasicCompletedEventHandler(object sender, maintainEmployeeBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class maintainEmployeeBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal maintainEmployeeBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TMaintainEmployeeResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TMaintainEmployeeResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void maintainEmployeeDetailCompletedEventHandler(object sender, maintainEmployeeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class maintainEmployeeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal maintainEmployeeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TMaintainEmployeeResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TMaintainEmployeeResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void maintainEmployeeResultDescrCompletedEventHandler(object sender, maintainEmployeeResultDescrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class maintainEmployeeResultDescrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal maintainEmployeeResultDescrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void dateRangeEnumDescrCompletedEventHandler(object sender, dateRangeEnumDescrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dateRangeEnumDescrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dateRangeEnumDescrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void dateRangeEnumListSimpleCompletedEventHandler(object sender, dateRangeEnumListSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dateRangeEnumListSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dateRangeEnumListSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void dateRangeEmpEnumListSimpleCompletedEventHandler(object sender, dateRangeEmpEnumListSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dateRangeEmpEnumListSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dateRangeEmpEnumListSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getActiveEmployeesListCompletedEventHandler(object sender, getActiveEmployeesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveEmployeesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveEmployeesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayrollEmployeesListCompletedEventHandler(object sender, getPayrollEmployeesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayrollEmployeesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayrollEmployeesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getInactiveEmployeesListCompletedEventHandler(object sender, getInactiveEmployeesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInactiveEmployeesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInactiveEmployeesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAllEmployeesListCompletedEventHandler(object sender, getAllEmployeesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllEmployeesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllEmployeesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesListBasicFromHyperQueryCompletedEventHandler(object sender, getEmployeesListBasicFromHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesListBasicFromHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesListBasicFromHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesListDetailFromHyperQueryCompletedEventHandler(object sender, getEmployeesListDetailFromHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesListDetailFromHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesListDetailFromHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getWorkgroupLevelDetailsCompletedEventHandler(object sender, getWorkgroupLevelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkgroupLevelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkgroupLevelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroupLevel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroupLevel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getWorkgroupsCompletedEventHandler(object sender, getWorkgroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkgroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkgroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getWorkgroupCompletedEventHandler(object sender, getWorkgroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkgroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkgroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getWorkgroupViaCodeCompletedEventHandler(object sender, getWorkgroupViaCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkgroupViaCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkgroupViaCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getWorkgroupViaNameCompletedEventHandler(object sender, getWorkgroupViaNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkgroupViaNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkgroupViaNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getWorkgroupStructCompletedEventHandler(object sender, getWorkgroupStructCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkgroupStructCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkgroupStructCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setWorkgroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void addWorkgroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void nextWGNumForWGLevelCompletedEventHandler(object sender, nextWGNumForWGLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nextWGNumForWGLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nextWGNumForWGLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void delWorkgroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodFrameByFilekeyCompletedEventHandler(object sender, extractEmployeePeriodFrameByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodFrameByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodFrameByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayPeriodFrame Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayPeriodFrame)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodFrameByIDNumCompletedEventHandler(object sender, extractEmployeePeriodFrameByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodFrameByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodFrameByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayPeriodFrame Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayPeriodFrame)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodSummsByFilekeyCompletedEventHandler(object sender, extractEmployeePeriodSummsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodSummsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodSummsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodSummsByIDNumCompletedEventHandler(object sender, extractEmployeePeriodSummsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodSummsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodSummsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeDailySummsByFilekeyCompletedEventHandler(object sender, extractEmployeeDailySummsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeDailySummsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeDailySummsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeDailySummsByIDNumCompletedEventHandler(object sender, extractEmployeeDailySummsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeDailySummsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeDailySummsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftsByFilekeyCompletedEventHandler(object sender, extractEmployeePeriodShiftsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftLineSimple[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftLineSimple[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftsByIDNumCompletedEventHandler(object sender, extractEmployeePeriodShiftsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftLineSimple[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftLineSimple[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeTransactionsByFilekeyCompletedEventHandler(object sender, extractEmployeeTransactionsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeTransactionsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeTransactionsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTransaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeTransactionsByIDNumCompletedEventHandler(object sender, extractEmployeeTransactionsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeTransactionsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeTransactionsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTransaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSchedulesByFilekeyCompletedEventHandler(object sender, extractEmployeeSchedulesByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSchedulesByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSchedulesByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSchedulesByIDNumCompletedEventHandler(object sender, extractEmployeeSchedulesByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSchedulesByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSchedulesByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeEditsByFilekeyCompletedEventHandler(object sender, extractEmployeeEditsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeEditsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeEditsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEdit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEdit[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeEditsByIDNumCompletedEventHandler(object sender, extractEmployeeEditsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeEditsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeEditsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEdit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEdit[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractPayPeriodSummariesCompletedEventHandler(object sender, extractPayPeriodSummariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractPayPeriodSummariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractPayPeriodSummariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void executeExportOperationCompletedEventHandler(object sender, executeExportOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeExportOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeExportOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void executeExportOperationStringsCompletedEventHandler(object sender, executeExportOperationStringsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeExportOperationStringsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeExportOperationStringsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void executeReportOperationCompletedEventHandler(object sender, executeReportOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeReportOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeReportOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void executeVendorOperationCompletedEventHandler(object sender, executeVendorOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeVendorOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeVendorOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeClientVendorOpResults[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeClientVendorOpResults[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void addAccessAccountCompletedEventHandler(object sender, addAccessAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAccessAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAccessAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAccessAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAccessAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeAccessAccountCompletedEventHandler(object sender, removeAccessAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeAccessAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeAccessAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editAccessAccountCompletedEventHandler(object sender, editAccessAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editAccessAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editAccessAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayPeriodClosureStatsCompletedEventHandler(object sender, getPayPeriodClosureStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayPeriodClosureStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayPeriodClosureStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayPeriodCloseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayPeriodCloseInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayPeriodClosureEmployeesCompletedEventHandler(object sender, getPayPeriodClosureEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayPeriodClosureEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayPeriodClosureEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void addAccessAccountWorkgroupAccessRightByAccountCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeAccessAccountAllWorkgroupAccessRightsByAccountCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAccessAccountWorkgroupAccessRightsByAccountCodeCompletedEventHandler(object sender, getAccessAccountWorkgroupAccessRightsByAccountCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessAccountWorkgroupAccessRightsByAccountCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessAccountWorkgroupAccessRightsByAccountCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroupSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroupSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractRangedTransactionsUsingHyperQueryCompletedEventHandler(object sender, extractRangedTransactionsUsingHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractRangedTransactionsUsingHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractRangedTransactionsUsingHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpTransaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractRangedSchedulesUsingHyperQueryCompletedEventHandler(object sender, extractRangedSchedulesUsingHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractRangedSchedulesUsingHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractRangedSchedulesUsingHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeePunchByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeePunchByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void punchEmployeeNowByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void punchEmployeeNowByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeTransferByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeTransferByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void transferEmployeeNowByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void transferEmployeeNowByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void recomputePendingRequestsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void recomputeEmployeeByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void recomputeEmployeeByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void recomputeEmployeeAccrualsByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void recomputeEmployeeAccrualsByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void employeeBenefitBalanceAsOfByFilekeyCompletedEventHandler(object sender, employeeBenefitBalanceAsOfByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class employeeBenefitBalanceAsOfByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal employeeBenefitBalanceAsOfByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void employeeBenefitBalanceAsOfByIDNumCompletedEventHandler(object sender, employeeBenefitBalanceAsOfByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class employeeBenefitBalanceAsOfByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal employeeBenefitBalanceAsOfByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void adjustEmployeeBenefitBalanceByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void adjustEmployeeBenefitBalanceByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeBenefitAdjustmentsByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeBenefitAdjustmentsByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeBenefitActivityByFilekeyCompletedEventHandler(object sender, extractEmployeeBenefitActivityByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeBenefitActivityByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeBenefitActivityByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpBenefitActivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpBenefitActivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeBenefitActivityByIDNumCompletedEventHandler(object sender, extractEmployeeBenefitActivityByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeBenefitActivityByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeBenefitActivityByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpBenefitActivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpBenefitActivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeESSPINByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeESSPINByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeESSPINByFilekeyCompletedEventHandler(object sender, getEmployeeESSPINByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeESSPINByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeESSPINByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeESSPINByIDNumCompletedEventHandler(object sender, getEmployeeESSPINByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeESSPINByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeESSPINByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeESSEMailByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeESSEMailByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeESSEMailByFilekeyCompletedEventHandler(object sender, getEmployeeESSEMailByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeESSEMailByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeESSEMailByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeESSEMailByIDNumCompletedEventHandler(object sender, getEmployeeESSEMailByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeESSEMailByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeESSEMailByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyRatePayTypeAssignmentCompletedEventHandler(object sender, getEmptyRatePayTypeAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyRatePayTypeAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyRatePayTypeAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeRatePayTypeAssignment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeRatePayTypeAssignment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeRateHistoryByFilekeyCompletedEventHandler(object sender, getEmployeeRateHistoryByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeRateHistoryByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeRateHistoryByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeRateAssignment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeRateAssignment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeRateHistoryByIDNumCompletedEventHandler(object sender, getEmployeeRateHistoryByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeRateHistoryByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeRateHistoryByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeRateAssignment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeRateAssignment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeRateHistoryByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeRateHistoryByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeFilekeyByBadgeCompletedEventHandler(object sender, getEmployeeFilekeyByBadgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeFilekeyByBadgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeFilekeyByBadgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void loadUsageItemsInRangeCompletedEventHandler(object sender, loadUsageItemsInRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadUsageItemsInRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadUsageItemsInRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeUsageItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeUsageItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAccessAccountViaUniqueIDCompletedEventHandler(object sender, getAccessAccountViaUniqueIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessAccountViaUniqueIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessAccountViaUniqueIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAccessAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAccessAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void loadAccessAccountActivitysInRangeCompletedEventHandler(object sender, loadAccessAccountActivitysInRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadAccessAccountActivitysInRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadAccessAccountActivitysInRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAccessAccountActivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAccessAccountActivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractTimeClockStationsCompletedEventHandler(object sender, extractTimeClockStationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractTimeClockStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractTimeClockStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTimeClockStation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTimeClockStation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void loadBillingItemsInRangeCompletedEventHandler(object sender, loadBillingItemsInRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadBillingItemsInRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadBillingItemsInRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBillingItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBillingItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void recomputeEmployeeIncidentsByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void recomputeEmployeeIncidentsByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void dateRangeEnumStartDateCompletedEventHandler(object sender, dateRangeEnumStartDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dateRangeEnumStartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dateRangeEnumStartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void dateRangeEnumEndDateCompletedEventHandler(object sender, dateRangeEnumEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dateRangeEnumEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dateRangeEnumEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ClientServerDateTimeCompletedEventHandler(object sender, ClientServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ServerUTCDateTimeCompletedEventHandler(object sender, ServerUTCDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServerUTCDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServerUTCDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setWorkgroupLevelLabelsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftDetailsByFilekeyCompletedEventHandler(object sender, extractEmployeePeriodShiftDetailsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftDetailsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftDetailsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftLineDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftLineDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftDetailsByIDNumCompletedEventHandler(object sender, extractEmployeePeriodShiftDetailsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftDetailsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftDetailsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftLineDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftLineDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftTransactionsByFilekeyCompletedEventHandler(object sender, extractEmployeePeriodShiftTransactionsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftTransactionsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftTransactionsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftTransaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftTransactionsByIDNumCompletedEventHandler(object sender, extractEmployeePeriodShiftTransactionsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftTransactionsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftTransactionsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftTransaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftSchedulesByFilekeyCompletedEventHandler(object sender, extractEmployeePeriodShiftSchedulesByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftSchedulesByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftSchedulesByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeePeriodShiftSchedulesByIDNumCompletedEventHandler(object sender, extractEmployeePeriodShiftSchedulesByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeePeriodShiftSchedulesByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeePeriodShiftSchedulesByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeShiftSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeShiftSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeDailySummsInPeriodByFilekeyCompletedEventHandler(object sender, extractEmployeeDailySummsInPeriodByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeDailySummsInPeriodByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeDailySummsInPeriodByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeDailySummsInPeriodByIDNumCompletedEventHandler(object sender, extractEmployeeDailySummsInPeriodByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeDailySummsInPeriodByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeDailySummsInPeriodByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCurrentAccessAccountCompletedEventHandler(object sender, getCurrentAccessAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentAccessAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentAccessAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAccessAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAccessAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void performTimeCardEditCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void cancelTimeCardEditCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void deleteTimeCardEditCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void authPeriodTimeCardByFileKeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void authPeriodTimeCardByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void unAuthPeriodTimeCardByFileKeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void unAuthPeriodTimeCardByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void submitTimeOffRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractTimeOffRequestStatesCompletedEventHandler(object sender, extractTimeOffRequestStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractTimeOffRequestStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractTimeOffRequestStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTimeOffRequestState[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTimeOffRequestState[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractLeaveRequestsByStateCompletedEventHandler(object sender, extractLeaveRequestsByStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractLeaveRequestsByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractLeaveRequestsByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTimeOffRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTimeOffRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeLeaveRequestsByFilekeyCompletedEventHandler(object sender, extractEmployeeLeaveRequestsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeLeaveRequestsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeLeaveRequestsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTimeOffRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTimeOffRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeLeaveRequestsByIDNumCompletedEventHandler(object sender, extractEmployeeLeaveRequestsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeLeaveRequestsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeLeaveRequestsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTimeOffRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTimeOffRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeLeaveRequestEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void describeLeaveRequestEntryCompletedEventHandler(object sender, describeLeaveRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class describeLeaveRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal describeLeaveRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void approveLeaveRequestEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void denyLeaveRequestEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesSearchListBasicCompletedEventHandler(object sender, getEmployeesSearchListBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesSearchListBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesSearchListBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesSearchListDetailCompletedEventHandler(object sender, getEmployeesSearchListDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesSearchListDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesSearchListDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeTZByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeTZByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeTZOffsetByFilekeyCompletedEventHandler(object sender, getEmployeeTZOffsetByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeTZOffsetByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeTZOffsetByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeTZOffsetByIDNumCompletedEventHandler(object sender, getEmployeeTZOffsetByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeTZOffsetByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeTZOffsetByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeTZObservesDSTByFilekeyCompletedEventHandler(object sender, getEmployeeTZObservesDSTByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeTZObservesDSTByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeTZObservesDSTByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeTZObservesDSTByIDNumCompletedEventHandler(object sender, getEmployeeTZObservesDSTByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeTZObservesDSTByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeTZObservesDSTByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getReasonCodesSimpleCompletedEventHandler(object sender, getReasonCodesSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReasonCodesSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReasonCodesSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSummsByFilekeyCompletedEventHandler(object sender, extractEmployeeSummsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSummsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSummsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSummsByIDNumCompletedEventHandler(object sender, extractEmployeeSummsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSummsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSummsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeDurationTotalsByFilekeyCompletedEventHandler(object sender, extractEmployeeDurationTotalsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeDurationTotalsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeDurationTotalsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeDurationTotalsByIDNumCompletedEventHandler(object sender, extractEmployeeDurationTotalsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeDurationTotalsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeDurationTotalsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayLine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayLine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyEmployeeDetail2CompletedEventHandler(object sender, getEmptyEmployeeDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyEmployeeDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyEmployeeDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetail2ByIDNumCompletedEventHandler(object sender, getEmployeeDetail2ByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetail2ByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetail2ByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetail2BySSNCompletedEventHandler(object sender, getEmployeeDetail2BySSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetail2BySSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetail2BySSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetail2ByBadgeCompletedEventHandler(object sender, getEmployeeDetail2ByBadgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetail2ByBadgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetail2ByBadgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeDetail2ByFilekeyCompletedEventHandler(object sender, getEmployeeDetail2ByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeDetail2ByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeDetail2ByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeDetail2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void maintainEmployeeDetail2CompletedEventHandler(object sender, maintainEmployeeDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class maintainEmployeeDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal maintainEmployeeDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TMaintainEmployeeResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TMaintainEmployeeResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesListDetail2FromHyperQueryCompletedEventHandler(object sender, getEmployeesListDetail2FromHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesListDetail2FromHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesListDetail2FromHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesSearchListDetail2CompletedEventHandler(object sender, getEmployeesSearchListDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesSearchListDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesSearchListDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getManuallySelectedSetupDataCompletedEventHandler(object sender, getManuallySelectedSetupDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getManuallySelectedSetupDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getManuallySelectedSetupDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeExchangeStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeExchangeStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setManuallySelectedSetupDataCompletedEventHandler(object sender, setManuallySelectedSetupDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setManuallySelectedSetupDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setManuallySelectedSetupDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeExchangeStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeExchangeStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getManuallySelectedEmployeeDataCompletedEventHandler(object sender, getManuallySelectedEmployeeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getManuallySelectedEmployeeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getManuallySelectedEmployeeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeExchangeStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeExchangeStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getManuallySelectedCalculatedDataCompletedEventHandler(object sender, getManuallySelectedCalculatedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getManuallySelectedCalculatedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getManuallySelectedCalculatedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeExchangeStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeExchangeStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setManuallySelectedEmployeeDataCompletedEventHandler(object sender, setManuallySelectedEmployeeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setManuallySelectedEmployeeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setManuallySelectedEmployeeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeExchangeStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeExchangeStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractWGXlatesCompletedEventHandler(object sender, extractWGXlatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractWGXlatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractWGXlatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeWorkgroupXLate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeWorkgroupXLate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void maintainWGXlateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeWGXlateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getGlobalPayDesMappingsSimpleCompletedEventHandler(object sender, getGlobalPayDesMappingsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGlobalPayDesMappingsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGlobalPayDesMappingsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getGlobalPayDesMappingSetCompletedEventHandler(object sender, getGlobalPayDesMappingSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGlobalPayDesMappingSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGlobalPayDesMappingSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayDesMappingSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayDesMappingSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getGlobalPayDesMappingSetMappingsCompletedEventHandler(object sender, getGlobalPayDesMappingSetMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGlobalPayDesMappingSetMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGlobalPayDesMappingSetMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayDesMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayDesMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setGlobalPayDesMappingSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendGlobalPayDesMappingSetMappingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeGlobalPayDesMappingSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractAttendanceMultiFormActivityUsingHyperQueryCompletedEventHandler(object sender, extractAttendanceMultiFormActivityUsingHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractAttendanceMultiFormActivityUsingHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractAttendanceMultiFormActivityUsingHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeMultiForm[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeMultiForm[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeSchedulesInRangeByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeSchedulesInRangeByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeScheduleByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeScheduleByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getUserAuthPackageCompletedEventHandler(object sender, getUserAuthPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserAuthPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserAuthPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeAuthenticationPackage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeAuthenticationPackage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPreAuthUserLoginURLCompletedEventHandler(object sender, getPreAuthUserLoginURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPreAuthUserLoginURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPreAuthUserLoginURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void loadBillingItemsExInRangeCompletedEventHandler(object sender, loadBillingItemsExInRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadBillingItemsExInRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadBillingItemsExInRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBillingItemEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBillingItemEx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSchedules2ByFilekeyCompletedEventHandler(object sender, extractEmployeeSchedules2ByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSchedules2ByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSchedules2ByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeSchedule2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeSchedule2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSchedules2ByIDNumCompletedEventHandler(object sender, extractEmployeeSchedules2ByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSchedules2ByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSchedules2ByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeSchedule2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeSchedule2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractRangedSchedules2UsingHyperQueryCompletedEventHandler(object sender, extractRangedSchedules2UsingHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractRangedSchedules2UsingHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractRangedSchedules2UsingHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeSchedule2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeSchedule2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeSchedule2ByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeSchedule2ByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeScheduleByUniqueIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void submitTimeOffRequestExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void submitTimeOffRequestMessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void empRemoveLeaveRequestEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void empRemoveLeaveRequestEntryMessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void approveLeaveRequestEntryExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void approveLeaveRequestEntryMessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void denyLeaveRequestEntryExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void denyLeaveRequestEntryMessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void leaveRequestIsCancelableCompletedEventHandler(object sender, leaveRequestIsCancelableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class leaveRequestIsCancelableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal leaveRequestIsCancelableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void leaveRequestIsRemovableCompletedEventHandler(object sender, leaveRequestIsRemovableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class leaveRequestIsRemovableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal leaveRequestIsRemovableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void approveCancelLeaveRequestEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void approveCancelLeaveRequestEntryMessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void denyCancelLeaveRequestEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void denyCancelLeaveRequestEntryMessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void empCancelLeaveRequestEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void empCancelLeaveRequestEntryMessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeLeaveRequestHistCompletedEventHandler(object sender, extractEmployeeLeaveRequestHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeLeaveRequestHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeLeaveRequestHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTimeOffRequestHist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTimeOffRequestHist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeLeaveRequestCompletedEventHandler(object sender, extractEmployeeLeaveRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeLeaveRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeLeaveRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeTimeOffRequest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeTimeOffRequest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeBenefitBalancesAsOfByFileKeyCompletedEventHandler(object sender, getEmployeeBenefitBalancesAsOfByFileKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeBenefitBalancesAsOfByFileKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeBenefitBalancesAsOfByFileKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpBenefitBalance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpBenefitBalance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeBenefitBalancesAsOfByIDNumCompletedEventHandler(object sender, getEmployeeBenefitBalancesAsOfByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeBenefitBalancesAsOfByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeBenefitBalancesAsOfByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpBenefitBalance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpBenefitBalance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompletedEventHandler(object sender, extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeBenefitBalancesAsOfUsingHyperQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpBenefitBalance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpBenefitBalance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeTransferRateCompletedEventHandler(object sender, getEmployeeTransferRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeTransferRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeTransferRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpTranRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpTranRate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void addEmployeeTransferRateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateEmployeeTransferRateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeTransferRateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeTransferRatesByFileKeyCompletedEventHandler(object sender, getEmployeeTransferRatesByFileKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeTransferRatesByFileKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeTransferRatesByFileKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpTranRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpTranRate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeTransferRatesByIDNumCompletedEventHandler(object sender, getEmployeeTransferRatesByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeTransferRatesByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeTransferRatesByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpTranRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpTranRate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesListBasicFromHyperQueryWorkgroupFilterCompletedEventHandler(object sender, getEmployeesListBasicFromHyperQueryWorkgroupFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesListBasicFromHyperQueryWorkgroupFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesListBasicFromHyperQueryWorkgroupFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesListDetailFromHyperQueryWorkgroupFilterCompletedEventHandler(object sender, getEmployeesListDetailFromHyperQueryWorkgroupFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesListDetailFromHyperQueryWorkgroupFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesListDetailFromHyperQueryWorkgroupFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompletedEventHandler(object sender, getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesListDetail2FromHyperQueryWorkgroupFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeDetail2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeDetail2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyEmployeeACACompletedEventHandler(object sender, getEmptyEmployeeACACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyEmployeeACACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyEmployeeACACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeACA Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeACA)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeACAByIDNumCompletedEventHandler(object sender, getEmployeeACAByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeACAByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeACAByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeACA Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeACA)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeACABySSNCompletedEventHandler(object sender, getEmployeeACABySSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeACABySSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeACABySSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeACA Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeACA)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeACAByBadgeCompletedEventHandler(object sender, getEmployeeACAByBadgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeACAByBadgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeACAByBadgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeACA Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeACA)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeACAByFilekeyCompletedEventHandler(object sender, getEmployeeACAByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeACAByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeACAByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeACA Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeACA)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void setEmployeeACACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getControlGroupsCompletedEventHandler(object sender, getControlGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getControlGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getControlGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeControlGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeControlGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void changeEmployeeACAFullTimeStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void restartEmployeeACAPeriodsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void revertEmployeeACAAssignmentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFirstDateOfACAServiceHoursCompletedEventHandler(object sender, getFirstDateOfACAServiceHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFirstDateOfACAServiceHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFirstDateOfACAServiceHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeActivityLogCompletedEventHandler(object sender, getEmployeeActivityLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeActivityLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeActivityLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpActLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpActLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void flushEmployeeActivityLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getExpiredUnaddressedMeasurementPeriodsCompletedEventHandler(object sender, getExpiredUnaddressedMeasurementPeriodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExpiredUnaddressedMeasurementPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExpiredUnaddressedMeasurementPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeACA[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeACA[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeMeasurementPeriodRecommendationCompletedEventHandler(object sender, getEmployeeMeasurementPeriodRecommendationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeMeasurementPeriodRecommendationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeMeasurementPeriodRecommendationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeACAMperiodRecommendation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeACAMperiodRecommendation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CloseEmployeeMeasurementPeriodCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReverseClosedEmployeeMeasurementPeriodCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeACADateRangeCompletedEventHandler(object sender, getEmployeeACADateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeACADateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeACADateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeDateRange Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeDateRange)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getClosedEmployeeMeasurementPeriodsCompletedEventHandler(object sender, getClosedEmployeeMeasurementPeriodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClosedEmployeeMeasurementPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClosedEmployeeMeasurementPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpClosedMeasurementPeriod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpClosedMeasurementPeriod[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeACAPeriodsCompletedEventHandler(object sender, getEmployeeACAPeriodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeACAPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeACAPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpACAPeriod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpACAPeriod[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeMeasurementPeriodWasClosedCompletedEventHandler(object sender, getEmployeeMeasurementPeriodWasClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeMeasurementPeriodWasClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeMeasurementPeriodWasClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmployeeEarliestStabilityPeriodStartCompletedEventHandler(object sender, getEmployeeEarliestStabilityPeriodStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeEarliestStabilityPeriodStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeEarliestStabilityPeriodStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmpESSPreAuthLoginURLCompletedEventHandler(object sender, getEmpESSPreAuthLoginURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmpESSPreAuthLoginURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmpESSPreAuthLoginURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeEmployeeRateHistoryEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void maintainPayrollEmployeeCompletedEventHandler(object sender, maintainPayrollEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class maintainPayrollEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal maintainPayrollEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void submitPayrollEmployeesCompletedEventHandler(object sender, submitPayrollEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitPayrollEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitPayrollEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractImportLogsFromImportEventCompletedEventHandler(object sender, extractImportLogsFromImportEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractImportLogsFromImportEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractImportLogsFromImportEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeImportLogItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeImportLogItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEmptyPayrollEmployeeCompletedEventHandler(object sender, getEmptyPayrollEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmptyPayrollEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmptyPayrollEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayrollEmployee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayrollEmployee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getPayrollEmployeeCompletedEventHandler(object sender, getPayrollEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPayrollEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPayrollEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAePayrollEmployee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAePayrollEmployee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractNewDBElementsCompletedEventHandler(object sender, extractNewDBElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractNewDBElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractNewDBElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeNewDBElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeNewDBElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateNewDBElementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractDeptXlateItemsCompletedEventHandler(object sender, extractDeptXlateItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractDeptXlateItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractDeptXlateItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeDeptXLateItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeDeptXLateItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateDeptXlateItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void addDeptXlateItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void removeDeptXlateItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractACALEDSummariesCompletedEventHandler(object sender, extractACALEDSummariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractACALEDSummariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractACALEDSummariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeACALEDMonthSumm[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeACALEDMonthSumm[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractACAEmployeesFTStatusAsOfCompletedEventHandler(object sender, extractACAEmployeesFTStatusAsOfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractACAEmployeesFTStatusAsOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractACAEmployeesFTStatusAsOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeACA[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeACA[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void submitEmployeeEarningsCompletedEventHandler(object sender, submitEmployeeEarningsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitEmployeeEarningsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitEmployeeEarningsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeGeoPunchByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void appendEmployeeGeoPunchByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void punchEmployeeGeoNowByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void punchEmployeeGeoNowByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void registerEmployeeGPSPresenceByFilekeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void registerEmployeeGPSPresenceByIDNumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeGPSRegistrationsByIDNumCompletedEventHandler(object sender, extractEmployeeGPSRegistrationsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeGPSRegistrationsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeGPSRegistrationsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpGeoRegistration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpGeoRegistration[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeGPSRegistrationsByFilekeyCompletedEventHandler(object sender, extractEmployeeGPSRegistrationsByFilekeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeGPSRegistrationsByFilekeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeGPSRegistrationsByFilekeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpGeoRegistration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpGeoRegistration[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSelfServiceOperationsByFileKeyCompletedEventHandler(object sender, extractEmployeeSelfServiceOperationsByFileKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSelfServiceOperationsByFileKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSelfServiceOperationsByFileKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeSelfServiceOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeSelfServiceOperation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void extractEmployeeSelfServiceOperationsByIDNumCompletedEventHandler(object sender, extractEmployeeSelfServiceOperationsByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractEmployeeSelfServiceOperationsByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractEmployeeSelfServiceOperationsByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmployeeSelfServiceOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmployeeSelfServiceOperation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void employeeQuickBalanceAsOfByFileKeyCompletedEventHandler(object sender, employeeQuickBalanceAsOfByFileKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class employeeQuickBalanceAsOfByFileKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal employeeQuickBalanceAsOfByFileKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpBenefitBalanceDate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpBenefitBalanceDate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void employeeQuickBalanceAsOfByIDNumCompletedEventHandler(object sender, employeeQuickBalanceAsOfByIDNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class employeeQuickBalanceAsOfByIDNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal employeeQuickBalanceAsOfByIDNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeEmpBenefitBalanceDate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeEmpBenefitBalanceDate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSystemImportsBasicCompletedEventHandler(object sender, getSystemImportsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemImportsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemImportsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAeBasicDataItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAeBasicDataItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void executeImportOperationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591